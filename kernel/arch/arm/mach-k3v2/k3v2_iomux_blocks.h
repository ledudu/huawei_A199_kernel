/*************************************************************
 *CAUTION : This file is Auto Generated by gen_io_cfg.pl based on *.xls
 *so,don't modify this file manually!
 *************************************************************/
#ifndef __MACH_K3V2_IOMUX_BLOCKS_H
#define __MACH_K3V2_IOMUX_BLOCKS_H
#include "iomux.h"
#include "k3v2_iomux_pins.h"
#include <hsad/config_interface.h>

extern struct iomux_ops iomux_block_ops;
#define IOMUX_BLOCK(_iomux_block, _block_name, _block_func, _pins)	\
struct iomux_block _iomux_block = {\
	.block_name  = _block_name,\
	.block_func   =  _block_func,\
.pins = _pins,\
.ops = &iomux_block_ops,\
.init = 0,\
};


/******************pins ****************/

struct  iomux_pin *i2c0_es_pins[] = {
&gpio_084, &gpio_085, NULL,
};
struct  iomux_pin *i2c1_es_pins[] = {
&gpio_086, &gpio_087, NULL,
};
struct  iomux_pin *i2c2_es_pins[] = {
&gpio_063, &gpio_064, NULL,
};
struct  iomux_pin *i2c3_es_pins[] = {
&gpio_057, &gpio_058, NULL,
};
struct  iomux_pin *spi0_es_pins[] = {
&gpio_106, &gpio_107, &gpio_108, NULL,
};
struct  iomux_pin *spi0_cs_es_pins[] = {
&gpio_109, &gpio_110, &gpio_111, &gpio_112, NULL,
};
struct  iomux_pin *uart0_es_pins[] = {
&gpio_119, &gpio_120, NULL,
};
struct  iomux_pin *uart1_es_pins[] = {
&gpio_121, &gpio_122, &gpio_123, &gpio_124, NULL,
};
struct  iomux_pin *uart2_es_pins[] = {
&gpio_127, &gpio_128, NULL,
};
struct  iomux_pin *uart3_es_pins[] = {
&gpio_154, &gpio_155, &gpio_160, &gpio_161, NULL,
};
struct  iomux_pin *uart4_es_pins[] = {
&gpio_162, &gpio_163, &gpio_164, &gpio_165, NULL,
};
struct  iomux_pin *kpc_es_pins[] = {
&gpio_129, &gpio_130, &gpio_131, &gpio_137, &gpio_138, &gpio_139, NULL,
};
struct  iomux_pin *sd_es_pins[] = {
&gpio_088, &gpio_089, &gpio_090, &gpio_091, &gpio_092, &gpio_093, NULL,
};
struct  iomux_pin *nand_es_pins[] = {
&gpio_008, &gpio_009, &gpio_010, &gpio_011, &gpio_012, &gpio_013, &gpio_014, &gpio_015, &gpio_016, &gpio_017, &gpio_018, &gpio_019, &gpio_020, &gpio_021, &gpio_022, &gpio_023, &gpio_024, &gpio_025, &gpio_026, &gpio_027, &gpio_028, &gpio_029, &gpio_030, &gpio_031, &gpio_032, &gpio_033, &gpio_034, &gpio_035, NULL,
};
struct  iomux_pin *sdio_es_pins[] = {
&gpio_100, &gpio_101, &gpio_102, &gpio_103, &gpio_104, &gpio_105, NULL,
};
struct  iomux_pin *btpm_es_pins[] = {
&gpio_166, &gpio_167, NULL,
};
struct  iomux_pin *btpwr_es_pins[] = {
&gpio_168, &gpio_169, NULL,
};
struct  iomux_pin *gps_boardcom_es_pins[] = {
&gpio_151, &gpio_152, NULL,
};
struct  iomux_pin *ts_es_pins[] = {
&gpio_156, &gpio_157, NULL,
};
struct  iomux_pin *lcd_es_pins[] = {
&gpio_003, &gpio_135, &gpio_136, &gpio_171, NULL,
};
struct  iomux_pin *pwm_es_pins[] = {
&gpio_149, &gpio_150, NULL,
};
struct  iomux_pin *hdmi_es_pins[] = {
&gpio_038, &gpio_039, &gpio_040, &gpio_041, NULL,
};
struct  iomux_pin *wifi_es_pins[] = {
&gpio_002, &gpio_004, NULL,
};
struct  iomux_pin *isp_dvp_es_pins[] = {
&gpio_042, &gpio_043, &gpio_044, &gpio_045, &gpio_046, &gpio_047, &gpio_048, &gpio_049, &gpio_052, &gpio_053, &gpio_054, NULL,
};
struct  iomux_pin *isp_i2c_es_pins[] = {
&gpio_055, &gpio_056, NULL,
};
struct  iomux_pin *isp_reset_es_pins[] = {
&gpio_059, &gpio_060, NULL,
};
struct  iomux_pin *isp_es_pins[] = {
&gpio_067, &gpio_068, &gpio_069, &gpio_070, &gpio_071, &gpio_072, &gpio_073, &gpio_075, NULL,
};
struct  iomux_pin *isp_flash_es_pins[] = {
&gpio_065, &gpio_066, &gpio_076, NULL,
};
struct  iomux_pin *charger_es_pins[] = {
&gpio_005, &gpio_074, NULL,
};
struct  iomux_pin *gsensor_es_pins[] = {
&gpio_051, &gpio_148, NULL,
};
struct  iomux_pin *audio_spk_es_pins[] = {
&gpio_117, NULL,
};
struct  iomux_pin *audio_eph_es_pins[] = {
&gpio_118, NULL,
};
struct  iomux_pin *modem_es_pins[] = {
&gpio_094, &gpio_095, &gpio_096, &gpio_097, &gpio_098, &gpio_113, &gpio_114, &gpio_115, NULL,
};
struct  iomux_pin *vbusdrv_es_pins[] = {
&gpio_082, NULL,
};

/******************IOMUX_BLOCK****************/

IOMUX_BLOCK(block_i2c0_es, "block_i2c0_es", NORMAL, i2c0_es_pins)
IOMUX_BLOCK(block_i2c1_es, "block_i2c1_es", NORMAL, i2c1_es_pins)
IOMUX_BLOCK(block_i2c2_es, "block_i2c2_es", NORMAL, i2c2_es_pins)
IOMUX_BLOCK(block_i2c3_es, "block_i2c3_es", NORMAL, i2c3_es_pins)
IOMUX_BLOCK(block_spi0_es, "block_spi0_es", NORMAL, spi0_es_pins)
IOMUX_BLOCK(block_spi0_cs_es, "block_spi0_cs_es", NORMAL, spi0_cs_es_pins)
IOMUX_BLOCK(block_uart0_es, "block_uart0_es", NORMAL, uart0_es_pins)
IOMUX_BLOCK(block_uart1_es, "block_uart1_es", NORMAL, uart1_es_pins)
IOMUX_BLOCK(block_uart2_es, "block_uart2_es", NORMAL, uart2_es_pins)
IOMUX_BLOCK(block_uart3_es, "block_uart3_es", NORMAL, uart3_es_pins)
IOMUX_BLOCK(block_uart4_es, "block_uart4_es", NORMAL, uart4_es_pins)
IOMUX_BLOCK(block_kpc_es, "block_kpc_es", NORMAL, kpc_es_pins)
IOMUX_BLOCK(block_sd_es, "block_sd_es", NORMAL, sd_es_pins)
IOMUX_BLOCK(block_nand_es, "block_nand_es", NORMAL, nand_es_pins)
IOMUX_BLOCK(block_sdio_es, "block_sdio_es", NORMAL, sdio_es_pins)
IOMUX_BLOCK(block_btpm_es, "block_btpm_es", NORMAL, btpm_es_pins)
IOMUX_BLOCK(block_btpwr_es, "block_btpwr_es", NORMAL, btpwr_es_pins)
IOMUX_BLOCK(block_gps_boardcom_es, "block_gps_boardcom_es", NORMAL, gps_boardcom_es_pins)
IOMUX_BLOCK(block_ts_es, "block_ts_es", NORMAL, ts_es_pins)
IOMUX_BLOCK(block_lcd_es, "block_lcd_es", NORMAL, lcd_es_pins)
IOMUX_BLOCK(block_pwm_es, "block_pwm_es", NORMAL, pwm_es_pins)
IOMUX_BLOCK(block_hdmi_es, "block_hdmi_es", NORMAL, hdmi_es_pins)
IOMUX_BLOCK(block_wifi_es, "block_wifi_es", NORMAL, wifi_es_pins)
IOMUX_BLOCK(block_isp_dvp_es, "block_isp_dvp_es", NORMAL, isp_dvp_es_pins)
IOMUX_BLOCK(block_isp_i2c_es, "block_isp_i2c_es", NORMAL, isp_i2c_es_pins)
IOMUX_BLOCK(block_isp_reset_es, "block_isp_reset_es", NORMAL, isp_reset_es_pins)
IOMUX_BLOCK(block_isp_es, "block_isp_es", NORMAL, isp_es_pins)
IOMUX_BLOCK(block_isp_flash_es, "block_isp_flash_es", NORMAL, isp_flash_es_pins)
IOMUX_BLOCK(block_charger_es, "block_charger_es", NORMAL, charger_es_pins)
IOMUX_BLOCK(block_gsensor_es, "block_gsensor_es", NORMAL, gsensor_es_pins)
IOMUX_BLOCK(block_audio_spk_es, "block_audio_spk_es", NORMAL, audio_spk_es_pins)
IOMUX_BLOCK(block_audio_eph_es, "block_audio_eph_es", NORMAL, audio_eph_es_pins)
IOMUX_BLOCK(block_modem_es, "block_modem_es", NORMAL, modem_es_pins)
IOMUX_BLOCK(block_vbusdrv_es, "block_vbusdrv_es", NORMAL, vbusdrv_es_pins)

/******************normal func ****************/

enum lowlayer_func i2c0_es_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func i2c1_es_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func i2c2_es_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func i2c3_es_func_normal[] = {FUNC2, FUNC2, -INVALID,};
enum lowlayer_func spi0_es_func_normal[] = {FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func spi0_cs_es_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func uart0_es_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func uart1_es_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func uart2_es_func_normal[] = {FUNC2, FUNC2, -INVALID,};
enum lowlayer_func uart3_es_func_normal[] = {FUNC2, FUNC2, FUNC2, FUNC2, -INVALID,};
enum lowlayer_func uart4_es_func_normal[] = {FUNC2, FUNC2, FUNC2, FUNC2, -INVALID,};
enum lowlayer_func kpc_es_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func sd_es_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func nand_es_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func sdio_es_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func btpm_es_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func btpwr_es_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func gps_boardcom_es_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func ts_es_func_normal[] = {RESERVE, RESERVE, -INVALID,};
enum lowlayer_func lcd_es_func_normal[] = {FUNC0, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func pwm_es_func_normal[] = {FUNC0, FUNC1, -INVALID,};
enum lowlayer_func hdmi_es_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func wifi_es_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_dvp_es_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_i2c_es_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_reset_es_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_es_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_flash_es_func_normal[] = {FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func charger_es_func_normal[] = {FUNC0, FUNC1, -INVALID,};
enum lowlayer_func gsensor_es_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func audio_spk_es_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func audio_eph_es_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func modem_es_func_normal[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func vbusdrv_es_func_normal[] = {FUNC1, -INVALID,};

/******************lowpower func****************/

enum lowlayer_func i2c0_es_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func i2c1_es_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func i2c2_es_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func i2c3_es_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func spi0_es_func_lowpower[] = {FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func spi0_cs_es_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart0_es_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart1_es_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart2_es_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart3_es_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart4_es_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func kpc_es_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func sd_es_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func nand_es_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func sdio_es_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func btpm_es_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func btpwr_es_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func gps_boardcom_es_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func ts_es_func_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum lowlayer_func lcd_es_func_lowpower[] = {FUNC0, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func pwm_es_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func hdmi_es_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func wifi_es_func_lowpower[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_dvp_es_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func isp_i2c_es_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func isp_reset_es_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func isp_es_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC0, -INVALID,};
enum lowlayer_func isp_flash_es_func_lowpower[] = {FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func charger_es_func_lowpower[] = {FUNC0, FUNC1, -INVALID,};
enum lowlayer_func gsensor_es_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func audio_spk_es_func_lowpower[] = {FUNC1, -INVALID,};
enum lowlayer_func audio_eph_es_func_lowpower[] = {FUNC1, -INVALID,};
enum lowlayer_func modem_es_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func vbusdrv_es_func_lowpower[] = {FUNC0, -INVALID,};

/******************normal pullud****************/

enum pull_updown i2c0_es_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c1_es_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c2_es_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c3_es_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown spi0_es_pullud_normal[] = {PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown spi0_cs_es_pullud_normal[] = {PULLDOWN, PULLDOWN, NOPULL, NOPULL, -INVALID,};
enum pull_updown uart0_es_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown uart1_es_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown uart2_es_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown uart3_es_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown uart4_es_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown kpc_es_pullud_normal[] = {PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, -INVALID,};
enum pull_updown sd_es_pullud_normal[] = {NOPULL, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, -INVALID,};
enum pull_updown nand_es_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown sdio_es_pullud_normal[] = {NOPULL, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, -INVALID,};
enum pull_updown btpm_es_pullud_normal[] = {PULLUP, NOPULL, -INVALID,};
enum pull_updown btpwr_es_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown gps_boardcom_es_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown ts_es_pullud_normal[] = {NOPULL, PULLUP, -INVALID,};
enum pull_updown lcd_es_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown pwm_es_pullud_normal[] = {NOPULL, PULLDOWN, -INVALID,};
enum pull_updown hdmi_es_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown wifi_es_pullud_normal[] = {NOPULL, PULLDOWN, -INVALID,};
enum pull_updown isp_dvp_es_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_i2c_es_pullud_normal[] = {PULLUP, PULLUP, -INVALID,};
enum pull_updown isp_reset_es_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_es_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_flash_es_pullud_normal[] = {NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown charger_es_pullud_normal[] = {PULLUP, NOPULL, -INVALID,};
enum pull_updown gsensor_es_pullud_normal[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown audio_spk_es_pullud_normal[] = {NOPULL, -INVALID,};
enum pull_updown audio_eph_es_pullud_normal[] = {NOPULL, -INVALID,};
enum pull_updown modem_es_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown vbusdrv_es_pullud_normal[] = {NOPULL, -INVALID,};

/******************lowpower pullud****************/

enum pull_updown i2c0_es_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c1_es_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c2_es_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c3_es_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown spi0_es_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown spi0_cs_es_pullud_lowpower[] = {PULLDOWN, PULLDOWN, NOPULL, NOPULL, -INVALID,};
enum pull_updown uart0_es_pullud_lowpower[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown uart1_es_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown uart2_es_pullud_lowpower[] = {PULLDOWN, NOPULL, -INVALID,};
enum pull_updown uart3_es_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown uart4_es_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown kpc_es_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown sd_es_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown nand_es_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown sdio_es_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown btpm_es_pullud_lowpower[] = {PULLDOWN, NOPULL, -INVALID,};
enum pull_updown btpwr_es_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown gps_boardcom_es_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown ts_es_pullud_lowpower[] = {NOPULL, PULLUP, -INVALID,};
enum pull_updown lcd_es_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown pwm_es_pullud_lowpower[] = {NOPULL, PULLDOWN, -INVALID,};
enum pull_updown hdmi_es_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, PULLDOWN, -INVALID,};
enum pull_updown wifi_es_pullud_lowpower[] = {NOPULL, PULLDOWN, -INVALID,};
enum pull_updown isp_dvp_es_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown isp_i2c_es_pullud_lowpower[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown isp_reset_es_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_es_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_flash_es_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown charger_es_pullud_lowpower[] = {PULLUP, NOPULL, -INVALID,};
enum pull_updown gsensor_es_pullud_lowpower[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown audio_spk_es_pullud_lowpower[] = {NOPULL, -INVALID,};
enum pull_updown audio_eph_es_pullud_lowpower[] = {NOPULL, -INVALID,};
enum pull_updown modem_es_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, NOPULL, PULLDOWN, PULLDOWN, NOPULL, NOPULL, -INVALID,};
enum pull_updown vbusdrv_es_pullud_lowpower[] = {NOPULL, -INVALID,};

/******************normal drv****************/

enum drive_strength i2c0_es_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c1_es_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c2_es_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c3_es_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength spi0_es_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength spi0_cs_es_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength uart0_es_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength uart1_es_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength uart2_es_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength uart3_es_drv_normal[] = {LEVEL2, RESERVE, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength uart4_es_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength kpc_es_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength sd_es_drv_normal[] = {LEVEL2, LEVEL3, LEVEL3, LEVEL3, LEVEL3, LEVEL3, -INVALID,};
enum drive_strength nand_es_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, RESERVE, RESERVE, RESERVE, RESERVE, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength sdio_es_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength btpm_es_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength btpwr_es_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength gps_boardcom_es_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength ts_es_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength lcd_es_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength pwm_es_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength hdmi_es_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength wifi_es_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_dvp_es_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_i2c_es_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_reset_es_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_es_drv_normal[] = {LEVEL0, LEVEL0, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_flash_es_drv_normal[] = {RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength charger_es_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength gsensor_es_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength audio_spk_es_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength audio_eph_es_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength modem_es_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength vbusdrv_es_drv_normal[] = {LEVEL2, -INVALID,};

/******************lowpower drv****************/

enum drive_strength i2c0_es_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c1_es_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c2_es_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c3_es_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength spi0_es_drv_lowpower[] = {LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength spi0_cs_es_drv_lowpower[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength uart0_es_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength uart1_es_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength uart2_es_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength uart3_es_drv_lowpower[] = {LEVEL2, RESERVE, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength uart4_es_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength kpc_es_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength sd_es_drv_lowpower[] = {LEVEL2, LEVEL3, LEVEL3, LEVEL3, LEVEL3, LEVEL3, -INVALID,};
enum drive_strength nand_es_drv_lowpower[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, RESERVE, RESERVE, RESERVE, RESERVE, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, -INVALID,};
enum drive_strength sdio_es_drv_lowpower[] = {LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, -INVALID,};
enum drive_strength btpm_es_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength btpwr_es_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength gps_boardcom_es_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength ts_es_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength lcd_es_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength pwm_es_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength hdmi_es_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength wifi_es_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_dvp_es_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_i2c_es_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_reset_es_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_es_drv_lowpower[] = {LEVEL0, LEVEL0, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_flash_es_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength charger_es_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength gsensor_es_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength audio_spk_es_drv_lowpower[] = {RESERVE, -INVALID,};
enum drive_strength audio_eph_es_drv_lowpower[] = {RESERVE, -INVALID,};
enum drive_strength modem_es_drv_lowpower[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength vbusdrv_es_drv_lowpower[] = {LEVEL2, -INVALID,};

/******************config****************/

struct block_config i2c0_es_config[] = {
	[NORMAL] = {i2c0_es_func_normal, i2c0_es_pullud_normal, i2c0_es_drv_normal},
	[LOWPOWER] = {i2c0_es_func_lowpower, i2c0_es_pullud_lowpower, i2c0_es_drv_lowpower},
};
struct block_config i2c1_es_config[] = {
	[NORMAL] = {i2c1_es_func_normal, i2c1_es_pullud_normal, i2c1_es_drv_normal},
	[LOWPOWER] = {i2c1_es_func_lowpower, i2c1_es_pullud_lowpower, i2c1_es_drv_lowpower},
};
struct block_config i2c2_es_config[] = {
	[NORMAL] = {i2c2_es_func_normal, i2c2_es_pullud_normal, i2c2_es_drv_normal},
	[LOWPOWER] = {i2c2_es_func_lowpower, i2c2_es_pullud_lowpower, i2c2_es_drv_lowpower},
};
struct block_config i2c3_es_config[] = {
	[NORMAL] = {i2c3_es_func_normal, i2c3_es_pullud_normal, i2c3_es_drv_normal},
	[LOWPOWER] = {i2c3_es_func_lowpower, i2c3_es_pullud_lowpower, i2c3_es_drv_lowpower},
};
struct block_config spi0_es_config[] = {
	[NORMAL] = {spi0_es_func_normal, spi0_es_pullud_normal, spi0_es_drv_normal},
	[LOWPOWER] = {spi0_es_func_lowpower, spi0_es_pullud_lowpower, spi0_es_drv_lowpower},
};
struct block_config spi0_cs_es_config[] = {
	[NORMAL] = {spi0_cs_es_func_normal, spi0_cs_es_pullud_normal, spi0_cs_es_drv_normal},
	[LOWPOWER] = {spi0_cs_es_func_lowpower, spi0_cs_es_pullud_lowpower, spi0_cs_es_drv_lowpower},
};
struct block_config uart0_es_config[] = {
	[NORMAL] = {uart0_es_func_normal, uart0_es_pullud_normal, uart0_es_drv_normal},
	[LOWPOWER] = {uart0_es_func_lowpower, uart0_es_pullud_lowpower, uart0_es_drv_lowpower},
};
struct block_config uart1_es_config[] = {
	[NORMAL] = {uart1_es_func_normal, uart1_es_pullud_normal, uart1_es_drv_normal},
	[LOWPOWER] = {uart1_es_func_lowpower, uart1_es_pullud_lowpower, uart1_es_drv_lowpower},
};
struct block_config uart2_es_config[] = {
	[NORMAL] = {uart2_es_func_normal, uart2_es_pullud_normal, uart2_es_drv_normal},
	[LOWPOWER] = {uart2_es_func_lowpower, uart2_es_pullud_lowpower, uart2_es_drv_lowpower},
};
struct block_config uart3_es_config[] = {
	[NORMAL] = {uart3_es_func_normal, uart3_es_pullud_normal, uart3_es_drv_normal},
	[LOWPOWER] = {uart3_es_func_lowpower, uart3_es_pullud_lowpower, uart3_es_drv_lowpower},
};
struct block_config uart4_es_config[] = {
	[NORMAL] = {uart4_es_func_normal, uart4_es_pullud_normal, uart4_es_drv_normal},
	[LOWPOWER] = {uart4_es_func_lowpower, uart4_es_pullud_lowpower, uart4_es_drv_lowpower},
};
struct block_config kpc_es_config[] = {
	[NORMAL] = {kpc_es_func_normal, kpc_es_pullud_normal, kpc_es_drv_normal},
	[LOWPOWER] = {kpc_es_func_lowpower, kpc_es_pullud_lowpower, kpc_es_drv_lowpower},
};
struct block_config sd_es_config[] = {
	[NORMAL] = {sd_es_func_normal, sd_es_pullud_normal, sd_es_drv_normal},
	[LOWPOWER] = {sd_es_func_lowpower, sd_es_pullud_lowpower, sd_es_drv_lowpower},
};
struct block_config nand_es_config[] = {
	[NORMAL] = {nand_es_func_normal, nand_es_pullud_normal, nand_es_drv_normal},
	[LOWPOWER] = {nand_es_func_lowpower, nand_es_pullud_lowpower, nand_es_drv_lowpower},
};
struct block_config sdio_es_config[] = {
	[NORMAL] = {sdio_es_func_normal, sdio_es_pullud_normal, sdio_es_drv_normal},
	[LOWPOWER] = {sdio_es_func_lowpower, sdio_es_pullud_lowpower, sdio_es_drv_lowpower},
};
struct block_config btpm_es_config[] = {
	[NORMAL] = {btpm_es_func_normal, btpm_es_pullud_normal, btpm_es_drv_normal},
	[LOWPOWER] = {btpm_es_func_lowpower, btpm_es_pullud_lowpower, btpm_es_drv_lowpower},
};
struct block_config btpwr_es_config[] = {
	[NORMAL] = {btpwr_es_func_normal, btpwr_es_pullud_normal, btpwr_es_drv_normal},
	[LOWPOWER] = {btpwr_es_func_lowpower, btpwr_es_pullud_lowpower, btpwr_es_drv_lowpower},
};
struct block_config gps_boardcom_es_config[] = {
	[NORMAL] = {gps_boardcom_es_func_normal, gps_boardcom_es_pullud_normal, gps_boardcom_es_drv_normal},
	[LOWPOWER] = {gps_boardcom_es_func_lowpower, gps_boardcom_es_pullud_lowpower, gps_boardcom_es_drv_lowpower},
};
struct block_config ts_es_config[] = {
	[NORMAL] = {ts_es_func_normal, ts_es_pullud_normal, ts_es_drv_normal},
	[LOWPOWER] = {ts_es_func_lowpower, ts_es_pullud_lowpower, ts_es_drv_lowpower},
};
struct block_config lcd_es_config[] = {
	[NORMAL] = {lcd_es_func_normal, lcd_es_pullud_normal, lcd_es_drv_normal},
	[LOWPOWER] = {lcd_es_func_lowpower, lcd_es_pullud_lowpower, lcd_es_drv_lowpower},
};
struct block_config pwm_es_config[] = {
	[NORMAL] = {pwm_es_func_normal, pwm_es_pullud_normal, pwm_es_drv_normal},
	[LOWPOWER] = {pwm_es_func_lowpower, pwm_es_pullud_lowpower, pwm_es_drv_lowpower},
};
struct block_config hdmi_es_config[] = {
	[NORMAL] = {hdmi_es_func_normal, hdmi_es_pullud_normal, hdmi_es_drv_normal},
	[LOWPOWER] = {hdmi_es_func_lowpower, hdmi_es_pullud_lowpower, hdmi_es_drv_lowpower},
};
struct block_config wifi_es_config[] = {
	[NORMAL] = {wifi_es_func_normal, wifi_es_pullud_normal, wifi_es_drv_normal},
	[LOWPOWER] = {wifi_es_func_lowpower, wifi_es_pullud_lowpower, wifi_es_drv_lowpower},
};
struct block_config isp_dvp_es_config[] = {
	[NORMAL] = {isp_dvp_es_func_normal, isp_dvp_es_pullud_normal, isp_dvp_es_drv_normal},
	[LOWPOWER] = {isp_dvp_es_func_lowpower, isp_dvp_es_pullud_lowpower, isp_dvp_es_drv_lowpower},
};
struct block_config isp_i2c_es_config[] = {
	[NORMAL] = {isp_i2c_es_func_normal, isp_i2c_es_pullud_normal, isp_i2c_es_drv_normal},
	[LOWPOWER] = {isp_i2c_es_func_lowpower, isp_i2c_es_pullud_lowpower, isp_i2c_es_drv_lowpower},
};
struct block_config isp_reset_es_config[] = {
	[NORMAL] = {isp_reset_es_func_normal, isp_reset_es_pullud_normal, isp_reset_es_drv_normal},
	[LOWPOWER] = {isp_reset_es_func_lowpower, isp_reset_es_pullud_lowpower, isp_reset_es_drv_lowpower},
};
struct block_config isp_es_config[] = {
	[NORMAL] = {isp_es_func_normal, isp_es_pullud_normal, isp_es_drv_normal},
	[LOWPOWER] = {isp_es_func_lowpower, isp_es_pullud_lowpower, isp_es_drv_lowpower},
};
struct block_config isp_flash_es_config[] = {
	[NORMAL] = {isp_flash_es_func_normal, isp_flash_es_pullud_normal, isp_flash_es_drv_normal},
	[LOWPOWER] = {isp_flash_es_func_lowpower, isp_flash_es_pullud_lowpower, isp_flash_es_drv_lowpower},
};
struct block_config charger_es_config[] = {
	[NORMAL] = {charger_es_func_normal, charger_es_pullud_normal, charger_es_drv_normal},
	[LOWPOWER] = {charger_es_func_lowpower, charger_es_pullud_lowpower, charger_es_drv_lowpower},
};
struct block_config gsensor_es_config[] = {
	[NORMAL] = {gsensor_es_func_normal, gsensor_es_pullud_normal, gsensor_es_drv_normal},
	[LOWPOWER] = {gsensor_es_func_lowpower, gsensor_es_pullud_lowpower, gsensor_es_drv_lowpower},
};
struct block_config audio_spk_es_config[] = {
	[NORMAL] = {audio_spk_es_func_normal, audio_spk_es_pullud_normal, audio_spk_es_drv_normal},
	[LOWPOWER] = {audio_spk_es_func_lowpower, audio_spk_es_pullud_lowpower, audio_spk_es_drv_lowpower},
};
struct block_config audio_eph_es_config[] = {
	[NORMAL] = {audio_eph_es_func_normal, audio_eph_es_pullud_normal, audio_eph_es_drv_normal},
	[LOWPOWER] = {audio_eph_es_func_lowpower, audio_eph_es_pullud_lowpower, audio_eph_es_drv_lowpower},
};
struct block_config modem_es_config[] = {
	[NORMAL] = {modem_es_func_normal, modem_es_pullud_normal, modem_es_drv_normal},
	[LOWPOWER] = {modem_es_func_lowpower, modem_es_pullud_lowpower, modem_es_drv_lowpower},
};
struct block_config vbusdrv_es_config[] = {
	[NORMAL] = {vbusdrv_es_func_normal, vbusdrv_es_pullud_normal, vbusdrv_es_drv_normal},
	[LOWPOWER] = {vbusdrv_es_func_lowpower, vbusdrv_es_pullud_lowpower, vbusdrv_es_drv_lowpower},
};


/******************pins ****************/

struct  iomux_pin *audio_es305_es_pins[] = {
&gpio_127, &gpio_128, NULL,
};
struct  iomux_pin *emmc_es_pins[] = {
&gpio_028, &gpio_029, &gpio_030, &gpio_031, &gpio_032, &gpio_033, &gpio_034, &gpio_035, &gpio_036, &gpio_037, NULL,
};

/******************IOMUX_BLOCK****************/

IOMUX_BLOCK(block_audio_es305_es, "block_audio_es305_es", NORMAL, audio_es305_es_pins)
IOMUX_BLOCK(block_emmc_es, "block_emmc_es", NORMAL, emmc_es_pins)

/******************normal func ****************/

enum lowlayer_func audio_es305_es_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func emmc_es_func_normal[] = {FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, -INVALID,};

/******************lowpower func****************/

enum lowlayer_func audio_es305_es_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func emmc_es_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC0, FUNC0, -INVALID,};

/******************normal pullud****************/

enum pull_updown audio_es305_es_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown emmc_es_pullud_normal[] = {PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, NOPULL, -INVALID,};

/******************lowpower pullud****************/

enum pull_updown audio_es305_es_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown emmc_es_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};

/******************normal drv****************/

enum drive_strength audio_es305_es_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength emmc_es_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};

/******************lowpower drv****************/

enum drive_strength audio_es305_es_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength emmc_es_drv_lowpower[] = {LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, -INVALID,};

/******************config****************/

struct block_config audio_es305_es_config[] = {
	[NORMAL] = {audio_es305_es_func_normal, audio_es305_es_pullud_normal, audio_es305_es_drv_normal},
	[LOWPOWER] = {audio_es305_es_func_lowpower, audio_es305_es_pullud_lowpower, audio_es305_es_drv_lowpower},
};
struct block_config emmc_es_config[] = {
	[NORMAL] = {emmc_es_func_normal, emmc_es_pullud_normal, emmc_es_drv_normal},
	[LOWPOWER] = {emmc_es_func_lowpower, emmc_es_pullud_lowpower, emmc_es_drv_lowpower},
};

struct block_table block_config_table_es[] = {
     BLOCK_CONFIG("block_i2c0", &block_i2c0_es, i2c0_es_config)
     BLOCK_CONFIG("block_i2c1", &block_i2c1_es, i2c1_es_config)
     BLOCK_CONFIG("block_i2c2", &block_i2c2_es, i2c2_es_config)
     BLOCK_CONFIG("block_i2c3", &block_i2c3_es, i2c3_es_config)
     BLOCK_CONFIG("block_spi0", &block_spi0_es, spi0_es_config)
     BLOCK_CONFIG("block_spi0_cs", &block_spi0_cs_es, spi0_cs_es_config)
     BLOCK_CONFIG("block_uart0", &block_uart0_es, uart0_es_config)
     BLOCK_CONFIG("block_uart1", &block_uart1_es, uart1_es_config)
     BLOCK_CONFIG("block_uart2", &block_uart2_es, uart2_es_config)
     BLOCK_CONFIG("block_uart3", &block_uart3_es, uart3_es_config)
     BLOCK_CONFIG("block_uart4", &block_uart4_es, uart4_es_config)
     BLOCK_CONFIG("block_kpc", &block_kpc_es, kpc_es_config)
     BLOCK_CONFIG("block_sd", &block_sd_es, sd_es_config)
     BLOCK_CONFIG("block_nand", &block_nand_es, nand_es_config)
     BLOCK_CONFIG("block_sdio", &block_sdio_es, sdio_es_config)
     BLOCK_CONFIG("block_btpm", &block_btpm_es, btpm_es_config)
     BLOCK_CONFIG("block_btpwr", &block_btpwr_es, btpwr_es_config)
     BLOCK_CONFIG("block_gps_boardcom", &block_gps_boardcom_es, gps_boardcom_es_config)
     BLOCK_CONFIG("block_ts", &block_ts_es, ts_es_config)
     BLOCK_CONFIG("block_lcd", &block_lcd_es, lcd_es_config)
     BLOCK_CONFIG("block_pwm", &block_pwm_es, pwm_es_config)
     BLOCK_CONFIG("block_hdmi", &block_hdmi_es, hdmi_es_config)
     BLOCK_CONFIG("block_wifi", &block_wifi_es, wifi_es_config)
     BLOCK_CONFIG("block_isp_dvp", &block_isp_dvp_es, isp_dvp_es_config)
     BLOCK_CONFIG("block_isp_i2c", &block_isp_i2c_es, isp_i2c_es_config)
     BLOCK_CONFIG("block_isp_reset", &block_isp_reset_es, isp_reset_es_config)
     BLOCK_CONFIG("block_isp", &block_isp_es, isp_es_config)
     BLOCK_CONFIG("block_isp_flash", &block_isp_flash_es, isp_flash_es_config)
     BLOCK_CONFIG("block_charger", &block_charger_es, charger_es_config)
     BLOCK_CONFIG("block_gsensor", &block_gsensor_es, gsensor_es_config)
     BLOCK_CONFIG("block_audio_spk", &block_audio_spk_es, audio_spk_es_config)
     BLOCK_CONFIG("block_audio_eph", &block_audio_eph_es, audio_eph_es_config)
     BLOCK_CONFIG("block_modem", &block_modem_es, modem_es_config)
     BLOCK_CONFIG("block_vbusdrv", &block_vbusdrv_es, vbusdrv_es_config)
     BLOCK_CONFIG("block_audio_es305", &block_audio_es305_es, audio_es305_es_config)
     BLOCK_CONFIG("block_emmc", &block_emmc_es, emmc_es_config)
     {NULL, NULL, NULL},
};


/******************pins ****************/

struct  iomux_pin *i2c0_cs_pins[] = {
&gpio_084_cs, &gpio_085_cs, NULL,
};
struct  iomux_pin *i2c1_cs_pins[] = {
&gpio_086_cs, &gpio_087_cs, NULL,
};
struct  iomux_pin *i2c2_cs_pins[] = {
&gpio_063_cs, &gpio_064_cs, NULL,
};
struct  iomux_pin *i2c3_cs_pins[] = {
&gpio_057_cs, &gpio_058_cs, NULL,
};
struct  iomux_pin *spi0_cs_pins[] = {
&gpio_106_cs, &gpio_107_cs, &gpio_108_cs, NULL,
};
struct  iomux_pin *spi0_cs_cs_pins[] = {
&gpio_109_cs, &gpio_110_cs, &gpio_111_cs, &gpio_112_cs, NULL,
};
struct  iomux_pin *uart0_cs_pins[] = {
&gpio_119_cs, &gpio_120_cs, NULL,
};
struct  iomux_pin *uart1_cs_pins[] = {
&gpio_121_cs, &gpio_122_cs, &gpio_123_cs, &gpio_124_cs, NULL,
};
struct  iomux_pin *uart2_cs_pins[] = {
&gpio_127_cs, &gpio_128_cs, NULL,
};
struct  iomux_pin *uart4_cs_pins[] = {
&gpio_162_cs, &gpio_163_cs, &gpio_164_cs, &gpio_165_cs, NULL,
};
struct  iomux_pin *kpc_cs_pins[] = {
&gpio_129_cs, &gpio_130_cs, &gpio_131_cs, &gpio_137_cs, &gpio_138_cs, &gpio_139_cs, NULL,
};
struct  iomux_pin *sd_cs_pins[] = {
&gpio_088_cs, &gpio_089_cs, &gpio_090_cs, &gpio_091_cs, &gpio_092_cs, &gpio_093_cs, NULL,
};
struct  iomux_pin *nand_cs_pins[] = {
&gpio_008_cs, &gpio_009_cs, &gpio_010_cs, &gpio_011_cs, &gpio_012_cs, &gpio_013_cs, &gpio_014_cs, &gpio_015_cs, &gpio_016_cs, &gpio_017_cs, &gpio_018_cs, &gpio_019_cs, &gpio_020_cs, &gpio_021_cs, &gpio_022_cs, &gpio_023_cs, &gpio_024_cs, &gpio_025_cs, &gpio_026_cs, &gpio_027_cs, &gpio_028_cs, &gpio_029_cs, &gpio_030_cs, &gpio_031_cs, &gpio_032_cs, &gpio_033_cs, &gpio_034_cs, &gpio_035_cs, NULL,
};
struct  iomux_pin *sdio_cs_pins[] = {
&gpio_100_cs, &gpio_101_cs, &gpio_102_cs, &gpio_103_cs, &gpio_104_cs, &gpio_105_cs, NULL,
};
struct  iomux_pin *btpm_cs_pins[] = {
&gpio_166_cs, &gpio_167_cs, NULL,
};
struct  iomux_pin *btpwr_cs_pins[] = {
&gpio_168_cs, &gpio_169_cs, NULL,
};
struct  iomux_pin *gps_boardcom_cs_pins[] = {
&gpio_151_cs, &gpio_152_cs, NULL,
};
struct  iomux_pin *ts_cs_pins[] = {
&gpio_156_cs, &gpio_157_cs, NULL,
};
struct  iomux_pin *lcd_cs_pins[] = {
&gpio_003_cs, &gpio_135_cs, &gpio_136_cs, &gpio_171_cs, NULL,
};
struct  iomux_pin *pwm_cs_pins[] = {
&gpio_149_cs, &gpio_150_cs, NULL,
};
struct  iomux_pin *hdmi_cs_pins[] = {
&gpio_038_cs, &gpio_039_cs, &gpio_040_cs, &gpio_041_cs, NULL,
};
struct  iomux_pin *wifi_cs_pins[] = {
&gpio_002_cs, &gpio_004_cs, NULL,
};
struct  iomux_pin *isp_dvp_cs_pins[] = {
&gpio_042_cs, &gpio_043_cs, &gpio_044_cs, &gpio_045_cs, &gpio_046_cs, &gpio_047_cs, &gpio_048_cs, &gpio_049_cs, &gpio_052_cs, &gpio_053_cs, &gpio_054_cs, NULL,
};
struct  iomux_pin *isp_i2c_cs_pins[] = {
&gpio_055_cs, &gpio_056_cs, NULL,
};
struct  iomux_pin *isp_reset_cs_pins[] = {
&gpio_059_cs, &gpio_060_cs, NULL,
};
struct  iomux_pin *isp_cs_pins[] = {
&gpio_067_cs, &gpio_068_cs, &gpio_069_cs, &gpio_070_cs, &gpio_071_cs, &gpio_072_cs, &gpio_073_cs, &gpio_075_cs, NULL,
};
struct  iomux_pin *isp_flash_cs_pins[] = {
&gpio_065_cs, &gpio_066_cs, &gpio_076_cs, NULL,
};
struct  iomux_pin *charger_cs_pins[] = {
&gpio_005_cs, &gpio_074_cs, NULL,
};
struct  iomux_pin *gsensor_cs_pins[] = {
&gpio_051_cs, &gpio_148_cs, NULL,
};
struct  iomux_pin *audio_spk_cs_pins[] = {
&gpio_117_cs, NULL,
};
struct  iomux_pin *audio_eph_cs_pins[] = {
&gpio_118_cs, NULL,
};
struct  iomux_pin *modem_cs_pins[] = {
&gpio_094_cs, &gpio_095_cs, &gpio_096_cs, &gpio_097_cs, &gpio_098_cs, &gpio_113_cs, &gpio_114_cs, &gpio_115_cs, NULL,
};
struct  iomux_pin *vbusdrv_cs_pins[] = {
&gpio_082_cs, NULL,
};
struct  iomux_pin *gps_spi_cs_pins[] = {
&gpio_154_cs, &gpio_155_cs, &gpio_160_cs, &gpio_161_cs, NULL,
};

/******************IOMUX_BLOCK****************/

IOMUX_BLOCK(block_i2c0_cs, "block_i2c0_cs", NORMAL, i2c0_cs_pins)
IOMUX_BLOCK(block_i2c1_cs, "block_i2c1_cs", NORMAL, i2c1_cs_pins)
IOMUX_BLOCK(block_i2c2_cs, "block_i2c2_cs", NORMAL, i2c2_cs_pins)
IOMUX_BLOCK(block_i2c3_cs, "block_i2c3_cs", NORMAL, i2c3_cs_pins)
IOMUX_BLOCK(block_spi0_cs, "block_spi0_cs", NORMAL, spi0_cs_pins)
IOMUX_BLOCK(block_spi0_cs_cs, "block_spi0_cs_cs", NORMAL, spi0_cs_cs_pins)
IOMUX_BLOCK(block_uart0_cs, "block_uart0_cs", NORMAL, uart0_cs_pins)
IOMUX_BLOCK(block_uart1_cs, "block_uart1_cs", NORMAL, uart1_cs_pins)
IOMUX_BLOCK(block_uart2_cs, "block_uart2_cs", NORMAL, uart2_cs_pins)
IOMUX_BLOCK(block_uart4_cs, "block_uart4_cs", NORMAL, uart4_cs_pins)
IOMUX_BLOCK(block_kpc_cs, "block_kpc_cs", NORMAL, kpc_cs_pins)
IOMUX_BLOCK(block_sd_cs, "block_sd_cs", NORMAL, sd_cs_pins)
IOMUX_BLOCK(block_nand_cs, "block_nand_cs", NORMAL, nand_cs_pins)
IOMUX_BLOCK(block_sdio_cs, "block_sdio_cs", NORMAL, sdio_cs_pins)
IOMUX_BLOCK(block_btpm_cs, "block_btpm_cs", NORMAL, btpm_cs_pins)
IOMUX_BLOCK(block_btpwr_cs, "block_btpwr_cs", NORMAL, btpwr_cs_pins)
IOMUX_BLOCK(block_gps_boardcom_cs, "block_gps_boardcom_cs", NORMAL, gps_boardcom_cs_pins)
IOMUX_BLOCK(block_ts_cs, "block_ts_cs", NORMAL, ts_cs_pins)
IOMUX_BLOCK(block_lcd_cs, "block_lcd_cs", NORMAL, lcd_cs_pins)
IOMUX_BLOCK(block_pwm_cs, "block_pwm_cs", NORMAL, pwm_cs_pins)
IOMUX_BLOCK(block_hdmi_cs, "block_hdmi_cs", NORMAL, hdmi_cs_pins)
IOMUX_BLOCK(block_wifi_cs, "block_wifi_cs", NORMAL, wifi_cs_pins)
IOMUX_BLOCK(block_isp_dvp_cs, "block_isp_dvp_cs", NORMAL, isp_dvp_cs_pins)
IOMUX_BLOCK(block_isp_i2c_cs, "block_isp_i2c_cs", NORMAL, isp_i2c_cs_pins)
IOMUX_BLOCK(block_isp_reset_cs, "block_isp_reset_cs", NORMAL, isp_reset_cs_pins)
IOMUX_BLOCK(block_isp_cs, "block_isp_cs", NORMAL, isp_cs_pins)
IOMUX_BLOCK(block_isp_flash_cs, "block_isp_flash_cs", NORMAL, isp_flash_cs_pins)
IOMUX_BLOCK(block_charger_cs, "block_charger_cs", NORMAL, charger_cs_pins)
IOMUX_BLOCK(block_gsensor_cs, "block_gsensor_cs", NORMAL, gsensor_cs_pins)
IOMUX_BLOCK(block_audio_spk_cs, "block_audio_spk_cs", NORMAL, audio_spk_cs_pins)
IOMUX_BLOCK(block_audio_eph_cs, "block_audio_eph_cs", NORMAL, audio_eph_cs_pins)
IOMUX_BLOCK(block_modem_cs, "block_modem_cs", NORMAL, modem_cs_pins)
IOMUX_BLOCK(block_vbusdrv_cs, "block_vbusdrv_cs", NORMAL, vbusdrv_cs_pins)
IOMUX_BLOCK(block_gps_spi_cs, "block_gps_spi_cs", NORMAL, gps_spi_cs_pins)

/******************normal func ****************/

enum lowlayer_func i2c0_cs_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func i2c1_cs_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func i2c2_cs_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func i2c3_cs_func_normal[] = {FUNC2, FUNC2, -INVALID,};
enum lowlayer_func spi0_cs_func_normal[] = {FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func spi0_cs_cs_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func uart0_cs_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func uart1_cs_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func uart2_cs_func_normal[] = {FUNC2, FUNC2, -INVALID,};
enum lowlayer_func uart4_cs_func_normal[] = {FUNC2, FUNC2, FUNC2, FUNC2, -INVALID,};
enum lowlayer_func kpc_cs_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func sd_cs_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func nand_cs_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func sdio_cs_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func btpm_cs_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func btpwr_cs_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func gps_boardcom_cs_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func ts_cs_func_normal[] = {RESERVE, RESERVE, -INVALID,};
enum lowlayer_func lcd_cs_func_normal[] = {FUNC0, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func pwm_cs_func_normal[] = {FUNC0, FUNC1, -INVALID,};
enum lowlayer_func hdmi_cs_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func wifi_cs_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_dvp_cs_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_i2c_cs_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_reset_cs_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_cs_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_flash_cs_func_normal[] = {FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func charger_cs_func_normal[] = {FUNC0, FUNC1, -INVALID,};
enum lowlayer_func gsensor_cs_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func audio_spk_cs_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func audio_eph_cs_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func modem_cs_func_normal[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func vbusdrv_cs_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func gps_spi_cs_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};

/******************lowpower func****************/

enum lowlayer_func i2c0_cs_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func i2c1_cs_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func i2c2_cs_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func i2c3_cs_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func spi0_cs_func_lowpower[] = {FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func spi0_cs_cs_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart0_cs_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart1_cs_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart2_cs_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart4_cs_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func kpc_cs_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func sd_cs_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func nand_cs_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func sdio_cs_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func btpm_cs_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func btpwr_cs_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func gps_boardcom_cs_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func ts_cs_func_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum lowlayer_func lcd_cs_func_lowpower[] = {FUNC0, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func pwm_cs_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func hdmi_cs_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func wifi_cs_func_lowpower[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_dvp_cs_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func isp_i2c_cs_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func isp_reset_cs_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func isp_cs_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC0, -INVALID,};
enum lowlayer_func isp_flash_cs_func_lowpower[] = {FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func charger_cs_func_lowpower[] = {FUNC0, FUNC1, -INVALID,};
enum lowlayer_func gsensor_cs_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func audio_spk_cs_func_lowpower[] = {FUNC1, -INVALID,};
enum lowlayer_func audio_eph_cs_func_lowpower[] = {FUNC1, -INVALID,};
enum lowlayer_func modem_cs_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func vbusdrv_cs_func_lowpower[] = {FUNC0, -INVALID,};
enum lowlayer_func gps_spi_cs_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};

/******************normal pullud****************/

enum pull_updown i2c0_cs_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c1_cs_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c2_cs_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c3_cs_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown spi0_cs_pullud_normal[] = {PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown spi0_cs_cs_pullud_normal[] = {PULLDOWN, PULLDOWN, NOPULL, NOPULL, -INVALID,};
enum pull_updown uart0_cs_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown uart1_cs_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown uart2_cs_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown uart4_cs_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown kpc_cs_pullud_normal[] = {PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, -INVALID,};
enum pull_updown sd_cs_pullud_normal[] = {NOPULL, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, -INVALID,};
enum pull_updown nand_cs_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown sdio_cs_pullud_normal[] = {NOPULL, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, -INVALID,};
enum pull_updown btpm_cs_pullud_normal[] = {PULLUP, NOPULL, -INVALID,};
enum pull_updown btpwr_cs_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown gps_boardcom_cs_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown ts_cs_pullud_normal[] = {NOPULL, PULLUP, -INVALID,};
enum pull_updown lcd_cs_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown pwm_cs_pullud_normal[] = {NOPULL, PULLDOWN, -INVALID,};
enum pull_updown hdmi_cs_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown wifi_cs_pullud_normal[] = {NOPULL, PULLDOWN, -INVALID,};
enum pull_updown isp_dvp_cs_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_i2c_cs_pullud_normal[] = {PULLUP, PULLUP, -INVALID,};
enum pull_updown isp_reset_cs_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_cs_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_flash_cs_pullud_normal[] = {NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown charger_cs_pullud_normal[] = {PULLUP, NOPULL, -INVALID,};
enum pull_updown gsensor_cs_pullud_normal[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown audio_spk_cs_pullud_normal[] = {NOPULL, -INVALID,};
enum pull_updown audio_eph_cs_pullud_normal[] = {NOPULL, -INVALID,};
enum pull_updown modem_cs_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown vbusdrv_cs_pullud_normal[] = {NOPULL, -INVALID,};
enum pull_updown gps_spi_cs_pullud_normal[] = {NOPULL, NOPULL, NOPULL, PULLDOWN, -INVALID,};

/******************lowpower pullud****************/

enum pull_updown i2c0_cs_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c1_cs_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c2_cs_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c3_cs_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown spi0_cs_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown spi0_cs_cs_pullud_lowpower[] = {PULLDOWN, PULLDOWN, NOPULL, NOPULL, -INVALID,};
enum pull_updown uart0_cs_pullud_lowpower[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown uart1_cs_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown uart2_cs_pullud_lowpower[] = {PULLDOWN, NOPULL, -INVALID,};
enum pull_updown uart4_cs_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown kpc_cs_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown sd_cs_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown nand_cs_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown sdio_cs_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown btpm_cs_pullud_lowpower[] = {PULLDOWN, NOPULL, -INVALID,};
enum pull_updown btpwr_cs_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown gps_boardcom_cs_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown ts_cs_pullud_lowpower[] = {NOPULL, PULLUP, -INVALID,};
enum pull_updown lcd_cs_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown pwm_cs_pullud_lowpower[] = {NOPULL, PULLDOWN, -INVALID,};
enum pull_updown hdmi_cs_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, PULLDOWN, -INVALID,};
enum pull_updown wifi_cs_pullud_lowpower[] = {NOPULL, PULLDOWN, -INVALID,};
enum pull_updown isp_dvp_cs_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown isp_i2c_cs_pullud_lowpower[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown isp_reset_cs_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_cs_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_flash_cs_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown charger_cs_pullud_lowpower[] = {PULLUP, NOPULL, -INVALID,};
enum pull_updown gsensor_cs_pullud_lowpower[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown audio_spk_cs_pullud_lowpower[] = {NOPULL, -INVALID,};
enum pull_updown audio_eph_cs_pullud_lowpower[] = {NOPULL, -INVALID,};
enum pull_updown modem_cs_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, NOPULL, PULLDOWN, PULLDOWN, NOPULL, NOPULL, -INVALID,};
enum pull_updown vbusdrv_cs_pullud_lowpower[] = {NOPULL, -INVALID,};
enum pull_updown gps_spi_cs_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};

/******************normal drv****************/

enum drive_strength i2c0_cs_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c1_cs_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c2_cs_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c3_cs_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength spi0_cs_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength spi0_cs_cs_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength uart0_cs_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength uart1_cs_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength uart2_cs_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength uart4_cs_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength kpc_cs_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength sd_cs_drv_normal[] = {LEVEL2, LEVEL3, LEVEL3, LEVEL3, LEVEL3, LEVEL3, -INVALID,};
enum drive_strength nand_cs_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, RESERVE, RESERVE, RESERVE, RESERVE, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength sdio_cs_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength btpm_cs_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength btpwr_cs_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength gps_boardcom_cs_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength ts_cs_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength lcd_cs_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength pwm_cs_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength hdmi_cs_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength wifi_cs_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_dvp_cs_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_i2c_cs_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_reset_cs_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_cs_drv_normal[] = {LEVEL0, LEVEL0, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_flash_cs_drv_normal[] = {RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength charger_cs_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength gsensor_cs_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength audio_spk_cs_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength audio_eph_cs_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength modem_cs_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength vbusdrv_cs_drv_normal[] = {LEVEL2, -INVALID,};
enum drive_strength gps_spi_cs_drv_normal[] = {LEVEL2, RESERVE, LEVEL2, LEVEL2, -INVALID,};

/******************lowpower drv****************/

enum drive_strength i2c0_cs_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c1_cs_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c2_cs_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c3_cs_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength spi0_cs_drv_lowpower[] = {LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength spi0_cs_cs_drv_lowpower[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength uart0_cs_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength uart1_cs_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength uart2_cs_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength uart4_cs_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength kpc_cs_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength sd_cs_drv_lowpower[] = {LEVEL2, LEVEL3, LEVEL3, LEVEL3, LEVEL3, LEVEL3, -INVALID,};
enum drive_strength nand_cs_drv_lowpower[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, RESERVE, RESERVE, RESERVE, RESERVE, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, -INVALID,};
enum drive_strength sdio_cs_drv_lowpower[] = {LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, -INVALID,};
enum drive_strength btpm_cs_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength btpwr_cs_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength gps_boardcom_cs_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength ts_cs_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength lcd_cs_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength pwm_cs_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength hdmi_cs_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength wifi_cs_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_dvp_cs_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_i2c_cs_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_reset_cs_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_cs_drv_lowpower[] = {LEVEL0, LEVEL0, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_flash_cs_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength charger_cs_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength gsensor_cs_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength audio_spk_cs_drv_lowpower[] = {RESERVE, -INVALID,};
enum drive_strength audio_eph_cs_drv_lowpower[] = {RESERVE, -INVALID,};
enum drive_strength modem_cs_drv_lowpower[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength vbusdrv_cs_drv_lowpower[] = {LEVEL2, -INVALID,};
enum drive_strength gps_spi_cs_drv_lowpower[] = {LEVEL2, RESERVE, LEVEL2, LEVEL2, -INVALID,};

/******************config****************/

struct block_config i2c0_cs_config[] = {
	[NORMAL] = {i2c0_cs_func_normal, i2c0_cs_pullud_normal, i2c0_cs_drv_normal},
	[LOWPOWER] = {i2c0_cs_func_lowpower, i2c0_cs_pullud_lowpower, i2c0_cs_drv_lowpower},
};
struct block_config i2c1_cs_config[] = {
	[NORMAL] = {i2c1_cs_func_normal, i2c1_cs_pullud_normal, i2c1_cs_drv_normal},
	[LOWPOWER] = {i2c1_cs_func_lowpower, i2c1_cs_pullud_lowpower, i2c1_cs_drv_lowpower},
};
struct block_config i2c2_cs_config[] = {
	[NORMAL] = {i2c2_cs_func_normal, i2c2_cs_pullud_normal, i2c2_cs_drv_normal},
	[LOWPOWER] = {i2c2_cs_func_lowpower, i2c2_cs_pullud_lowpower, i2c2_cs_drv_lowpower},
};
struct block_config i2c3_cs_config[] = {
	[NORMAL] = {i2c3_cs_func_normal, i2c3_cs_pullud_normal, i2c3_cs_drv_normal},
	[LOWPOWER] = {i2c3_cs_func_lowpower, i2c3_cs_pullud_lowpower, i2c3_cs_drv_lowpower},
};
struct block_config spi0_cs_config[] = {
	[NORMAL] = {spi0_cs_func_normal, spi0_cs_pullud_normal, spi0_cs_drv_normal},
	[LOWPOWER] = {spi0_cs_func_lowpower, spi0_cs_pullud_lowpower, spi0_cs_drv_lowpower},
};
struct block_config spi0_cs_cs_config[] = {
	[NORMAL] = {spi0_cs_cs_func_normal, spi0_cs_cs_pullud_normal, spi0_cs_cs_drv_normal},
	[LOWPOWER] = {spi0_cs_cs_func_lowpower, spi0_cs_cs_pullud_lowpower, spi0_cs_cs_drv_lowpower},
};
struct block_config uart0_cs_config[] = {
	[NORMAL] = {uart0_cs_func_normal, uart0_cs_pullud_normal, uart0_cs_drv_normal},
	[LOWPOWER] = {uart0_cs_func_lowpower, uart0_cs_pullud_lowpower, uart0_cs_drv_lowpower},
};
struct block_config uart1_cs_config[] = {
	[NORMAL] = {uart1_cs_func_normal, uart1_cs_pullud_normal, uart1_cs_drv_normal},
	[LOWPOWER] = {uart1_cs_func_lowpower, uart1_cs_pullud_lowpower, uart1_cs_drv_lowpower},
};
struct block_config uart2_cs_config[] = {
	[NORMAL] = {uart2_cs_func_normal, uart2_cs_pullud_normal, uart2_cs_drv_normal},
	[LOWPOWER] = {uart2_cs_func_lowpower, uart2_cs_pullud_lowpower, uart2_cs_drv_lowpower},
};
struct block_config uart4_cs_config[] = {
	[NORMAL] = {uart4_cs_func_normal, uart4_cs_pullud_normal, uart4_cs_drv_normal},
	[LOWPOWER] = {uart4_cs_func_lowpower, uart4_cs_pullud_lowpower, uart4_cs_drv_lowpower},
};
struct block_config kpc_cs_config[] = {
	[NORMAL] = {kpc_cs_func_normal, kpc_cs_pullud_normal, kpc_cs_drv_normal},
	[LOWPOWER] = {kpc_cs_func_lowpower, kpc_cs_pullud_lowpower, kpc_cs_drv_lowpower},
};
struct block_config sd_cs_config[] = {
	[NORMAL] = {sd_cs_func_normal, sd_cs_pullud_normal, sd_cs_drv_normal},
	[LOWPOWER] = {sd_cs_func_lowpower, sd_cs_pullud_lowpower, sd_cs_drv_lowpower},
};
struct block_config nand_cs_config[] = {
	[NORMAL] = {nand_cs_func_normal, nand_cs_pullud_normal, nand_cs_drv_normal},
	[LOWPOWER] = {nand_cs_func_lowpower, nand_cs_pullud_lowpower, nand_cs_drv_lowpower},
};
struct block_config sdio_cs_config[] = {
	[NORMAL] = {sdio_cs_func_normal, sdio_cs_pullud_normal, sdio_cs_drv_normal},
	[LOWPOWER] = {sdio_cs_func_lowpower, sdio_cs_pullud_lowpower, sdio_cs_drv_lowpower},
};
struct block_config btpm_cs_config[] = {
	[NORMAL] = {btpm_cs_func_normal, btpm_cs_pullud_normal, btpm_cs_drv_normal},
	[LOWPOWER] = {btpm_cs_func_lowpower, btpm_cs_pullud_lowpower, btpm_cs_drv_lowpower},
};
struct block_config btpwr_cs_config[] = {
	[NORMAL] = {btpwr_cs_func_normal, btpwr_cs_pullud_normal, btpwr_cs_drv_normal},
	[LOWPOWER] = {btpwr_cs_func_lowpower, btpwr_cs_pullud_lowpower, btpwr_cs_drv_lowpower},
};
struct block_config gps_boardcom_cs_config[] = {
	[NORMAL] = {gps_boardcom_cs_func_normal, gps_boardcom_cs_pullud_normal, gps_boardcom_cs_drv_normal},
	[LOWPOWER] = {gps_boardcom_cs_func_lowpower, gps_boardcom_cs_pullud_lowpower, gps_boardcom_cs_drv_lowpower},
};
struct block_config ts_cs_config[] = {
	[NORMAL] = {ts_cs_func_normal, ts_cs_pullud_normal, ts_cs_drv_normal},
	[LOWPOWER] = {ts_cs_func_lowpower, ts_cs_pullud_lowpower, ts_cs_drv_lowpower},
};
struct block_config lcd_cs_config[] = {
	[NORMAL] = {lcd_cs_func_normal, lcd_cs_pullud_normal, lcd_cs_drv_normal},
	[LOWPOWER] = {lcd_cs_func_lowpower, lcd_cs_pullud_lowpower, lcd_cs_drv_lowpower},
};
struct block_config pwm_cs_config[] = {
	[NORMAL] = {pwm_cs_func_normal, pwm_cs_pullud_normal, pwm_cs_drv_normal},
	[LOWPOWER] = {pwm_cs_func_lowpower, pwm_cs_pullud_lowpower, pwm_cs_drv_lowpower},
};
struct block_config hdmi_cs_config[] = {
	[NORMAL] = {hdmi_cs_func_normal, hdmi_cs_pullud_normal, hdmi_cs_drv_normal},
	[LOWPOWER] = {hdmi_cs_func_lowpower, hdmi_cs_pullud_lowpower, hdmi_cs_drv_lowpower},
};
struct block_config wifi_cs_config[] = {
	[NORMAL] = {wifi_cs_func_normal, wifi_cs_pullud_normal, wifi_cs_drv_normal},
	[LOWPOWER] = {wifi_cs_func_lowpower, wifi_cs_pullud_lowpower, wifi_cs_drv_lowpower},
};
struct block_config isp_dvp_cs_config[] = {
	[NORMAL] = {isp_dvp_cs_func_normal, isp_dvp_cs_pullud_normal, isp_dvp_cs_drv_normal},
	[LOWPOWER] = {isp_dvp_cs_func_lowpower, isp_dvp_cs_pullud_lowpower, isp_dvp_cs_drv_lowpower},
};
struct block_config isp_i2c_cs_config[] = {
	[NORMAL] = {isp_i2c_cs_func_normal, isp_i2c_cs_pullud_normal, isp_i2c_cs_drv_normal},
	[LOWPOWER] = {isp_i2c_cs_func_lowpower, isp_i2c_cs_pullud_lowpower, isp_i2c_cs_drv_lowpower},
};
struct block_config isp_reset_cs_config[] = {
	[NORMAL] = {isp_reset_cs_func_normal, isp_reset_cs_pullud_normal, isp_reset_cs_drv_normal},
	[LOWPOWER] = {isp_reset_cs_func_lowpower, isp_reset_cs_pullud_lowpower, isp_reset_cs_drv_lowpower},
};
struct block_config isp_cs_config[] = {
	[NORMAL] = {isp_cs_func_normal, isp_cs_pullud_normal, isp_cs_drv_normal},
	[LOWPOWER] = {isp_cs_func_lowpower, isp_cs_pullud_lowpower, isp_cs_drv_lowpower},
};
struct block_config isp_flash_cs_config[] = {
	[NORMAL] = {isp_flash_cs_func_normal, isp_flash_cs_pullud_normal, isp_flash_cs_drv_normal},
	[LOWPOWER] = {isp_flash_cs_func_lowpower, isp_flash_cs_pullud_lowpower, isp_flash_cs_drv_lowpower},
};
struct block_config charger_cs_config[] = {
	[NORMAL] = {charger_cs_func_normal, charger_cs_pullud_normal, charger_cs_drv_normal},
	[LOWPOWER] = {charger_cs_func_lowpower, charger_cs_pullud_lowpower, charger_cs_drv_lowpower},
};
struct block_config gsensor_cs_config[] = {
	[NORMAL] = {gsensor_cs_func_normal, gsensor_cs_pullud_normal, gsensor_cs_drv_normal},
	[LOWPOWER] = {gsensor_cs_func_lowpower, gsensor_cs_pullud_lowpower, gsensor_cs_drv_lowpower},
};
struct block_config audio_spk_cs_config[] = {
	[NORMAL] = {audio_spk_cs_func_normal, audio_spk_cs_pullud_normal, audio_spk_cs_drv_normal},
	[LOWPOWER] = {audio_spk_cs_func_lowpower, audio_spk_cs_pullud_lowpower, audio_spk_cs_drv_lowpower},
};
struct block_config audio_eph_cs_config[] = {
	[NORMAL] = {audio_eph_cs_func_normal, audio_eph_cs_pullud_normal, audio_eph_cs_drv_normal},
	[LOWPOWER] = {audio_eph_cs_func_lowpower, audio_eph_cs_pullud_lowpower, audio_eph_cs_drv_lowpower},
};
struct block_config modem_cs_config[] = {
	[NORMAL] = {modem_cs_func_normal, modem_cs_pullud_normal, modem_cs_drv_normal},
	[LOWPOWER] = {modem_cs_func_lowpower, modem_cs_pullud_lowpower, modem_cs_drv_lowpower},
};
struct block_config vbusdrv_cs_config[] = {
	[NORMAL] = {vbusdrv_cs_func_normal, vbusdrv_cs_pullud_normal, vbusdrv_cs_drv_normal},
	[LOWPOWER] = {vbusdrv_cs_func_lowpower, vbusdrv_cs_pullud_lowpower, vbusdrv_cs_drv_lowpower},
};
struct block_config gps_spi_cs_config[] = {
	[NORMAL] = {gps_spi_cs_func_normal, gps_spi_cs_pullud_normal, gps_spi_cs_drv_normal},
	[LOWPOWER] = {gps_spi_cs_func_lowpower, gps_spi_cs_pullud_lowpower, gps_spi_cs_drv_lowpower},
};


/******************pins ****************/

struct  iomux_pin *audio_es305_cs_pins[] = {
&gpio_127_cs, &gpio_128_cs, NULL,
};
struct  iomux_pin *emmc_cs_pins[] = {
&gpio_028_cs, &gpio_029_cs, &gpio_030_cs, &gpio_031_cs, &gpio_032_cs, &gpio_033_cs, &gpio_034_cs, &gpio_035_cs, &gpio_036_cs, &gpio_037_cs, NULL,
};
struct  iomux_pin *uart3_cs_pins[] = {
&gpio_154_cs, &gpio_155_cs, &gpio_160_cs, &gpio_161_cs, NULL,
};
struct  iomux_pin *spi1_cs_pins[] = {
&gpio_113_cs, &gpio_114_cs, &gpio_115_cs, &gpio_116_cs, NULL,
};

/******************IOMUX_BLOCK****************/

IOMUX_BLOCK(block_audio_es305_cs, "block_audio_es305_cs", NORMAL, audio_es305_cs_pins)
IOMUX_BLOCK(block_emmc_cs, "block_emmc_cs", NORMAL, emmc_cs_pins)
IOMUX_BLOCK(block_uart3_cs, "block_uart3_cs", NORMAL, uart3_cs_pins)
IOMUX_BLOCK(block_spi1_cs, "block_spi1_cs", NORMAL, spi1_cs_pins)

/******************normal func ****************/

enum lowlayer_func audio_es305_cs_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func emmc_cs_func_normal[] = {FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, -INVALID,};
enum lowlayer_func uart3_cs_func_normal[] = {FUNC2, FUNC2, FUNC2, FUNC2, -INVALID,};
enum lowlayer_func spi1_cs_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};

/******************lowpower func****************/

enum lowlayer_func audio_es305_cs_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func emmc_cs_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func uart3_cs_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func spi1_cs_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};

/******************normal pullud****************/

enum pull_updown audio_es305_cs_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown emmc_cs_pullud_normal[] = {PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, NOPULL, -INVALID,};
enum pull_updown uart3_cs_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown spi1_cs_pullud_normal[] = {PULLUP, NOPULL, NOPULL, PULLDOWN, -INVALID,};

/******************lowpower pullud****************/

enum pull_updown audio_es305_cs_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown emmc_cs_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown uart3_cs_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown spi1_cs_pullud_lowpower[] = {PULLUP, NOPULL, NOPULL, PULLDOWN, -INVALID,};

/******************normal drv****************/

enum drive_strength audio_es305_cs_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength emmc_cs_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength uart3_cs_drv_normal[] = {LEVEL2, RESERVE, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength spi1_cs_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};

/******************lowpower drv****************/

enum drive_strength audio_es305_cs_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength emmc_cs_drv_lowpower[] = {LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, -INVALID,};
enum drive_strength uart3_cs_drv_lowpower[] = {LEVEL2, RESERVE, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength spi1_cs_drv_lowpower[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};

/******************config****************/

struct block_config audio_es305_cs_config[] = {
	[NORMAL] = {audio_es305_cs_func_normal, audio_es305_cs_pullud_normal, audio_es305_cs_drv_normal},
	[LOWPOWER] = {audio_es305_cs_func_lowpower, audio_es305_cs_pullud_lowpower, audio_es305_cs_drv_lowpower},
};
struct block_config emmc_cs_config[] = {
	[NORMAL] = {emmc_cs_func_normal, emmc_cs_pullud_normal, emmc_cs_drv_normal},
	[LOWPOWER] = {emmc_cs_func_lowpower, emmc_cs_pullud_lowpower, emmc_cs_drv_lowpower},
};
struct block_config uart3_cs_config[] = {
	[NORMAL] = {uart3_cs_func_normal, uart3_cs_pullud_normal, uart3_cs_drv_normal},
	[LOWPOWER] = {uart3_cs_func_lowpower, uart3_cs_pullud_lowpower, uart3_cs_drv_lowpower},
};
struct block_config spi1_cs_config[] = {
	[NORMAL] = {spi1_cs_func_normal, spi1_cs_pullud_normal, spi1_cs_drv_normal},
	[LOWPOWER] = {spi1_cs_func_lowpower, spi1_cs_pullud_lowpower, spi1_cs_drv_lowpower},
};

struct block_table block_config_table_cs[] = {
     BLOCK_CONFIG("block_i2c0", &block_i2c0_cs, i2c0_cs_config)
     BLOCK_CONFIG("block_i2c1", &block_i2c1_cs, i2c1_cs_config)
     BLOCK_CONFIG("block_i2c2", &block_i2c2_cs, i2c2_cs_config)
     BLOCK_CONFIG("block_i2c3", &block_i2c3_cs, i2c3_cs_config)
     BLOCK_CONFIG("block_spi0", &block_spi0_cs, spi0_cs_config)
     BLOCK_CONFIG("block_spi0_cs", &block_spi0_cs_cs, spi0_cs_cs_config)
     BLOCK_CONFIG("block_uart0", &block_uart0_cs, uart0_cs_config)
     BLOCK_CONFIG("block_uart1", &block_uart1_cs, uart1_cs_config)
     BLOCK_CONFIG("block_uart2", &block_uart2_cs, uart2_cs_config)
     BLOCK_CONFIG("block_uart4", &block_uart4_cs, uart4_cs_config)
     BLOCK_CONFIG("block_kpc", &block_kpc_cs, kpc_cs_config)
     BLOCK_CONFIG("block_sd", &block_sd_cs, sd_cs_config)
     BLOCK_CONFIG("block_nand", &block_nand_cs, nand_cs_config)
     BLOCK_CONFIG("block_sdio", &block_sdio_cs, sdio_cs_config)
     BLOCK_CONFIG("block_btpm", &block_btpm_cs, btpm_cs_config)
     BLOCK_CONFIG("block_btpwr", &block_btpwr_cs, btpwr_cs_config)
     BLOCK_CONFIG("block_gps_boardcom", &block_gps_boardcom_cs, gps_boardcom_cs_config)
     BLOCK_CONFIG("block_ts", &block_ts_cs, ts_cs_config)
     BLOCK_CONFIG("block_lcd", &block_lcd_cs, lcd_cs_config)
     BLOCK_CONFIG("block_pwm", &block_pwm_cs, pwm_cs_config)
     BLOCK_CONFIG("block_hdmi", &block_hdmi_cs, hdmi_cs_config)
     BLOCK_CONFIG("block_wifi", &block_wifi_cs, wifi_cs_config)
     BLOCK_CONFIG("block_isp_dvp", &block_isp_dvp_cs, isp_dvp_cs_config)
     BLOCK_CONFIG("block_isp_i2c", &block_isp_i2c_cs, isp_i2c_cs_config)
     BLOCK_CONFIG("block_isp_reset", &block_isp_reset_cs, isp_reset_cs_config)
     BLOCK_CONFIG("block_isp", &block_isp_cs, isp_cs_config)
     BLOCK_CONFIG("block_isp_flash", &block_isp_flash_cs, isp_flash_cs_config)
     BLOCK_CONFIG("block_charger", &block_charger_cs, charger_cs_config)
     BLOCK_CONFIG("block_gsensor", &block_gsensor_cs, gsensor_cs_config)
     BLOCK_CONFIG("block_audio_spk", &block_audio_spk_cs, audio_spk_cs_config)
     BLOCK_CONFIG("block_audio_eph", &block_audio_eph_cs, audio_eph_cs_config)
     BLOCK_CONFIG("block_modem", &block_modem_cs, modem_cs_config)
     BLOCK_CONFIG("block_vbusdrv", &block_vbusdrv_cs, vbusdrv_cs_config)
     BLOCK_CONFIG("block_gps_spi", &block_gps_spi_cs, gps_spi_cs_config)
     BLOCK_CONFIG("block_audio_es305", &block_audio_es305_cs, audio_es305_cs_config)
     BLOCK_CONFIG("block_emmc", &block_emmc_cs, emmc_cs_config)
     BLOCK_CONFIG("block_uart3", &block_uart3_cs, uart3_cs_config)
     BLOCK_CONFIG("block_spi1", &block_spi1_cs, spi1_cs_config)
     {NULL, NULL, NULL},
};


/******************pins ****************/

struct  iomux_pin *i2c0_u9510_es_pins[] = {
&gpio_084, &gpio_085, NULL,
};
struct  iomux_pin *i2c1_u9510_es_pins[] = {
&gpio_086, &gpio_087, NULL,
};
struct  iomux_pin *i2c2_u9510_es_pins[] = {
&gpio_063, &gpio_064, NULL,
};
struct  iomux_pin *i2c3_u9510_es_pins[] = {
&gpio_057, &gpio_058, NULL,
};
struct  iomux_pin *spi0_u9510_es_pins[] = {
&gpio_106, &gpio_107, &gpio_108, NULL,
};
struct  iomux_pin *spi0_cs_u9510_es_pins[] = {
&gpio_109, &gpio_110, &gpio_111, &gpio_112, NULL,
};
struct  iomux_pin *uart0_u9510_es_pins[] = {
&gpio_119, &gpio_120, NULL,
};
struct  iomux_pin *uart1_u9510_es_pins[] = {
&gpio_121, &gpio_122, &gpio_123, &gpio_124, NULL,
};
struct  iomux_pin *uart2_u9510_es_pins[] = {
&gpio_127, &gpio_128, NULL,
};
struct  iomux_pin *uart3_u9510_es_pins[] = {
&gpio_154, &gpio_155, &gpio_160, &gpio_161, NULL,
};
struct  iomux_pin *uart4_u9510_es_pins[] = {
&gpio_162, &gpio_163, &gpio_164, &gpio_165, NULL,
};
struct  iomux_pin *kpc_u9510_es_pins[] = {
&gpio_129, &gpio_130, &gpio_131, &gpio_137, &gpio_138, &gpio_139, NULL,
};
struct  iomux_pin *sd_u9510_es_pins[] = {
&gpio_088, &gpio_089, &gpio_090, &gpio_091, &gpio_092, &gpio_093, NULL,
};
struct  iomux_pin *nand_u9510_es_pins[] = {
&gpio_008, &gpio_009, &gpio_010, &gpio_011, &gpio_012, &gpio_013, &gpio_014, &gpio_015, &gpio_016, &gpio_017, &gpio_018, &gpio_019, &gpio_020, &gpio_021, &gpio_022, &gpio_023, &gpio_024, &gpio_025, &gpio_026, &gpio_027, &gpio_028, &gpio_029, &gpio_030, &gpio_031, &gpio_032, &gpio_033, &gpio_034, &gpio_035, NULL,
};
struct  iomux_pin *sdio_u9510_es_pins[] = {
&gpio_100, &gpio_101, &gpio_102, &gpio_103, &gpio_104, &gpio_105, NULL,
};
struct  iomux_pin *btpm_u9510_es_pins[] = {
&gpio_166, &gpio_167, NULL,
};
struct  iomux_pin *btpwr_u9510_es_pins[] = {
&gpio_168, &gpio_169, NULL,
};
struct  iomux_pin *gps_boardcom_u9510_es_pins[] = {
&gpio_151, &gpio_152, NULL,
};
struct  iomux_pin *ts_u9510_es_pins[] = {
&gpio_156, &gpio_157, NULL,
};
struct  iomux_pin *lcd_u9510_es_pins[] = {
&gpio_003, &gpio_135, &gpio_136, &gpio_171, NULL,
};
struct  iomux_pin *pwm_u9510_es_pins[] = {
&gpio_149, &gpio_150, NULL,
};
struct  iomux_pin *hdmi_u9510_es_pins[] = {
&gpio_038, &gpio_039, &gpio_040, &gpio_041, NULL,
};
struct  iomux_pin *wifi_u9510_es_pins[] = {
&gpio_002, &gpio_004, NULL,
};
struct  iomux_pin *isp_dvp_u9510_es_pins[] = {
&gpio_042, &gpio_043, &gpio_044, &gpio_045, &gpio_046, &gpio_047, &gpio_048, &gpio_049, &gpio_052, &gpio_053, &gpio_054, NULL,
};
struct  iomux_pin *isp_i2c_u9510_es_pins[] = {
&gpio_055, &gpio_056, NULL,
};
struct  iomux_pin *isp_reset_u9510_es_pins[] = {
&gpio_059, &gpio_060, NULL,
};
struct  iomux_pin *isp_u9510_es_pins[] = {
&gpio_067, &gpio_068, &gpio_069, &gpio_070, &gpio_071, &gpio_072, &gpio_073, &gpio_075, NULL,
};
struct  iomux_pin *isp_flash_u9510_es_pins[] = {
&gpio_065, &gpio_066, &gpio_076, NULL,
};
struct  iomux_pin *charger_u9510_es_pins[] = {
&gpio_005, &gpio_074, NULL,
};
struct  iomux_pin *gsensor_u9510_es_pins[] = {
&gpio_051, &gpio_148, NULL,
};
struct  iomux_pin *audio_spk_u9510_es_pins[] = {
&gpio_117, NULL,
};
struct  iomux_pin *audio_eph_u9510_es_pins[] = {
&gpio_118, NULL,
};
struct  iomux_pin *modem_u9510_es_pins[] = {
&gpio_094, &gpio_095, &gpio_096, &gpio_097, &gpio_098, &gpio_113, &gpio_114, &gpio_115, NULL,
};
struct  iomux_pin *vbusdrv_u9510_es_pins[] = {
&gpio_082, NULL,
};

/******************IOMUX_BLOCK****************/

IOMUX_BLOCK(block_i2c0_u9510_es, "block_i2c0_u9510_es", NORMAL, i2c0_u9510_es_pins)
IOMUX_BLOCK(block_i2c1_u9510_es, "block_i2c1_u9510_es", NORMAL, i2c1_u9510_es_pins)
IOMUX_BLOCK(block_i2c2_u9510_es, "block_i2c2_u9510_es", NORMAL, i2c2_u9510_es_pins)
IOMUX_BLOCK(block_i2c3_u9510_es, "block_i2c3_u9510_es", NORMAL, i2c3_u9510_es_pins)
IOMUX_BLOCK(block_spi0_u9510_es, "block_spi0_u9510_es", NORMAL, spi0_u9510_es_pins)
IOMUX_BLOCK(block_spi0_cs_u9510_es, "block_spi0_cs_u9510_es", NORMAL, spi0_cs_u9510_es_pins)
IOMUX_BLOCK(block_uart0_u9510_es, "block_uart0_u9510_es", NORMAL, uart0_u9510_es_pins)
IOMUX_BLOCK(block_uart1_u9510_es, "block_uart1_u9510_es", NORMAL, uart1_u9510_es_pins)
IOMUX_BLOCK(block_uart2_u9510_es, "block_uart2_u9510_es", NORMAL, uart2_u9510_es_pins)
IOMUX_BLOCK(block_uart3_u9510_es, "block_uart3_u9510_es", NORMAL, uart3_u9510_es_pins)
IOMUX_BLOCK(block_uart4_u9510_es, "block_uart4_u9510_es", NORMAL, uart4_u9510_es_pins)
IOMUX_BLOCK(block_kpc_u9510_es, "block_kpc_u9510_es", NORMAL, kpc_u9510_es_pins)
IOMUX_BLOCK(block_sd_u9510_es, "block_sd_u9510_es", NORMAL, sd_u9510_es_pins)
IOMUX_BLOCK(block_nand_u9510_es, "block_nand_u9510_es", NORMAL, nand_u9510_es_pins)
IOMUX_BLOCK(block_sdio_u9510_es, "block_sdio_u9510_es", NORMAL, sdio_u9510_es_pins)
IOMUX_BLOCK(block_btpm_u9510_es, "block_btpm_u9510_es", NORMAL, btpm_u9510_es_pins)
IOMUX_BLOCK(block_btpwr_u9510_es, "block_btpwr_u9510_es", NORMAL, btpwr_u9510_es_pins)
IOMUX_BLOCK(block_gps_boardcom_u9510_es, "block_gps_boardcom_u9510_es", NORMAL, gps_boardcom_u9510_es_pins)
IOMUX_BLOCK(block_ts_u9510_es, "block_ts_u9510_es", NORMAL, ts_u9510_es_pins)
IOMUX_BLOCK(block_lcd_u9510_es, "block_lcd_u9510_es", NORMAL, lcd_u9510_es_pins)
IOMUX_BLOCK(block_pwm_u9510_es, "block_pwm_u9510_es", NORMAL, pwm_u9510_es_pins)
IOMUX_BLOCK(block_hdmi_u9510_es, "block_hdmi_u9510_es", NORMAL, hdmi_u9510_es_pins)
IOMUX_BLOCK(block_wifi_u9510_es, "block_wifi_u9510_es", NORMAL, wifi_u9510_es_pins)
IOMUX_BLOCK(block_isp_dvp_u9510_es, "block_isp_dvp_u9510_es", NORMAL, isp_dvp_u9510_es_pins)
IOMUX_BLOCK(block_isp_i2c_u9510_es, "block_isp_i2c_u9510_es", NORMAL, isp_i2c_u9510_es_pins)
IOMUX_BLOCK(block_isp_reset_u9510_es, "block_isp_reset_u9510_es", NORMAL, isp_reset_u9510_es_pins)
IOMUX_BLOCK(block_isp_u9510_es, "block_isp_u9510_es", NORMAL, isp_u9510_es_pins)
IOMUX_BLOCK(block_isp_flash_u9510_es, "block_isp_flash_u9510_es", NORMAL, isp_flash_u9510_es_pins)
IOMUX_BLOCK(block_charger_u9510_es, "block_charger_u9510_es", NORMAL, charger_u9510_es_pins)
IOMUX_BLOCK(block_gsensor_u9510_es, "block_gsensor_u9510_es", NORMAL, gsensor_u9510_es_pins)
IOMUX_BLOCK(block_audio_spk_u9510_es, "block_audio_spk_u9510_es", NORMAL, audio_spk_u9510_es_pins)
IOMUX_BLOCK(block_audio_eph_u9510_es, "block_audio_eph_u9510_es", NORMAL, audio_eph_u9510_es_pins)
IOMUX_BLOCK(block_modem_u9510_es, "block_modem_u9510_es", NORMAL, modem_u9510_es_pins)
IOMUX_BLOCK(block_vbusdrv_u9510_es, "block_vbusdrv_u9510_es", NORMAL, vbusdrv_u9510_es_pins)

/******************normal func ****************/

enum lowlayer_func i2c0_u9510_es_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func i2c1_u9510_es_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func i2c2_u9510_es_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func i2c3_u9510_es_func_normal[] = {FUNC2, FUNC2, -INVALID,};
enum lowlayer_func spi0_u9510_es_func_normal[] = {FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func spi0_cs_u9510_es_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func uart0_u9510_es_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func uart1_u9510_es_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func uart2_u9510_es_func_normal[] = {FUNC2, FUNC2, -INVALID,};
enum lowlayer_func uart3_u9510_es_func_normal[] = {FUNC2, FUNC2, FUNC2, FUNC2, -INVALID,};
enum lowlayer_func uart4_u9510_es_func_normal[] = {FUNC2, FUNC2, FUNC2, FUNC2, -INVALID,};
enum lowlayer_func kpc_u9510_es_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func sd_u9510_es_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func nand_u9510_es_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func sdio_u9510_es_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func btpm_u9510_es_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func btpwr_u9510_es_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func gps_boardcom_u9510_es_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func ts_u9510_es_func_normal[] = {RESERVE, RESERVE, -INVALID,};
enum lowlayer_func lcd_u9510_es_func_normal[] = {FUNC0, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func pwm_u9510_es_func_normal[] = {FUNC0, FUNC1, -INVALID,};
enum lowlayer_func hdmi_u9510_es_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func wifi_u9510_es_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_dvp_u9510_es_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_i2c_u9510_es_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_reset_u9510_es_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_u9510_es_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_flash_u9510_es_func_normal[] = {FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func charger_u9510_es_func_normal[] = {FUNC0, FUNC1, -INVALID,};
enum lowlayer_func gsensor_u9510_es_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func audio_spk_u9510_es_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func audio_eph_u9510_es_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func modem_u9510_es_func_normal[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func vbusdrv_u9510_es_func_normal[] = {FUNC1, -INVALID,};

/******************lowpower func****************/

enum lowlayer_func i2c0_u9510_es_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func i2c1_u9510_es_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func i2c2_u9510_es_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func i2c3_u9510_es_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func spi0_u9510_es_func_lowpower[] = {FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func spi0_cs_u9510_es_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart0_u9510_es_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart1_u9510_es_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart2_u9510_es_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart3_u9510_es_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart4_u9510_es_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func kpc_u9510_es_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func sd_u9510_es_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func nand_u9510_es_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func sdio_u9510_es_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func btpm_u9510_es_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func btpwr_u9510_es_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func gps_boardcom_u9510_es_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func ts_u9510_es_func_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum lowlayer_func lcd_u9510_es_func_lowpower[] = {FUNC0, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func pwm_u9510_es_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func hdmi_u9510_es_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func wifi_u9510_es_func_lowpower[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_dvp_u9510_es_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func isp_i2c_u9510_es_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func isp_reset_u9510_es_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func isp_u9510_es_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC0, -INVALID,};
enum lowlayer_func isp_flash_u9510_es_func_lowpower[] = {FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func charger_u9510_es_func_lowpower[] = {FUNC0, FUNC1, -INVALID,};
enum lowlayer_func gsensor_u9510_es_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func audio_spk_u9510_es_func_lowpower[] = {FUNC1, -INVALID,};
enum lowlayer_func audio_eph_u9510_es_func_lowpower[] = {FUNC1, -INVALID,};
enum lowlayer_func modem_u9510_es_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func vbusdrv_u9510_es_func_lowpower[] = {FUNC0, -INVALID,};

/******************normal pullud****************/

enum pull_updown i2c0_u9510_es_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c1_u9510_es_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c2_u9510_es_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c3_u9510_es_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown spi0_u9510_es_pullud_normal[] = {PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown spi0_cs_u9510_es_pullud_normal[] = {PULLDOWN, PULLDOWN, NOPULL, NOPULL, -INVALID,};
enum pull_updown uart0_u9510_es_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown uart1_u9510_es_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown uart2_u9510_es_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown uart3_u9510_es_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown uart4_u9510_es_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown kpc_u9510_es_pullud_normal[] = {PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, -INVALID,};
enum pull_updown sd_u9510_es_pullud_normal[] = {NOPULL, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, -INVALID,};
enum pull_updown nand_u9510_es_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown sdio_u9510_es_pullud_normal[] = {NOPULL, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, -INVALID,};
enum pull_updown btpm_u9510_es_pullud_normal[] = {PULLUP, NOPULL, -INVALID,};
enum pull_updown btpwr_u9510_es_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown gps_boardcom_u9510_es_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown ts_u9510_es_pullud_normal[] = {NOPULL, PULLUP, -INVALID,};
enum pull_updown lcd_u9510_es_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown pwm_u9510_es_pullud_normal[] = {NOPULL, PULLDOWN, -INVALID,};
enum pull_updown hdmi_u9510_es_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown wifi_u9510_es_pullud_normal[] = {NOPULL, PULLDOWN, -INVALID,};
enum pull_updown isp_dvp_u9510_es_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_i2c_u9510_es_pullud_normal[] = {PULLUP, PULLUP, -INVALID,};
enum pull_updown isp_reset_u9510_es_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_u9510_es_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_flash_u9510_es_pullud_normal[] = {NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown charger_u9510_es_pullud_normal[] = {PULLUP, NOPULL, -INVALID,};
enum pull_updown gsensor_u9510_es_pullud_normal[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown audio_spk_u9510_es_pullud_normal[] = {NOPULL, -INVALID,};
enum pull_updown audio_eph_u9510_es_pullud_normal[] = {NOPULL, -INVALID,};
enum pull_updown modem_u9510_es_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown vbusdrv_u9510_es_pullud_normal[] = {NOPULL, -INVALID,};

/******************lowpower pullud****************/

enum pull_updown i2c0_u9510_es_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c1_u9510_es_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c2_u9510_es_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c3_u9510_es_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown spi0_u9510_es_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown spi0_cs_u9510_es_pullud_lowpower[] = {PULLDOWN, PULLDOWN, NOPULL, NOPULL, -INVALID,};
enum pull_updown uart0_u9510_es_pullud_lowpower[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown uart1_u9510_es_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown uart2_u9510_es_pullud_lowpower[] = {PULLDOWN, NOPULL, -INVALID,};
enum pull_updown uart3_u9510_es_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown uart4_u9510_es_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown kpc_u9510_es_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLUP, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown sd_u9510_es_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown nand_u9510_es_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown sdio_u9510_es_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown btpm_u9510_es_pullud_lowpower[] = {PULLDOWN, NOPULL, -INVALID,};
enum pull_updown btpwr_u9510_es_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown gps_boardcom_u9510_es_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown ts_u9510_es_pullud_lowpower[] = {NOPULL, PULLUP, -INVALID,};
enum pull_updown lcd_u9510_es_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown pwm_u9510_es_pullud_lowpower[] = {NOPULL, PULLDOWN, -INVALID,};
enum pull_updown hdmi_u9510_es_pullud_lowpower[] = {NOPULL, NOPULL, PULLDOWN, PULLUP, -INVALID,};
enum pull_updown wifi_u9510_es_pullud_lowpower[] = {NOPULL, PULLDOWN, -INVALID,};
enum pull_updown isp_dvp_u9510_es_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown isp_i2c_u9510_es_pullud_lowpower[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown isp_reset_u9510_es_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_u9510_es_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_flash_u9510_es_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown charger_u9510_es_pullud_lowpower[] = {PULLUP, NOPULL, -INVALID,};
enum pull_updown gsensor_u9510_es_pullud_lowpower[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown audio_spk_u9510_es_pullud_lowpower[] = {NOPULL, -INVALID,};
enum pull_updown audio_eph_u9510_es_pullud_lowpower[] = {NOPULL, -INVALID,};
enum pull_updown modem_u9510_es_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, NOPULL, PULLDOWN, PULLDOWN, NOPULL, NOPULL, -INVALID,};
enum pull_updown vbusdrv_u9510_es_pullud_lowpower[] = {NOPULL, -INVALID,};

/******************normal drv****************/

enum drive_strength i2c0_u9510_es_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c1_u9510_es_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c2_u9510_es_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c3_u9510_es_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength spi0_u9510_es_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength spi0_cs_u9510_es_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength uart0_u9510_es_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength uart1_u9510_es_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength uart2_u9510_es_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength uart3_u9510_es_drv_normal[] = {LEVEL2, RESERVE, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength uart4_u9510_es_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength kpc_u9510_es_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength sd_u9510_es_drv_normal[] = {LEVEL2, LEVEL3, LEVEL3, LEVEL3, LEVEL3, LEVEL3, -INVALID,};
enum drive_strength nand_u9510_es_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, RESERVE, RESERVE, RESERVE, RESERVE, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength sdio_u9510_es_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength btpm_u9510_es_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength btpwr_u9510_es_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength gps_boardcom_u9510_es_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength ts_u9510_es_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength lcd_u9510_es_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength pwm_u9510_es_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength hdmi_u9510_es_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength wifi_u9510_es_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_dvp_u9510_es_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_i2c_u9510_es_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_reset_u9510_es_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_u9510_es_drv_normal[] = {LEVEL0, LEVEL0, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_flash_u9510_es_drv_normal[] = {RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength charger_u9510_es_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength gsensor_u9510_es_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength audio_spk_u9510_es_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength audio_eph_u9510_es_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength modem_u9510_es_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength vbusdrv_u9510_es_drv_normal[] = {LEVEL2, -INVALID,};

/******************lowpower drv****************/

enum drive_strength i2c0_u9510_es_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c1_u9510_es_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c2_u9510_es_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c3_u9510_es_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength spi0_u9510_es_drv_lowpower[] = {LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength spi0_cs_u9510_es_drv_lowpower[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength uart0_u9510_es_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength uart1_u9510_es_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength uart2_u9510_es_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength uart3_u9510_es_drv_lowpower[] = {LEVEL2, RESERVE, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength uart4_u9510_es_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength kpc_u9510_es_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength sd_u9510_es_drv_lowpower[] = {LEVEL2, LEVEL3, LEVEL3, LEVEL3, LEVEL3, LEVEL3, -INVALID,};
enum drive_strength nand_u9510_es_drv_lowpower[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, RESERVE, RESERVE, RESERVE, RESERVE, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, -INVALID,};
enum drive_strength sdio_u9510_es_drv_lowpower[] = {LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, -INVALID,};
enum drive_strength btpm_u9510_es_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength btpwr_u9510_es_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength gps_boardcom_u9510_es_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength ts_u9510_es_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength lcd_u9510_es_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength pwm_u9510_es_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength hdmi_u9510_es_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength wifi_u9510_es_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_dvp_u9510_es_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_i2c_u9510_es_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_reset_u9510_es_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_u9510_es_drv_lowpower[] = {LEVEL0, LEVEL0, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_flash_u9510_es_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength charger_u9510_es_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength gsensor_u9510_es_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength audio_spk_u9510_es_drv_lowpower[] = {RESERVE, -INVALID,};
enum drive_strength audio_eph_u9510_es_drv_lowpower[] = {RESERVE, -INVALID,};
enum drive_strength modem_u9510_es_drv_lowpower[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength vbusdrv_u9510_es_drv_lowpower[] = {LEVEL2, -INVALID,};

/******************config****************/

struct block_config i2c0_u9510_es_config[] = {
	[NORMAL] = {i2c0_u9510_es_func_normal, i2c0_u9510_es_pullud_normal, i2c0_u9510_es_drv_normal},
	[LOWPOWER] = {i2c0_u9510_es_func_lowpower, i2c0_u9510_es_pullud_lowpower, i2c0_u9510_es_drv_lowpower},
};
struct block_config i2c1_u9510_es_config[] = {
	[NORMAL] = {i2c1_u9510_es_func_normal, i2c1_u9510_es_pullud_normal, i2c1_u9510_es_drv_normal},
	[LOWPOWER] = {i2c1_u9510_es_func_lowpower, i2c1_u9510_es_pullud_lowpower, i2c1_u9510_es_drv_lowpower},
};
struct block_config i2c2_u9510_es_config[] = {
	[NORMAL] = {i2c2_u9510_es_func_normal, i2c2_u9510_es_pullud_normal, i2c2_u9510_es_drv_normal},
	[LOWPOWER] = {i2c2_u9510_es_func_lowpower, i2c2_u9510_es_pullud_lowpower, i2c2_u9510_es_drv_lowpower},
};
struct block_config i2c3_u9510_es_config[] = {
	[NORMAL] = {i2c3_u9510_es_func_normal, i2c3_u9510_es_pullud_normal, i2c3_u9510_es_drv_normal},
	[LOWPOWER] = {i2c3_u9510_es_func_lowpower, i2c3_u9510_es_pullud_lowpower, i2c3_u9510_es_drv_lowpower},
};
struct block_config spi0_u9510_es_config[] = {
	[NORMAL] = {spi0_u9510_es_func_normal, spi0_u9510_es_pullud_normal, spi0_u9510_es_drv_normal},
	[LOWPOWER] = {spi0_u9510_es_func_lowpower, spi0_u9510_es_pullud_lowpower, spi0_u9510_es_drv_lowpower},
};
struct block_config spi0_cs_u9510_es_config[] = {
	[NORMAL] = {spi0_cs_u9510_es_func_normal, spi0_cs_u9510_es_pullud_normal, spi0_cs_u9510_es_drv_normal},
	[LOWPOWER] = {spi0_cs_u9510_es_func_lowpower, spi0_cs_u9510_es_pullud_lowpower, spi0_cs_u9510_es_drv_lowpower},
};
struct block_config uart0_u9510_es_config[] = {
	[NORMAL] = {uart0_u9510_es_func_normal, uart0_u9510_es_pullud_normal, uart0_u9510_es_drv_normal},
	[LOWPOWER] = {uart0_u9510_es_func_lowpower, uart0_u9510_es_pullud_lowpower, uart0_u9510_es_drv_lowpower},
};
struct block_config uart1_u9510_es_config[] = {
	[NORMAL] = {uart1_u9510_es_func_normal, uart1_u9510_es_pullud_normal, uart1_u9510_es_drv_normal},
	[LOWPOWER] = {uart1_u9510_es_func_lowpower, uart1_u9510_es_pullud_lowpower, uart1_u9510_es_drv_lowpower},
};
struct block_config uart2_u9510_es_config[] = {
	[NORMAL] = {uart2_u9510_es_func_normal, uart2_u9510_es_pullud_normal, uart2_u9510_es_drv_normal},
	[LOWPOWER] = {uart2_u9510_es_func_lowpower, uart2_u9510_es_pullud_lowpower, uart2_u9510_es_drv_lowpower},
};
struct block_config uart3_u9510_es_config[] = {
	[NORMAL] = {uart3_u9510_es_func_normal, uart3_u9510_es_pullud_normal, uart3_u9510_es_drv_normal},
	[LOWPOWER] = {uart3_u9510_es_func_lowpower, uart3_u9510_es_pullud_lowpower, uart3_u9510_es_drv_lowpower},
};
struct block_config uart4_u9510_es_config[] = {
	[NORMAL] = {uart4_u9510_es_func_normal, uart4_u9510_es_pullud_normal, uart4_u9510_es_drv_normal},
	[LOWPOWER] = {uart4_u9510_es_func_lowpower, uart4_u9510_es_pullud_lowpower, uart4_u9510_es_drv_lowpower},
};
struct block_config kpc_u9510_es_config[] = {
	[NORMAL] = {kpc_u9510_es_func_normal, kpc_u9510_es_pullud_normal, kpc_u9510_es_drv_normal},
	[LOWPOWER] = {kpc_u9510_es_func_lowpower, kpc_u9510_es_pullud_lowpower, kpc_u9510_es_drv_lowpower},
};
struct block_config sd_u9510_es_config[] = {
	[NORMAL] = {sd_u9510_es_func_normal, sd_u9510_es_pullud_normal, sd_u9510_es_drv_normal},
	[LOWPOWER] = {sd_u9510_es_func_lowpower, sd_u9510_es_pullud_lowpower, sd_u9510_es_drv_lowpower},
};
struct block_config nand_u9510_es_config[] = {
	[NORMAL] = {nand_u9510_es_func_normal, nand_u9510_es_pullud_normal, nand_u9510_es_drv_normal},
	[LOWPOWER] = {nand_u9510_es_func_lowpower, nand_u9510_es_pullud_lowpower, nand_u9510_es_drv_lowpower},
};
struct block_config sdio_u9510_es_config[] = {
	[NORMAL] = {sdio_u9510_es_func_normal, sdio_u9510_es_pullud_normal, sdio_u9510_es_drv_normal},
	[LOWPOWER] = {sdio_u9510_es_func_lowpower, sdio_u9510_es_pullud_lowpower, sdio_u9510_es_drv_lowpower},
};
struct block_config btpm_u9510_es_config[] = {
	[NORMAL] = {btpm_u9510_es_func_normal, btpm_u9510_es_pullud_normal, btpm_u9510_es_drv_normal},
	[LOWPOWER] = {btpm_u9510_es_func_lowpower, btpm_u9510_es_pullud_lowpower, btpm_u9510_es_drv_lowpower},
};
struct block_config btpwr_u9510_es_config[] = {
	[NORMAL] = {btpwr_u9510_es_func_normal, btpwr_u9510_es_pullud_normal, btpwr_u9510_es_drv_normal},
	[LOWPOWER] = {btpwr_u9510_es_func_lowpower, btpwr_u9510_es_pullud_lowpower, btpwr_u9510_es_drv_lowpower},
};
struct block_config gps_boardcom_u9510_es_config[] = {
	[NORMAL] = {gps_boardcom_u9510_es_func_normal, gps_boardcom_u9510_es_pullud_normal, gps_boardcom_u9510_es_drv_normal},
	[LOWPOWER] = {gps_boardcom_u9510_es_func_lowpower, gps_boardcom_u9510_es_pullud_lowpower, gps_boardcom_u9510_es_drv_lowpower},
};
struct block_config ts_u9510_es_config[] = {
	[NORMAL] = {ts_u9510_es_func_normal, ts_u9510_es_pullud_normal, ts_u9510_es_drv_normal},
	[LOWPOWER] = {ts_u9510_es_func_lowpower, ts_u9510_es_pullud_lowpower, ts_u9510_es_drv_lowpower},
};
struct block_config lcd_u9510_es_config[] = {
	[NORMAL] = {lcd_u9510_es_func_normal, lcd_u9510_es_pullud_normal, lcd_u9510_es_drv_normal},
	[LOWPOWER] = {lcd_u9510_es_func_lowpower, lcd_u9510_es_pullud_lowpower, lcd_u9510_es_drv_lowpower},
};
struct block_config pwm_u9510_es_config[] = {
	[NORMAL] = {pwm_u9510_es_func_normal, pwm_u9510_es_pullud_normal, pwm_u9510_es_drv_normal},
	[LOWPOWER] = {pwm_u9510_es_func_lowpower, pwm_u9510_es_pullud_lowpower, pwm_u9510_es_drv_lowpower},
};
struct block_config hdmi_u9510_es_config[] = {
	[NORMAL] = {hdmi_u9510_es_func_normal, hdmi_u9510_es_pullud_normal, hdmi_u9510_es_drv_normal},
	[LOWPOWER] = {hdmi_u9510_es_func_lowpower, hdmi_u9510_es_pullud_lowpower, hdmi_u9510_es_drv_lowpower},
};
struct block_config wifi_u9510_es_config[] = {
	[NORMAL] = {wifi_u9510_es_func_normal, wifi_u9510_es_pullud_normal, wifi_u9510_es_drv_normal},
	[LOWPOWER] = {wifi_u9510_es_func_lowpower, wifi_u9510_es_pullud_lowpower, wifi_u9510_es_drv_lowpower},
};
struct block_config isp_dvp_u9510_es_config[] = {
	[NORMAL] = {isp_dvp_u9510_es_func_normal, isp_dvp_u9510_es_pullud_normal, isp_dvp_u9510_es_drv_normal},
	[LOWPOWER] = {isp_dvp_u9510_es_func_lowpower, isp_dvp_u9510_es_pullud_lowpower, isp_dvp_u9510_es_drv_lowpower},
};
struct block_config isp_i2c_u9510_es_config[] = {
	[NORMAL] = {isp_i2c_u9510_es_func_normal, isp_i2c_u9510_es_pullud_normal, isp_i2c_u9510_es_drv_normal},
	[LOWPOWER] = {isp_i2c_u9510_es_func_lowpower, isp_i2c_u9510_es_pullud_lowpower, isp_i2c_u9510_es_drv_lowpower},
};
struct block_config isp_reset_u9510_es_config[] = {
	[NORMAL] = {isp_reset_u9510_es_func_normal, isp_reset_u9510_es_pullud_normal, isp_reset_u9510_es_drv_normal},
	[LOWPOWER] = {isp_reset_u9510_es_func_lowpower, isp_reset_u9510_es_pullud_lowpower, isp_reset_u9510_es_drv_lowpower},
};
struct block_config isp_u9510_es_config[] = {
	[NORMAL] = {isp_u9510_es_func_normal, isp_u9510_es_pullud_normal, isp_u9510_es_drv_normal},
	[LOWPOWER] = {isp_u9510_es_func_lowpower, isp_u9510_es_pullud_lowpower, isp_u9510_es_drv_lowpower},
};
struct block_config isp_flash_u9510_es_config[] = {
	[NORMAL] = {isp_flash_u9510_es_func_normal, isp_flash_u9510_es_pullud_normal, isp_flash_u9510_es_drv_normal},
	[LOWPOWER] = {isp_flash_u9510_es_func_lowpower, isp_flash_u9510_es_pullud_lowpower, isp_flash_u9510_es_drv_lowpower},
};
struct block_config charger_u9510_es_config[] = {
	[NORMAL] = {charger_u9510_es_func_normal, charger_u9510_es_pullud_normal, charger_u9510_es_drv_normal},
	[LOWPOWER] = {charger_u9510_es_func_lowpower, charger_u9510_es_pullud_lowpower, charger_u9510_es_drv_lowpower},
};
struct block_config gsensor_u9510_es_config[] = {
	[NORMAL] = {gsensor_u9510_es_func_normal, gsensor_u9510_es_pullud_normal, gsensor_u9510_es_drv_normal},
	[LOWPOWER] = {gsensor_u9510_es_func_lowpower, gsensor_u9510_es_pullud_lowpower, gsensor_u9510_es_drv_lowpower},
};
struct block_config audio_spk_u9510_es_config[] = {
	[NORMAL] = {audio_spk_u9510_es_func_normal, audio_spk_u9510_es_pullud_normal, audio_spk_u9510_es_drv_normal},
	[LOWPOWER] = {audio_spk_u9510_es_func_lowpower, audio_spk_u9510_es_pullud_lowpower, audio_spk_u9510_es_drv_lowpower},
};
struct block_config audio_eph_u9510_es_config[] = {
	[NORMAL] = {audio_eph_u9510_es_func_normal, audio_eph_u9510_es_pullud_normal, audio_eph_u9510_es_drv_normal},
	[LOWPOWER] = {audio_eph_u9510_es_func_lowpower, audio_eph_u9510_es_pullud_lowpower, audio_eph_u9510_es_drv_lowpower},
};
struct block_config modem_u9510_es_config[] = {
	[NORMAL] = {modem_u9510_es_func_normal, modem_u9510_es_pullud_normal, modem_u9510_es_drv_normal},
	[LOWPOWER] = {modem_u9510_es_func_lowpower, modem_u9510_es_pullud_lowpower, modem_u9510_es_drv_lowpower},
};
struct block_config vbusdrv_u9510_es_config[] = {
	[NORMAL] = {vbusdrv_u9510_es_func_normal, vbusdrv_u9510_es_pullud_normal, vbusdrv_u9510_es_drv_normal},
	[LOWPOWER] = {vbusdrv_u9510_es_func_lowpower, vbusdrv_u9510_es_pullud_lowpower, vbusdrv_u9510_es_drv_lowpower},
};


/******************pins ****************/

struct  iomux_pin *audio_es305_u9510_es_pins[] = {
&gpio_127, &gpio_128, NULL,
};
struct  iomux_pin *emmc_u9510_es_pins[] = {
&gpio_028, &gpio_029, &gpio_030, &gpio_031, &gpio_032, &gpio_033, &gpio_034, &gpio_035, &gpio_036, &gpio_037, NULL,
};

/******************IOMUX_BLOCK****************/

IOMUX_BLOCK(block_audio_es305_u9510_es, "block_audio_es305_u9510_es", NORMAL, audio_es305_u9510_es_pins)
IOMUX_BLOCK(block_emmc_u9510_es, "block_emmc_u9510_es", NORMAL, emmc_u9510_es_pins)

/******************normal func ****************/

enum lowlayer_func audio_es305_u9510_es_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func emmc_u9510_es_func_normal[] = {FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, -INVALID,};

/******************lowpower func****************/

enum lowlayer_func audio_es305_u9510_es_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func emmc_u9510_es_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC0, FUNC0, -INVALID,};

/******************normal pullud****************/

enum pull_updown audio_es305_u9510_es_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown emmc_u9510_es_pullud_normal[] = {PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, NOPULL, -INVALID,};

/******************lowpower pullud****************/

enum pull_updown audio_es305_u9510_es_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown emmc_u9510_es_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};

/******************normal drv****************/

enum drive_strength audio_es305_u9510_es_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength emmc_u9510_es_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};

/******************lowpower drv****************/

enum drive_strength audio_es305_u9510_es_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength emmc_u9510_es_drv_lowpower[] = {LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, -INVALID,};

/******************config****************/

struct block_config audio_es305_u9510_es_config[] = {
	[NORMAL] = {audio_es305_u9510_es_func_normal, audio_es305_u9510_es_pullud_normal, audio_es305_u9510_es_drv_normal},
	[LOWPOWER] = {audio_es305_u9510_es_func_lowpower, audio_es305_u9510_es_pullud_lowpower, audio_es305_u9510_es_drv_lowpower},
};
struct block_config emmc_u9510_es_config[] = {
	[NORMAL] = {emmc_u9510_es_func_normal, emmc_u9510_es_pullud_normal, emmc_u9510_es_drv_normal},
	[LOWPOWER] = {emmc_u9510_es_func_lowpower, emmc_u9510_es_pullud_lowpower, emmc_u9510_es_drv_lowpower},
};

struct block_table block_config_phone_u9510_es[] = {
     BLOCK_CONFIG("block_i2c0", &block_i2c0_u9510_es, i2c0_u9510_es_config)
     BLOCK_CONFIG("block_i2c1", &block_i2c1_u9510_es, i2c1_u9510_es_config)
     BLOCK_CONFIG("block_i2c2", &block_i2c2_u9510_es, i2c2_u9510_es_config)
     BLOCK_CONFIG("block_i2c3", &block_i2c3_u9510_es, i2c3_u9510_es_config)
     BLOCK_CONFIG("block_spi0", &block_spi0_u9510_es, spi0_u9510_es_config)
     BLOCK_CONFIG("block_spi0_cs", &block_spi0_cs_u9510_es, spi0_cs_u9510_es_config)
     BLOCK_CONFIG("block_uart0", &block_uart0_u9510_es, uart0_u9510_es_config)
     BLOCK_CONFIG("block_uart1", &block_uart1_u9510_es, uart1_u9510_es_config)
     BLOCK_CONFIG("block_uart2", &block_uart2_u9510_es, uart2_u9510_es_config)
     BLOCK_CONFIG("block_uart3", &block_uart3_u9510_es, uart3_u9510_es_config)
     BLOCK_CONFIG("block_uart4", &block_uart4_u9510_es, uart4_u9510_es_config)
     BLOCK_CONFIG("block_kpc", &block_kpc_u9510_es, kpc_u9510_es_config)
     BLOCK_CONFIG("block_sd", &block_sd_u9510_es, sd_u9510_es_config)
     BLOCK_CONFIG("block_nand", &block_nand_u9510_es, nand_u9510_es_config)
     BLOCK_CONFIG("block_sdio", &block_sdio_u9510_es, sdio_u9510_es_config)
     BLOCK_CONFIG("block_btpm", &block_btpm_u9510_es, btpm_u9510_es_config)
     BLOCK_CONFIG("block_btpwr", &block_btpwr_u9510_es, btpwr_u9510_es_config)
     BLOCK_CONFIG("block_gps_boardcom", &block_gps_boardcom_u9510_es, gps_boardcom_u9510_es_config)
     BLOCK_CONFIG("block_ts", &block_ts_u9510_es, ts_u9510_es_config)
     BLOCK_CONFIG("block_lcd", &block_lcd_u9510_es, lcd_u9510_es_config)
     BLOCK_CONFIG("block_pwm", &block_pwm_u9510_es, pwm_u9510_es_config)
     BLOCK_CONFIG("block_hdmi", &block_hdmi_u9510_es, hdmi_u9510_es_config)
     BLOCK_CONFIG("block_wifi", &block_wifi_u9510_es, wifi_u9510_es_config)
     BLOCK_CONFIG("block_isp_dvp", &block_isp_dvp_u9510_es, isp_dvp_u9510_es_config)
     BLOCK_CONFIG("block_isp_i2c", &block_isp_i2c_u9510_es, isp_i2c_u9510_es_config)
     BLOCK_CONFIG("block_isp_reset", &block_isp_reset_u9510_es, isp_reset_u9510_es_config)
     BLOCK_CONFIG("block_isp", &block_isp_u9510_es, isp_u9510_es_config)
     BLOCK_CONFIG("block_isp_flash", &block_isp_flash_u9510_es, isp_flash_u9510_es_config)
     BLOCK_CONFIG("block_charger", &block_charger_u9510_es, charger_u9510_es_config)
     BLOCK_CONFIG("block_gsensor", &block_gsensor_u9510_es, gsensor_u9510_es_config)
     BLOCK_CONFIG("block_audio_spk", &block_audio_spk_u9510_es, audio_spk_u9510_es_config)
     BLOCK_CONFIG("block_audio_eph", &block_audio_eph_u9510_es, audio_eph_u9510_es_config)
     BLOCK_CONFIG("block_modem", &block_modem_u9510_es, modem_u9510_es_config)
     BLOCK_CONFIG("block_vbusdrv", &block_vbusdrv_u9510_es, vbusdrv_u9510_es_config)
     BLOCK_CONFIG("block_audio_es305", &block_audio_es305_u9510_es, audio_es305_u9510_es_config)
     BLOCK_CONFIG("block_emmc", &block_emmc_u9510_es, emmc_u9510_es_config)
     {NULL, NULL, NULL},
};


/******************pins ****************/

struct  iomux_pin *i2c0_u9510_cs_pins[] = {
&gpio_084_cs, &gpio_085_cs, NULL,
};
struct  iomux_pin *i2c1_u9510_cs_pins[] = {
&gpio_086_cs, &gpio_087_cs, NULL,
};
struct  iomux_pin *i2c2_u9510_cs_pins[] = {
&gpio_063_cs, &gpio_064_cs, NULL,
};
struct  iomux_pin *i2c3_u9510_cs_pins[] = {
&gpio_057_cs, &gpio_058_cs, NULL,
};
struct  iomux_pin *spi0_u9510_cs_pins[] = {
&gpio_107_cs, &gpio_108_cs, NULL,
};
struct  iomux_pin *spi0_cs_u9510_cs_pins[] = {
&gpio_109_cs, &gpio_110_cs, &gpio_111_cs, &gpio_112_cs, NULL,
};
struct  iomux_pin *uart0_u9510_cs_pins[] = {
&gpio_119_cs, &gpio_120_cs, NULL,
};
struct  iomux_pin *uart1_u9510_cs_pins[] = {
&gpio_121_cs, &gpio_122_cs, &gpio_123_cs, &gpio_124_cs, NULL,
};
struct  iomux_pin *uart2_u9510_cs_pins[] = {
&gpio_127_cs, &gpio_128_cs, NULL,
};
struct  iomux_pin *uart4_u9510_cs_pins[] = {
&gpio_162_cs, &gpio_163_cs, &gpio_164_cs, &gpio_165_cs, NULL,
};
struct  iomux_pin *kpc_u9510_cs_pins[] = {
&gpio_129_cs, &gpio_130_cs, &gpio_131_cs, &gpio_137_cs, &gpio_138_cs, &gpio_139_cs, NULL,
};
struct  iomux_pin *sd_u9510_cs_pins[] = {
&gpio_088_cs, &gpio_089_cs, &gpio_090_cs, &gpio_091_cs, &gpio_092_cs, &gpio_093_cs, NULL,
};
struct  iomux_pin *nand_u9510_cs_pins[] = {
&gpio_010_cs, &gpio_011_cs, &gpio_012_cs, &gpio_013_cs, &gpio_014_cs, &gpio_015_cs, &gpio_016_cs, &gpio_017_cs, &gpio_018_cs, &gpio_019_cs, &gpio_020_cs, &gpio_021_cs, &gpio_022_cs, &gpio_023_cs, &gpio_024_cs, &gpio_025_cs, &gpio_026_cs, &gpio_028_cs, &gpio_029_cs, &gpio_030_cs, &gpio_031_cs, &gpio_032_cs, &gpio_033_cs, &gpio_034_cs, &gpio_035_cs, NULL,
};
struct  iomux_pin *sdio_u9510_cs_pins[] = {
&gpio_100_cs, &gpio_101_cs, &gpio_102_cs, &gpio_103_cs, &gpio_104_cs, &gpio_105_cs, NULL,
};
struct  iomux_pin *btpm_u9510_cs_pins[] = {
&gpio_166_cs, &gpio_167_cs, NULL,
};
struct  iomux_pin *btpwr_u9510_cs_pins[] = {
&gpio_168_cs, &gpio_169_cs, NULL,
};
struct  iomux_pin *gps_boardcom_u9510_cs_pins[] = {
&gpio_151_cs, &gpio_152_cs, NULL,
};
struct  iomux_pin *ts_u9510_cs_pins[] = {
&gpio_156_cs, &gpio_157_cs, NULL,
};
struct  iomux_pin *lcd_u9510_cs_pins[] = {
&gpio_003_cs, &gpio_072_cs, &gpio_135_cs, &gpio_136_cs, &gpio_171_cs, NULL,
};
struct  iomux_pin *pwm_u9510_cs_pins[] = {
&gpio_149_cs, &gpio_150_cs, NULL,
};
struct  iomux_pin *hdmi_u9510_cs_pins[] = {
&gpio_038_cs, &gpio_039_cs, &gpio_040_cs, &gpio_041_cs, NULL,
};
struct  iomux_pin *wifi_u9510_cs_pins[] = {
&gpio_002_cs, &gpio_004_cs, NULL,
};
struct  iomux_pin *isp_dvp_u9510_cs_pins[] = {
&gpio_043_cs, &gpio_044_cs, &gpio_045_cs, &gpio_046_cs, &gpio_047_cs, &gpio_048_cs, &gpio_049_cs, &gpio_054_cs, NULL,
};
struct  iomux_pin *isp_i2c_u9510_cs_pins[] = {
&gpio_055_cs, &gpio_056_cs, NULL,
};
struct  iomux_pin *isp_reset_u9510_cs_pins[] = {
&gpio_059_cs, &gpio_060_cs, NULL,
};
struct  iomux_pin *isp_u9510_cs_pins[] = {
&gpio_067_cs, &gpio_068_cs, &gpio_069_cs, &gpio_070_cs, &gpio_071_cs, &gpio_075_cs, NULL,
};
struct  iomux_pin *isp_flash_u9510_cs_pins[] = {
&gpio_065_cs, &gpio_066_cs, &gpio_076_cs, NULL,
};
struct  iomux_pin *charger_u9510_cs_pins[] = {
&gpio_005_cs, &gpio_074_cs, NULL,
};
struct  iomux_pin *gsensor_u9510_cs_pins[] = {
&gpio_051_cs, &gpio_148_cs, NULL,
};
struct  iomux_pin *audio_spk_u9510_cs_pins[] = {
&gpio_117_cs, NULL,
};
struct  iomux_pin *audio_eph_u9510_cs_pins[] = {
&gpio_118_cs, NULL,
};
struct  iomux_pin *modem_u9510_cs_pins[] = {
&gpio_094_cs, &gpio_095_cs, &gpio_096_cs, &gpio_097_cs, &gpio_098_cs, &gpio_113_cs, &gpio_114_cs, &gpio_115_cs, NULL,
};
struct  iomux_pin *vbusdrv_u9510_cs_pins[] = {
&gpio_082_cs, NULL,
};
struct  iomux_pin *gps_spi_u9510_cs_pins[] = {
&gpio_154_cs, &gpio_155_cs, &gpio_160_cs, &gpio_161_cs, NULL,
};
struct  iomux_pin *modem_switch_u9510_cs_pins[] = {
&gpio_106_cs, NULL,
};
struct  iomux_pin *mcamdvdd_u9510_cs_pins[] = {
&gpio_073_cs, NULL,
};
struct  iomux_pin *usb_switch_u9510_cs_pins[] = {
&gpio_008_cs, &gpio_009_cs, &gpio_027_cs, &gpio_042_cs, &gpio_052_cs, &gpio_053_cs, &gpio_099_cs, &gpio_174_cs, NULL,
};

/******************IOMUX_BLOCK****************/

IOMUX_BLOCK(block_i2c0_u9510_cs, "block_i2c0_u9510_cs", NORMAL, i2c0_u9510_cs_pins)
IOMUX_BLOCK(block_i2c1_u9510_cs, "block_i2c1_u9510_cs", NORMAL, i2c1_u9510_cs_pins)
IOMUX_BLOCK(block_i2c2_u9510_cs, "block_i2c2_u9510_cs", NORMAL, i2c2_u9510_cs_pins)
IOMUX_BLOCK(block_i2c3_u9510_cs, "block_i2c3_u9510_cs", NORMAL, i2c3_u9510_cs_pins)
IOMUX_BLOCK(block_spi0_u9510_cs, "block_spi0_u9510_cs", NORMAL, spi0_u9510_cs_pins)
IOMUX_BLOCK(block_spi0_cs_u9510_cs, "block_spi0_cs_u9510_cs", NORMAL, spi0_cs_u9510_cs_pins)
IOMUX_BLOCK(block_uart0_u9510_cs, "block_uart0_u9510_cs", NORMAL, uart0_u9510_cs_pins)
IOMUX_BLOCK(block_uart1_u9510_cs, "block_uart1_u9510_cs", NORMAL, uart1_u9510_cs_pins)
IOMUX_BLOCK(block_uart2_u9510_cs, "block_uart2_u9510_cs", NORMAL, uart2_u9510_cs_pins)
IOMUX_BLOCK(block_uart4_u9510_cs, "block_uart4_u9510_cs", NORMAL, uart4_u9510_cs_pins)
IOMUX_BLOCK(block_kpc_u9510_cs, "block_kpc_u9510_cs", NORMAL, kpc_u9510_cs_pins)
IOMUX_BLOCK(block_sd_u9510_cs, "block_sd_u9510_cs", NORMAL, sd_u9510_cs_pins)
IOMUX_BLOCK(block_nand_u9510_cs, "block_nand_u9510_cs", NORMAL, nand_u9510_cs_pins)
IOMUX_BLOCK(block_sdio_u9510_cs, "block_sdio_u9510_cs", NORMAL, sdio_u9510_cs_pins)
IOMUX_BLOCK(block_btpm_u9510_cs, "block_btpm_u9510_cs", NORMAL, btpm_u9510_cs_pins)
IOMUX_BLOCK(block_btpwr_u9510_cs, "block_btpwr_u9510_cs", NORMAL, btpwr_u9510_cs_pins)
IOMUX_BLOCK(block_gps_boardcom_u9510_cs, "block_gps_boardcom_u9510_cs", NORMAL, gps_boardcom_u9510_cs_pins)
IOMUX_BLOCK(block_ts_u9510_cs, "block_ts_u9510_cs", NORMAL, ts_u9510_cs_pins)
IOMUX_BLOCK(block_lcd_u9510_cs, "block_lcd_u9510_cs", NORMAL, lcd_u9510_cs_pins)
IOMUX_BLOCK(block_pwm_u9510_cs, "block_pwm_u9510_cs", NORMAL, pwm_u9510_cs_pins)
IOMUX_BLOCK(block_hdmi_u9510_cs, "block_hdmi_u9510_cs", NORMAL, hdmi_u9510_cs_pins)
IOMUX_BLOCK(block_wifi_u9510_cs, "block_wifi_u9510_cs", NORMAL, wifi_u9510_cs_pins)
IOMUX_BLOCK(block_isp_dvp_u9510_cs, "block_isp_dvp_u9510_cs", NORMAL, isp_dvp_u9510_cs_pins)
IOMUX_BLOCK(block_isp_i2c_u9510_cs, "block_isp_i2c_u9510_cs", NORMAL, isp_i2c_u9510_cs_pins)
IOMUX_BLOCK(block_isp_reset_u9510_cs, "block_isp_reset_u9510_cs", NORMAL, isp_reset_u9510_cs_pins)
IOMUX_BLOCK(block_isp_u9510_cs, "block_isp_u9510_cs", NORMAL, isp_u9510_cs_pins)
IOMUX_BLOCK(block_isp_flash_u9510_cs, "block_isp_flash_u9510_cs", NORMAL, isp_flash_u9510_cs_pins)
IOMUX_BLOCK(block_charger_u9510_cs, "block_charger_u9510_cs", NORMAL, charger_u9510_cs_pins)
IOMUX_BLOCK(block_gsensor_u9510_cs, "block_gsensor_u9510_cs", NORMAL, gsensor_u9510_cs_pins)
IOMUX_BLOCK(block_audio_spk_u9510_cs, "block_audio_spk_u9510_cs", NORMAL, audio_spk_u9510_cs_pins)
IOMUX_BLOCK(block_audio_eph_u9510_cs, "block_audio_eph_u9510_cs", NORMAL, audio_eph_u9510_cs_pins)
IOMUX_BLOCK(block_modem_u9510_cs, "block_modem_u9510_cs", NORMAL, modem_u9510_cs_pins)
IOMUX_BLOCK(block_vbusdrv_u9510_cs, "block_vbusdrv_u9510_cs", NORMAL, vbusdrv_u9510_cs_pins)
IOMUX_BLOCK(block_gps_spi_u9510_cs, "block_gps_spi_u9510_cs", NORMAL, gps_spi_u9510_cs_pins)
IOMUX_BLOCK(block_modem_switch_u9510_cs, "block_modem_switch_u9510_cs", NORMAL, modem_switch_u9510_cs_pins)
IOMUX_BLOCK(block_mcamdvdd_u9510_cs, "block_mcamdvdd_u9510_cs", NORMAL, mcamdvdd_u9510_cs_pins)
IOMUX_BLOCK(block_usb_switch_u9510_cs, "block_usb_switch_u9510_cs", NORMAL, usb_switch_u9510_cs_pins)

/******************normal func ****************/

enum lowlayer_func i2c0_u9510_cs_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func i2c1_u9510_cs_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func i2c2_u9510_cs_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func i2c3_u9510_cs_func_normal[] = {FUNC2, FUNC2, -INVALID,};
enum lowlayer_func spi0_u9510_cs_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func spi0_cs_u9510_cs_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func uart0_u9510_cs_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func uart1_u9510_cs_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func uart2_u9510_cs_func_normal[] = {FUNC2, FUNC2, -INVALID,};
enum lowlayer_func uart4_u9510_cs_func_normal[] = {FUNC2, FUNC2, FUNC2, FUNC2, -INVALID,};
enum lowlayer_func kpc_u9510_cs_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func sd_u9510_cs_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func nand_u9510_cs_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func sdio_u9510_cs_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func btpm_u9510_cs_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func btpwr_u9510_cs_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func gps_boardcom_u9510_cs_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func ts_u9510_cs_func_normal[] = {RESERVE, RESERVE, -INVALID,};
enum lowlayer_func lcd_u9510_cs_func_normal[] = {FUNC0, FUNC2, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func pwm_u9510_cs_func_normal[] = {FUNC0, FUNC1, -INVALID,};
enum lowlayer_func hdmi_u9510_cs_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func wifi_u9510_cs_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_dvp_u9510_cs_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_i2c_u9510_cs_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_reset_u9510_cs_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_u9510_cs_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_flash_u9510_cs_func_normal[] = {FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func charger_u9510_cs_func_normal[] = {FUNC0, FUNC1, -INVALID,};
enum lowlayer_func gsensor_u9510_cs_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func audio_spk_u9510_cs_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func audio_eph_u9510_cs_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func modem_u9510_cs_func_normal[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func vbusdrv_u9510_cs_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func gps_spi_u9510_cs_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func modem_switch_u9510_cs_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func mcamdvdd_u9510_cs_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func usb_switch_u9510_cs_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, RESERVE, RESERVE, -INVALID,};

/******************lowpower func****************/

enum lowlayer_func i2c0_u9510_cs_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func i2c1_u9510_cs_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func i2c2_u9510_cs_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func i2c3_u9510_cs_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func spi0_u9510_cs_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func spi0_cs_u9510_cs_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart0_u9510_cs_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart1_u9510_cs_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart2_u9510_cs_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart4_u9510_cs_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func kpc_u9510_cs_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func sd_u9510_cs_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func nand_u9510_cs_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func sdio_u9510_cs_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func btpm_u9510_cs_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func btpwr_u9510_cs_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func gps_boardcom_u9510_cs_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func ts_u9510_cs_func_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum lowlayer_func lcd_u9510_cs_func_lowpower[] = {FUNC0, FUNC2, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func pwm_u9510_cs_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func hdmi_u9510_cs_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func wifi_u9510_cs_func_lowpower[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_dvp_u9510_cs_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func isp_i2c_u9510_cs_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func isp_reset_u9510_cs_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func isp_u9510_cs_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC0, -INVALID,};
enum lowlayer_func isp_flash_u9510_cs_func_lowpower[] = {FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func charger_u9510_cs_func_lowpower[] = {FUNC0, FUNC1, -INVALID,};
enum lowlayer_func gsensor_u9510_cs_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func audio_spk_u9510_cs_func_lowpower[] = {FUNC1, -INVALID,};
enum lowlayer_func audio_eph_u9510_cs_func_lowpower[] = {FUNC1, -INVALID,};
enum lowlayer_func modem_u9510_cs_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func vbusdrv_u9510_cs_func_lowpower[] = {FUNC0, -INVALID,};
enum lowlayer_func gps_spi_u9510_cs_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func modem_switch_u9510_cs_func_lowpower[] = {FUNC1, -INVALID,};
enum lowlayer_func mcamdvdd_u9510_cs_func_lowpower[] = {FUNC1, -INVALID,};
enum lowlayer_func usb_switch_u9510_cs_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};

/******************normal pullud****************/

enum pull_updown i2c0_u9510_cs_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c1_u9510_cs_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c2_u9510_cs_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c3_u9510_cs_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown spi0_u9510_cs_pullud_normal[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown spi0_cs_u9510_cs_pullud_normal[] = {PULLDOWN, PULLDOWN, NOPULL, NOPULL, -INVALID,};
enum pull_updown uart0_u9510_cs_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown uart1_u9510_cs_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown uart2_u9510_cs_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown uart4_u9510_cs_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown kpc_u9510_cs_pullud_normal[] = {PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, -INVALID,};
enum pull_updown sd_u9510_cs_pullud_normal[] = {NOPULL, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, -INVALID,};
enum pull_updown nand_u9510_cs_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown sdio_u9510_cs_pullud_normal[] = {NOPULL, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, -INVALID,};
enum pull_updown btpm_u9510_cs_pullud_normal[] = {PULLUP, NOPULL, -INVALID,};
enum pull_updown btpwr_u9510_cs_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown gps_boardcom_u9510_cs_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown ts_u9510_cs_pullud_normal[] = {NOPULL, PULLUP, -INVALID,};
enum pull_updown lcd_u9510_cs_pullud_normal[] = {NOPULL, PULLDOWN, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown pwm_u9510_cs_pullud_normal[] = {NOPULL, PULLDOWN, -INVALID,};
enum pull_updown hdmi_u9510_cs_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown wifi_u9510_cs_pullud_normal[] = {NOPULL, PULLDOWN, -INVALID,};
enum pull_updown isp_dvp_u9510_cs_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_i2c_u9510_cs_pullud_normal[] = {PULLUP, PULLUP, -INVALID,};
enum pull_updown isp_reset_u9510_cs_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_u9510_cs_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_flash_u9510_cs_pullud_normal[] = {NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown charger_u9510_cs_pullud_normal[] = {PULLUP, NOPULL, -INVALID,};
enum pull_updown gsensor_u9510_cs_pullud_normal[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown audio_spk_u9510_cs_pullud_normal[] = {NOPULL, -INVALID,};
enum pull_updown audio_eph_u9510_cs_pullud_normal[] = {NOPULL, -INVALID,};
enum pull_updown modem_u9510_cs_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown vbusdrv_u9510_cs_pullud_normal[] = {NOPULL, -INVALID,};
enum pull_updown gps_spi_u9510_cs_pullud_normal[] = {NOPULL, NOPULL, NOPULL, PULLDOWN, -INVALID,};
enum pull_updown modem_switch_u9510_cs_pullud_normal[] = {NOPULL, -INVALID,};
enum pull_updown mcamdvdd_u9510_cs_pullud_normal[] = {NOPULL, -INVALID,};
enum pull_updown usb_switch_u9510_cs_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, RESERVE, RESERVE, -INVALID,};

/******************lowpower pullud****************/

enum pull_updown i2c0_u9510_cs_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c1_u9510_cs_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c2_u9510_cs_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c3_u9510_cs_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown spi0_u9510_cs_pullud_lowpower[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown spi0_cs_u9510_cs_pullud_lowpower[] = {PULLDOWN, PULLDOWN, NOPULL, NOPULL, -INVALID,};
enum pull_updown uart0_u9510_cs_pullud_lowpower[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown uart1_u9510_cs_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown uart2_u9510_cs_pullud_lowpower[] = {PULLDOWN, NOPULL, -INVALID,};
enum pull_updown uart4_u9510_cs_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown kpc_u9510_cs_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLUP, PULLUP, PULLDOWN, -INVALID,};
enum pull_updown sd_u9510_cs_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown nand_u9510_cs_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown sdio_u9510_cs_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown btpm_u9510_cs_pullud_lowpower[] = {PULLDOWN, NOPULL, -INVALID,};
enum pull_updown btpwr_u9510_cs_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown gps_boardcom_u9510_cs_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown ts_u9510_cs_pullud_lowpower[] = {NOPULL, PULLUP, -INVALID,};
enum pull_updown lcd_u9510_cs_pullud_lowpower[] = {NOPULL, PULLDOWN, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown pwm_u9510_cs_pullud_lowpower[] = {NOPULL, PULLDOWN, -INVALID,};
enum pull_updown hdmi_u9510_cs_pullud_lowpower[] = {NOPULL, NOPULL, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown wifi_u9510_cs_pullud_lowpower[] = {NOPULL, PULLDOWN, -INVALID,};
enum pull_updown isp_dvp_u9510_cs_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown isp_i2c_u9510_cs_pullud_lowpower[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown isp_reset_u9510_cs_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_u9510_cs_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_flash_u9510_cs_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown charger_u9510_cs_pullud_lowpower[] = {PULLUP, NOPULL, -INVALID,};
enum pull_updown gsensor_u9510_cs_pullud_lowpower[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown audio_spk_u9510_cs_pullud_lowpower[] = {NOPULL, -INVALID,};
enum pull_updown audio_eph_u9510_cs_pullud_lowpower[] = {NOPULL, -INVALID,};
enum pull_updown modem_u9510_cs_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, NOPULL, PULLDOWN, PULLDOWN, NOPULL, NOPULL, -INVALID,};
enum pull_updown vbusdrv_u9510_cs_pullud_lowpower[] = {NOPULL, -INVALID,};
enum pull_updown gps_spi_u9510_cs_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown modem_switch_u9510_cs_pullud_lowpower[] = {NOPULL, -INVALID,};
enum pull_updown mcamdvdd_u9510_cs_pullud_lowpower[] = {NOPULL, -INVALID,};
enum pull_updown usb_switch_u9510_cs_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, NOPULL, -INVALID,};

/******************normal drv****************/

enum drive_strength i2c0_u9510_cs_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c1_u9510_cs_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c2_u9510_cs_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c3_u9510_cs_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength spi0_u9510_cs_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength spi0_cs_u9510_cs_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength uart0_u9510_cs_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength uart1_u9510_cs_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength uart2_u9510_cs_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength uart4_u9510_cs_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength kpc_u9510_cs_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength sd_u9510_cs_drv_normal[] = {LEVEL2, LEVEL3, LEVEL3, LEVEL3, LEVEL3, LEVEL3, -INVALID,};
enum drive_strength nand_u9510_cs_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, RESERVE, RESERVE, RESERVE, RESERVE, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength sdio_u9510_cs_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength btpm_u9510_cs_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength btpwr_u9510_cs_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength gps_boardcom_u9510_cs_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength ts_u9510_cs_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength lcd_u9510_cs_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength pwm_u9510_cs_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength hdmi_u9510_cs_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength wifi_u9510_cs_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_dvp_u9510_cs_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_i2c_u9510_cs_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_reset_u9510_cs_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_u9510_cs_drv_normal[] = {LEVEL0, LEVEL0, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_flash_u9510_cs_drv_normal[] = {RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength charger_u9510_cs_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength gsensor_u9510_cs_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength audio_spk_u9510_cs_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength audio_eph_u9510_cs_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength modem_u9510_cs_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength vbusdrv_u9510_cs_drv_normal[] = {LEVEL2, -INVALID,};
enum drive_strength gps_spi_u9510_cs_drv_normal[] = {LEVEL2, RESERVE, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength modem_switch_u9510_cs_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength mcamdvdd_u9510_cs_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength usb_switch_u9510_cs_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};

/******************lowpower drv****************/

enum drive_strength i2c0_u9510_cs_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c1_u9510_cs_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c2_u9510_cs_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c3_u9510_cs_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength spi0_u9510_cs_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength spi0_cs_u9510_cs_drv_lowpower[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength uart0_u9510_cs_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength uart1_u9510_cs_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength uart2_u9510_cs_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength uart4_u9510_cs_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength kpc_u9510_cs_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength sd_u9510_cs_drv_lowpower[] = {LEVEL2, LEVEL3, LEVEL3, LEVEL3, LEVEL3, LEVEL3, -INVALID,};
enum drive_strength nand_u9510_cs_drv_lowpower[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, RESERVE, RESERVE, RESERVE, RESERVE, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, -INVALID,};
enum drive_strength sdio_u9510_cs_drv_lowpower[] = {LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, -INVALID,};
enum drive_strength btpm_u9510_cs_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength btpwr_u9510_cs_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength gps_boardcom_u9510_cs_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength ts_u9510_cs_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength lcd_u9510_cs_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength pwm_u9510_cs_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength hdmi_u9510_cs_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength wifi_u9510_cs_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_dvp_u9510_cs_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_i2c_u9510_cs_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_reset_u9510_cs_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_u9510_cs_drv_lowpower[] = {LEVEL0, LEVEL0, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_flash_u9510_cs_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength charger_u9510_cs_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength gsensor_u9510_cs_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength audio_spk_u9510_cs_drv_lowpower[] = {RESERVE, -INVALID,};
enum drive_strength audio_eph_u9510_cs_drv_lowpower[] = {RESERVE, -INVALID,};
enum drive_strength modem_u9510_cs_drv_lowpower[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength vbusdrv_u9510_cs_drv_lowpower[] = {LEVEL2, -INVALID,};
enum drive_strength gps_spi_u9510_cs_drv_lowpower[] = {LEVEL2, RESERVE, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength modem_switch_u9510_cs_drv_lowpower[] = {RESERVE, -INVALID,};
enum drive_strength mcamdvdd_u9510_cs_drv_lowpower[] = {RESERVE, -INVALID,};
enum drive_strength usb_switch_u9510_cs_drv_lowpower[] = {LEVEL2, LEVEL2, LEVEL2, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};

/******************config****************/

struct block_config i2c0_u9510_cs_config[] = {
	[NORMAL] = {i2c0_u9510_cs_func_normal, i2c0_u9510_cs_pullud_normal, i2c0_u9510_cs_drv_normal},
	[LOWPOWER] = {i2c0_u9510_cs_func_lowpower, i2c0_u9510_cs_pullud_lowpower, i2c0_u9510_cs_drv_lowpower},
};
struct block_config i2c1_u9510_cs_config[] = {
	[NORMAL] = {i2c1_u9510_cs_func_normal, i2c1_u9510_cs_pullud_normal, i2c1_u9510_cs_drv_normal},
	[LOWPOWER] = {i2c1_u9510_cs_func_lowpower, i2c1_u9510_cs_pullud_lowpower, i2c1_u9510_cs_drv_lowpower},
};
struct block_config i2c2_u9510_cs_config[] = {
	[NORMAL] = {i2c2_u9510_cs_func_normal, i2c2_u9510_cs_pullud_normal, i2c2_u9510_cs_drv_normal},
	[LOWPOWER] = {i2c2_u9510_cs_func_lowpower, i2c2_u9510_cs_pullud_lowpower, i2c2_u9510_cs_drv_lowpower},
};
struct block_config i2c3_u9510_cs_config[] = {
	[NORMAL] = {i2c3_u9510_cs_func_normal, i2c3_u9510_cs_pullud_normal, i2c3_u9510_cs_drv_normal},
	[LOWPOWER] = {i2c3_u9510_cs_func_lowpower, i2c3_u9510_cs_pullud_lowpower, i2c3_u9510_cs_drv_lowpower},
};
struct block_config spi0_u9510_cs_config[] = {
	[NORMAL] = {spi0_u9510_cs_func_normal, spi0_u9510_cs_pullud_normal, spi0_u9510_cs_drv_normal},
	[LOWPOWER] = {spi0_u9510_cs_func_lowpower, spi0_u9510_cs_pullud_lowpower, spi0_u9510_cs_drv_lowpower},
};
struct block_config spi0_cs_u9510_cs_config[] = {
	[NORMAL] = {spi0_cs_u9510_cs_func_normal, spi0_cs_u9510_cs_pullud_normal, spi0_cs_u9510_cs_drv_normal},
	[LOWPOWER] = {spi0_cs_u9510_cs_func_lowpower, spi0_cs_u9510_cs_pullud_lowpower, spi0_cs_u9510_cs_drv_lowpower},
};
struct block_config uart0_u9510_cs_config[] = {
	[NORMAL] = {uart0_u9510_cs_func_normal, uart0_u9510_cs_pullud_normal, uart0_u9510_cs_drv_normal},
	[LOWPOWER] = {uart0_u9510_cs_func_lowpower, uart0_u9510_cs_pullud_lowpower, uart0_u9510_cs_drv_lowpower},
};
struct block_config uart1_u9510_cs_config[] = {
	[NORMAL] = {uart1_u9510_cs_func_normal, uart1_u9510_cs_pullud_normal, uart1_u9510_cs_drv_normal},
	[LOWPOWER] = {uart1_u9510_cs_func_lowpower, uart1_u9510_cs_pullud_lowpower, uart1_u9510_cs_drv_lowpower},
};
struct block_config uart2_u9510_cs_config[] = {
	[NORMAL] = {uart2_u9510_cs_func_normal, uart2_u9510_cs_pullud_normal, uart2_u9510_cs_drv_normal},
	[LOWPOWER] = {uart2_u9510_cs_func_lowpower, uart2_u9510_cs_pullud_lowpower, uart2_u9510_cs_drv_lowpower},
};
struct block_config uart4_u9510_cs_config[] = {
	[NORMAL] = {uart4_u9510_cs_func_normal, uart4_u9510_cs_pullud_normal, uart4_u9510_cs_drv_normal},
	[LOWPOWER] = {uart4_u9510_cs_func_lowpower, uart4_u9510_cs_pullud_lowpower, uart4_u9510_cs_drv_lowpower},
};
struct block_config kpc_u9510_cs_config[] = {
	[NORMAL] = {kpc_u9510_cs_func_normal, kpc_u9510_cs_pullud_normal, kpc_u9510_cs_drv_normal},
	[LOWPOWER] = {kpc_u9510_cs_func_lowpower, kpc_u9510_cs_pullud_lowpower, kpc_u9510_cs_drv_lowpower},
};
struct block_config sd_u9510_cs_config[] = {
	[NORMAL] = {sd_u9510_cs_func_normal, sd_u9510_cs_pullud_normal, sd_u9510_cs_drv_normal},
	[LOWPOWER] = {sd_u9510_cs_func_lowpower, sd_u9510_cs_pullud_lowpower, sd_u9510_cs_drv_lowpower},
};
struct block_config nand_u9510_cs_config[] = {
	[NORMAL] = {nand_u9510_cs_func_normal, nand_u9510_cs_pullud_normal, nand_u9510_cs_drv_normal},
	[LOWPOWER] = {nand_u9510_cs_func_lowpower, nand_u9510_cs_pullud_lowpower, nand_u9510_cs_drv_lowpower},
};
struct block_config sdio_u9510_cs_config[] = {
	[NORMAL] = {sdio_u9510_cs_func_normal, sdio_u9510_cs_pullud_normal, sdio_u9510_cs_drv_normal},
	[LOWPOWER] = {sdio_u9510_cs_func_lowpower, sdio_u9510_cs_pullud_lowpower, sdio_u9510_cs_drv_lowpower},
};
struct block_config btpm_u9510_cs_config[] = {
	[NORMAL] = {btpm_u9510_cs_func_normal, btpm_u9510_cs_pullud_normal, btpm_u9510_cs_drv_normal},
	[LOWPOWER] = {btpm_u9510_cs_func_lowpower, btpm_u9510_cs_pullud_lowpower, btpm_u9510_cs_drv_lowpower},
};
struct block_config btpwr_u9510_cs_config[] = {
	[NORMAL] = {btpwr_u9510_cs_func_normal, btpwr_u9510_cs_pullud_normal, btpwr_u9510_cs_drv_normal},
	[LOWPOWER] = {btpwr_u9510_cs_func_lowpower, btpwr_u9510_cs_pullud_lowpower, btpwr_u9510_cs_drv_lowpower},
};
struct block_config gps_boardcom_u9510_cs_config[] = {
	[NORMAL] = {gps_boardcom_u9510_cs_func_normal, gps_boardcom_u9510_cs_pullud_normal, gps_boardcom_u9510_cs_drv_normal},
	[LOWPOWER] = {gps_boardcom_u9510_cs_func_lowpower, gps_boardcom_u9510_cs_pullud_lowpower, gps_boardcom_u9510_cs_drv_lowpower},
};
struct block_config ts_u9510_cs_config[] = {
	[NORMAL] = {ts_u9510_cs_func_normal, ts_u9510_cs_pullud_normal, ts_u9510_cs_drv_normal},
	[LOWPOWER] = {ts_u9510_cs_func_lowpower, ts_u9510_cs_pullud_lowpower, ts_u9510_cs_drv_lowpower},
};
struct block_config lcd_u9510_cs_config[] = {
	[NORMAL] = {lcd_u9510_cs_func_normal, lcd_u9510_cs_pullud_normal, lcd_u9510_cs_drv_normal},
	[LOWPOWER] = {lcd_u9510_cs_func_lowpower, lcd_u9510_cs_pullud_lowpower, lcd_u9510_cs_drv_lowpower},
};
struct block_config pwm_u9510_cs_config[] = {
	[NORMAL] = {pwm_u9510_cs_func_normal, pwm_u9510_cs_pullud_normal, pwm_u9510_cs_drv_normal},
	[LOWPOWER] = {pwm_u9510_cs_func_lowpower, pwm_u9510_cs_pullud_lowpower, pwm_u9510_cs_drv_lowpower},
};
struct block_config hdmi_u9510_cs_config[] = {
	[NORMAL] = {hdmi_u9510_cs_func_normal, hdmi_u9510_cs_pullud_normal, hdmi_u9510_cs_drv_normal},
	[LOWPOWER] = {hdmi_u9510_cs_func_lowpower, hdmi_u9510_cs_pullud_lowpower, hdmi_u9510_cs_drv_lowpower},
};
struct block_config wifi_u9510_cs_config[] = {
	[NORMAL] = {wifi_u9510_cs_func_normal, wifi_u9510_cs_pullud_normal, wifi_u9510_cs_drv_normal},
	[LOWPOWER] = {wifi_u9510_cs_func_lowpower, wifi_u9510_cs_pullud_lowpower, wifi_u9510_cs_drv_lowpower},
};
struct block_config isp_dvp_u9510_cs_config[] = {
	[NORMAL] = {isp_dvp_u9510_cs_func_normal, isp_dvp_u9510_cs_pullud_normal, isp_dvp_u9510_cs_drv_normal},
	[LOWPOWER] = {isp_dvp_u9510_cs_func_lowpower, isp_dvp_u9510_cs_pullud_lowpower, isp_dvp_u9510_cs_drv_lowpower},
};
struct block_config isp_i2c_u9510_cs_config[] = {
	[NORMAL] = {isp_i2c_u9510_cs_func_normal, isp_i2c_u9510_cs_pullud_normal, isp_i2c_u9510_cs_drv_normal},
	[LOWPOWER] = {isp_i2c_u9510_cs_func_lowpower, isp_i2c_u9510_cs_pullud_lowpower, isp_i2c_u9510_cs_drv_lowpower},
};
struct block_config isp_reset_u9510_cs_config[] = {
	[NORMAL] = {isp_reset_u9510_cs_func_normal, isp_reset_u9510_cs_pullud_normal, isp_reset_u9510_cs_drv_normal},
	[LOWPOWER] = {isp_reset_u9510_cs_func_lowpower, isp_reset_u9510_cs_pullud_lowpower, isp_reset_u9510_cs_drv_lowpower},
};
struct block_config isp_u9510_cs_config[] = {
	[NORMAL] = {isp_u9510_cs_func_normal, isp_u9510_cs_pullud_normal, isp_u9510_cs_drv_normal},
	[LOWPOWER] = {isp_u9510_cs_func_lowpower, isp_u9510_cs_pullud_lowpower, isp_u9510_cs_drv_lowpower},
};
struct block_config isp_flash_u9510_cs_config[] = {
	[NORMAL] = {isp_flash_u9510_cs_func_normal, isp_flash_u9510_cs_pullud_normal, isp_flash_u9510_cs_drv_normal},
	[LOWPOWER] = {isp_flash_u9510_cs_func_lowpower, isp_flash_u9510_cs_pullud_lowpower, isp_flash_u9510_cs_drv_lowpower},
};
struct block_config charger_u9510_cs_config[] = {
	[NORMAL] = {charger_u9510_cs_func_normal, charger_u9510_cs_pullud_normal, charger_u9510_cs_drv_normal},
	[LOWPOWER] = {charger_u9510_cs_func_lowpower, charger_u9510_cs_pullud_lowpower, charger_u9510_cs_drv_lowpower},
};
struct block_config gsensor_u9510_cs_config[] = {
	[NORMAL] = {gsensor_u9510_cs_func_normal, gsensor_u9510_cs_pullud_normal, gsensor_u9510_cs_drv_normal},
	[LOWPOWER] = {gsensor_u9510_cs_func_lowpower, gsensor_u9510_cs_pullud_lowpower, gsensor_u9510_cs_drv_lowpower},
};
struct block_config audio_spk_u9510_cs_config[] = {
	[NORMAL] = {audio_spk_u9510_cs_func_normal, audio_spk_u9510_cs_pullud_normal, audio_spk_u9510_cs_drv_normal},
	[LOWPOWER] = {audio_spk_u9510_cs_func_lowpower, audio_spk_u9510_cs_pullud_lowpower, audio_spk_u9510_cs_drv_lowpower},
};
struct block_config audio_eph_u9510_cs_config[] = {
	[NORMAL] = {audio_eph_u9510_cs_func_normal, audio_eph_u9510_cs_pullud_normal, audio_eph_u9510_cs_drv_normal},
	[LOWPOWER] = {audio_eph_u9510_cs_func_lowpower, audio_eph_u9510_cs_pullud_lowpower, audio_eph_u9510_cs_drv_lowpower},
};
struct block_config modem_u9510_cs_config[] = {
	[NORMAL] = {modem_u9510_cs_func_normal, modem_u9510_cs_pullud_normal, modem_u9510_cs_drv_normal},
	[LOWPOWER] = {modem_u9510_cs_func_lowpower, modem_u9510_cs_pullud_lowpower, modem_u9510_cs_drv_lowpower},
};
struct block_config vbusdrv_u9510_cs_config[] = {
	[NORMAL] = {vbusdrv_u9510_cs_func_normal, vbusdrv_u9510_cs_pullud_normal, vbusdrv_u9510_cs_drv_normal},
	[LOWPOWER] = {vbusdrv_u9510_cs_func_lowpower, vbusdrv_u9510_cs_pullud_lowpower, vbusdrv_u9510_cs_drv_lowpower},
};
struct block_config gps_spi_u9510_cs_config[] = {
	[NORMAL] = {gps_spi_u9510_cs_func_normal, gps_spi_u9510_cs_pullud_normal, gps_spi_u9510_cs_drv_normal},
	[LOWPOWER] = {gps_spi_u9510_cs_func_lowpower, gps_spi_u9510_cs_pullud_lowpower, gps_spi_u9510_cs_drv_lowpower},
};
struct block_config modem_switch_u9510_cs_config[] = {
	[NORMAL] = {modem_switch_u9510_cs_func_normal, modem_switch_u9510_cs_pullud_normal, modem_switch_u9510_cs_drv_normal},
	[LOWPOWER] = {modem_switch_u9510_cs_func_lowpower, modem_switch_u9510_cs_pullud_lowpower, modem_switch_u9510_cs_drv_lowpower},
};
struct block_config mcamdvdd_u9510_cs_config[] = {
	[NORMAL] = {mcamdvdd_u9510_cs_func_normal, mcamdvdd_u9510_cs_pullud_normal, mcamdvdd_u9510_cs_drv_normal},
	[LOWPOWER] = {mcamdvdd_u9510_cs_func_lowpower, mcamdvdd_u9510_cs_pullud_lowpower, mcamdvdd_u9510_cs_drv_lowpower},
};
struct block_config usb_switch_u9510_cs_config[] = {
	[NORMAL] = {usb_switch_u9510_cs_func_normal, usb_switch_u9510_cs_pullud_normal, usb_switch_u9510_cs_drv_normal},
	[LOWPOWER] = {usb_switch_u9510_cs_func_lowpower, usb_switch_u9510_cs_pullud_lowpower, usb_switch_u9510_cs_drv_lowpower},
};


/******************pins ****************/

struct  iomux_pin *audio_es305_u9510_cs_pins[] = {
&gpio_127_cs, &gpio_128_cs, NULL,
};
struct  iomux_pin *spi1_u9510_cs_pins[] = {
&gpio_113_cs, &gpio_114_cs, &gpio_115_cs, &gpio_116_cs, NULL,
};
struct  iomux_pin *uart3_u9510_cs_pins[] = {
&gpio_154_cs, &gpio_155_cs, &gpio_160_cs, &gpio_161_cs, NULL,
};
struct  iomux_pin *emmc_u9510_cs_pins[] = {
&gpio_028_cs, &gpio_029_cs, &gpio_030_cs, &gpio_031_cs, &gpio_032_cs, &gpio_033_cs, &gpio_034_cs, &gpio_035_cs, &gpio_036_cs, &gpio_037_cs, NULL,
};

/******************IOMUX_BLOCK****************/

IOMUX_BLOCK(block_audio_es305_u9510_cs, "block_audio_es305_u9510_cs", NORMAL, audio_es305_u9510_cs_pins)
IOMUX_BLOCK(block_spi1_u9510_cs, "block_spi1_u9510_cs", NORMAL, spi1_u9510_cs_pins)
IOMUX_BLOCK(block_uart3_u9510_cs, "block_uart3_u9510_cs", NORMAL, uart3_u9510_cs_pins)
IOMUX_BLOCK(block_emmc_u9510_cs, "block_emmc_u9510_cs", NORMAL, emmc_u9510_cs_pins)

/******************normal func ****************/

enum lowlayer_func audio_es305_u9510_cs_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func spi1_u9510_cs_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func uart3_u9510_cs_func_normal[] = {FUNC2, FUNC2, FUNC2, FUNC2, -INVALID,};
enum lowlayer_func emmc_u9510_cs_func_normal[] = {FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, -INVALID,};

/******************lowpower func****************/

enum lowlayer_func audio_es305_u9510_cs_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func spi1_u9510_cs_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart3_u9510_cs_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func emmc_u9510_cs_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC0, FUNC0, -INVALID,};

/******************normal pullud****************/

enum pull_updown audio_es305_u9510_cs_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown spi1_u9510_cs_pullud_normal[] = {PULLUP, NOPULL, NOPULL, PULLDOWN, -INVALID,};
enum pull_updown uart3_u9510_cs_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown emmc_u9510_cs_pullud_normal[] = {PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, NOPULL, -INVALID,};

/******************lowpower pullud****************/

enum pull_updown audio_es305_u9510_cs_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown spi1_u9510_cs_pullud_lowpower[] = {PULLUP, NOPULL, NOPULL, PULLDOWN, -INVALID,};
enum pull_updown uart3_u9510_cs_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown emmc_u9510_cs_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};

/******************normal drv****************/

enum drive_strength audio_es305_u9510_cs_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength spi1_u9510_cs_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength uart3_u9510_cs_drv_normal[] = {LEVEL2, RESERVE, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength emmc_u9510_cs_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};

/******************lowpower drv****************/

enum drive_strength audio_es305_u9510_cs_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength spi1_u9510_cs_drv_lowpower[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength uart3_u9510_cs_drv_lowpower[] = {LEVEL2, RESERVE, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength emmc_u9510_cs_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};

/******************config****************/

struct block_config audio_es305_u9510_cs_config[] = {
	[NORMAL] = {audio_es305_u9510_cs_func_normal, audio_es305_u9510_cs_pullud_normal, audio_es305_u9510_cs_drv_normal},
	[LOWPOWER] = {audio_es305_u9510_cs_func_lowpower, audio_es305_u9510_cs_pullud_lowpower, audio_es305_u9510_cs_drv_lowpower},
};
struct block_config spi1_u9510_cs_config[] = {
	[NORMAL] = {spi1_u9510_cs_func_normal, spi1_u9510_cs_pullud_normal, spi1_u9510_cs_drv_normal},
	[LOWPOWER] = {spi1_u9510_cs_func_lowpower, spi1_u9510_cs_pullud_lowpower, spi1_u9510_cs_drv_lowpower},
};
struct block_config uart3_u9510_cs_config[] = {
	[NORMAL] = {uart3_u9510_cs_func_normal, uart3_u9510_cs_pullud_normal, uart3_u9510_cs_drv_normal},
	[LOWPOWER] = {uart3_u9510_cs_func_lowpower, uart3_u9510_cs_pullud_lowpower, uart3_u9510_cs_drv_lowpower},
};
struct block_config emmc_u9510_cs_config[] = {
	[NORMAL] = {emmc_u9510_cs_func_normal, emmc_u9510_cs_pullud_normal, emmc_u9510_cs_drv_normal},
	[LOWPOWER] = {emmc_u9510_cs_func_lowpower, emmc_u9510_cs_pullud_lowpower, emmc_u9510_cs_drv_lowpower},
};

struct block_table block_config_phone_u9510_cs[] = {
     BLOCK_CONFIG("block_i2c0", &block_i2c0_u9510_cs, i2c0_u9510_cs_config)
     BLOCK_CONFIG("block_i2c1", &block_i2c1_u9510_cs, i2c1_u9510_cs_config)
     BLOCK_CONFIG("block_i2c2", &block_i2c2_u9510_cs, i2c2_u9510_cs_config)
     BLOCK_CONFIG("block_i2c3", &block_i2c3_u9510_cs, i2c3_u9510_cs_config)
     BLOCK_CONFIG("block_spi0", &block_spi0_u9510_cs, spi0_u9510_cs_config)
     BLOCK_CONFIG("block_spi0_cs", &block_spi0_cs_u9510_cs, spi0_cs_u9510_cs_config)
     BLOCK_CONFIG("block_uart0", &block_uart0_u9510_cs, uart0_u9510_cs_config)
     BLOCK_CONFIG("block_uart1", &block_uart1_u9510_cs, uart1_u9510_cs_config)
     BLOCK_CONFIG("block_uart2", &block_uart2_u9510_cs, uart2_u9510_cs_config)
     BLOCK_CONFIG("block_uart4", &block_uart4_u9510_cs, uart4_u9510_cs_config)
     BLOCK_CONFIG("block_kpc", &block_kpc_u9510_cs, kpc_u9510_cs_config)
     BLOCK_CONFIG("block_sd", &block_sd_u9510_cs, sd_u9510_cs_config)
     BLOCK_CONFIG("block_nand", &block_nand_u9510_cs, nand_u9510_cs_config)
     BLOCK_CONFIG("block_sdio", &block_sdio_u9510_cs, sdio_u9510_cs_config)
     BLOCK_CONFIG("block_btpm", &block_btpm_u9510_cs, btpm_u9510_cs_config)
     BLOCK_CONFIG("block_btpwr", &block_btpwr_u9510_cs, btpwr_u9510_cs_config)
     BLOCK_CONFIG("block_gps_boardcom", &block_gps_boardcom_u9510_cs, gps_boardcom_u9510_cs_config)
     BLOCK_CONFIG("block_ts", &block_ts_u9510_cs, ts_u9510_cs_config)
     BLOCK_CONFIG("block_lcd", &block_lcd_u9510_cs, lcd_u9510_cs_config)
     BLOCK_CONFIG("block_pwm", &block_pwm_u9510_cs, pwm_u9510_cs_config)
     BLOCK_CONFIG("block_hdmi", &block_hdmi_u9510_cs, hdmi_u9510_cs_config)
     BLOCK_CONFIG("block_wifi", &block_wifi_u9510_cs, wifi_u9510_cs_config)
     BLOCK_CONFIG("block_isp_dvp", &block_isp_dvp_u9510_cs, isp_dvp_u9510_cs_config)
     BLOCK_CONFIG("block_isp_i2c", &block_isp_i2c_u9510_cs, isp_i2c_u9510_cs_config)
     BLOCK_CONFIG("block_isp_reset", &block_isp_reset_u9510_cs, isp_reset_u9510_cs_config)
     BLOCK_CONFIG("block_isp", &block_isp_u9510_cs, isp_u9510_cs_config)
     BLOCK_CONFIG("block_isp_flash", &block_isp_flash_u9510_cs, isp_flash_u9510_cs_config)
     BLOCK_CONFIG("block_charger", &block_charger_u9510_cs, charger_u9510_cs_config)
     BLOCK_CONFIG("block_gsensor", &block_gsensor_u9510_cs, gsensor_u9510_cs_config)
     BLOCK_CONFIG("block_audio_spk", &block_audio_spk_u9510_cs, audio_spk_u9510_cs_config)
     BLOCK_CONFIG("block_audio_eph", &block_audio_eph_u9510_cs, audio_eph_u9510_cs_config)
     BLOCK_CONFIG("block_modem", &block_modem_u9510_cs, modem_u9510_cs_config)
     BLOCK_CONFIG("block_vbusdrv", &block_vbusdrv_u9510_cs, vbusdrv_u9510_cs_config)
     BLOCK_CONFIG("block_gps_spi", &block_gps_spi_u9510_cs, gps_spi_u9510_cs_config)
     BLOCK_CONFIG("block_modem_switch", &block_modem_switch_u9510_cs, modem_switch_u9510_cs_config)
     BLOCK_CONFIG("block_mcamdvdd", &block_mcamdvdd_u9510_cs, mcamdvdd_u9510_cs_config)
     BLOCK_CONFIG("block_usb_switch", &block_usb_switch_u9510_cs, usb_switch_u9510_cs_config)
     BLOCK_CONFIG("block_audio_es305", &block_audio_es305_u9510_cs, audio_es305_u9510_cs_config)
     BLOCK_CONFIG("block_spi1", &block_spi1_u9510_cs, spi1_u9510_cs_config)
     BLOCK_CONFIG("block_uart3", &block_uart3_u9510_cs, uart3_u9510_cs_config)
     BLOCK_CONFIG("block_emmc", &block_emmc_u9510_cs, emmc_u9510_cs_config)
     {NULL, NULL, NULL},
};


/******************pins ****************/

struct  iomux_pin *i2c0_c9800d_pins[] = {
&gpio_084_cs, &gpio_085_cs, NULL,
};
struct  iomux_pin *i2c1_c9800d_pins[] = {
&gpio_086_cs, &gpio_087_cs, NULL,
};
struct  iomux_pin *i2c2_c9800d_pins[] = {
&gpio_063_cs, &gpio_064_cs, NULL,
};
struct  iomux_pin *i2c3_c9800d_pins[] = {
&gpio_057_cs, &gpio_058_cs, NULL,
};
struct  iomux_pin *spi0_c9800d_pins[] = {
&gpio_107_cs, &gpio_108_cs, NULL,
};
struct  iomux_pin *spi0_cs_c9800d_pins[] = {
&gpio_109_cs, &gpio_110_cs, &gpio_111_cs, &gpio_112_cs, NULL,
};
struct  iomux_pin *uart0_c9800d_pins[] = {
&gpio_119_cs, &gpio_120_cs, NULL,
};
struct  iomux_pin *uart1_c9800d_pins[] = {
&gpio_121_cs, &gpio_122_cs, &gpio_123_cs, &gpio_124_cs, NULL,
};
struct  iomux_pin *uart2_c9800d_pins[] = {
&gpio_127_cs, &gpio_128_cs, NULL,
};
struct  iomux_pin *uart4_c9800d_pins[] = {
&gpio_162_cs, &gpio_163_cs, &gpio_164_cs, &gpio_165_cs, NULL,
};
struct  iomux_pin *kpc_c9800d_pins[] = {
&gpio_129_cs, &gpio_130_cs, &gpio_131_cs, &gpio_137_cs, &gpio_138_cs, &gpio_139_cs, NULL,
};
struct  iomux_pin *sd_c9800d_pins[] = {
&gpio_088_cs, &gpio_089_cs, &gpio_090_cs, &gpio_091_cs, &gpio_092_cs, &gpio_093_cs, NULL,
};
struct  iomux_pin *nand_c9800d_pins[] = {
&gpio_010_cs, &gpio_011_cs, &gpio_012_cs, &gpio_013_cs, &gpio_014_cs, &gpio_015_cs, &gpio_016_cs, &gpio_017_cs, &gpio_018_cs, &gpio_019_cs, &gpio_020_cs, &gpio_021_cs, &gpio_022_cs, &gpio_023_cs, &gpio_024_cs, &gpio_025_cs, &gpio_026_cs, &gpio_028_cs, &gpio_029_cs, &gpio_030_cs, &gpio_031_cs, &gpio_032_cs, &gpio_033_cs, &gpio_034_cs, &gpio_035_cs, NULL,
};
struct  iomux_pin *sdio_c9800d_pins[] = {
&gpio_100_cs, &gpio_101_cs, &gpio_102_cs, &gpio_103_cs, &gpio_104_cs, &gpio_105_cs, NULL,
};
struct  iomux_pin *btpm_c9800d_pins[] = {
&gpio_166_cs, &gpio_167_cs, NULL,
};
struct  iomux_pin *btpwr_c9800d_pins[] = {
&gpio_168_cs, &gpio_169_cs, NULL,
};
struct  iomux_pin *gps_boardcom_c9800d_pins[] = {
&gpio_151_cs, &gpio_152_cs, NULL,
};
struct  iomux_pin *ts_c9800d_pins[] = {
&gpio_156_cs, &gpio_157_cs, NULL,
};
struct  iomux_pin *lcd_c9800d_pins[] = {
&gpio_003_cs, &gpio_072_cs, &gpio_135_cs, &gpio_136_cs, &gpio_171_cs, NULL,
};
struct  iomux_pin *pwm_c9800d_pins[] = {
&gpio_149_cs, &gpio_150_cs, NULL,
};
struct  iomux_pin *hdmi_c9800d_pins[] = {
&gpio_038_cs, &gpio_039_cs, &gpio_040_cs, &gpio_041_cs, NULL,
};
struct  iomux_pin *wifi_c9800d_pins[] = {
&gpio_002_cs, &gpio_004_cs, NULL,
};
struct  iomux_pin *isp_dvp_c9800d_pins[] = {
&gpio_043_cs, &gpio_044_cs, &gpio_045_cs, &gpio_046_cs, &gpio_047_cs, &gpio_048_cs, &gpio_049_cs, &gpio_054_cs, NULL,
};
struct  iomux_pin *isp_i2c_c9800d_pins[] = {
&gpio_055_cs, &gpio_056_cs, NULL,
};
struct  iomux_pin *isp_reset_c9800d_pins[] = {
&gpio_059_cs, &gpio_060_cs, NULL,
};
struct  iomux_pin *isp_c9800d_pins[] = {
&gpio_067_cs, &gpio_068_cs, &gpio_069_cs, &gpio_070_cs, &gpio_071_cs, &gpio_075_cs, NULL,
};
struct  iomux_pin *isp_flash_c9800d_pins[] = {
&gpio_065_cs, &gpio_066_cs, &gpio_076_cs, NULL,
};
struct  iomux_pin *charger_c9800d_pins[] = {
&gpio_005_cs, &gpio_074_cs, NULL,
};
struct  iomux_pin *gsensor_c9800d_pins[] = {
&gpio_051_cs, &gpio_148_cs, NULL,
};
struct  iomux_pin *audio_spk_c9800d_pins[] = {
&gpio_117_cs, NULL,
};
struct  iomux_pin *audio_eph_c9800d_pins[] = {
&gpio_118_cs, NULL,
};
struct  iomux_pin *modem_c9800d_pins[] = {
&gpio_094_cs, &gpio_095_cs, &gpio_096_cs, &gpio_097_cs, &gpio_098_cs, &gpio_113_cs, &gpio_114_cs, &gpio_115_cs, NULL,
};
struct  iomux_pin *vbusdrv_c9800d_pins[] = {
&gpio_082_cs, NULL,
};
struct  iomux_pin *gps_spi_c9800d_pins[] = {
&gpio_154_cs, &gpio_155_cs, &gpio_160_cs, &gpio_161_cs, NULL,
};
struct  iomux_pin *modem_switch_c9800d_pins[] = {
&gpio_106_cs, NULL,
};
struct  iomux_pin *mcamdvdd_c9800d_pins[] = {
&gpio_073_cs, NULL,
};
struct  iomux_pin *usb_switch_c9800d_pins[] = {
&gpio_008_cs, &gpio_009_cs, &gpio_027_cs, &gpio_042_cs, &gpio_052_cs, &gpio_053_cs, &gpio_099_cs, &gpio_174_cs, NULL,
};
struct  iomux_pin *modem_qsc_c9800d_pins[] = {
&gpio_006_cs, NULL,
};
struct  iomux_pin *sensor_gyr_c9800d_pins[] = {
&gpio_050_cs, &gpio_147_cs, NULL,
};
struct  iomux_pin *headset_uart_c9800d_pins[] = {
&gpio_061_cs, NULL,
};
struct  iomux_pin *mhl_c9800d_pins[] = {
&gpio_080_cs, &gpio_081_cs, NULL,
};
struct  iomux_pin *sensor_com_c9800d_pins[] = {
&gpio_125_cs, NULL,
};
struct  iomux_pin *sensor_pro_c9800d_pins[] = {
&gpio_126_cs, NULL,
};
struct  iomux_pin *therm_c9800d_pins[] = {
&gpio_132_cs, NULL,
};
struct  iomux_pin *es305_c9800d_pins[] = {
&gpio_145_cs, &gpio_146_cs, NULL,
};
struct  iomux_pin *pmu_c9800d_pins[] = {
&gpio_158_cs, &gpio_159_cs, NULL,
};
struct  iomux_pin *battery_c9800d_pins[] = {
&gpio_170_cs, NULL,
};
struct  iomux_pin *camera_c9800d_pins[] = {
&gpio_173_cs, NULL,
};

/******************IOMUX_BLOCK****************/

IOMUX_BLOCK(block_i2c0_c9800d, "block_i2c0_c9800d", NORMAL, i2c0_c9800d_pins)
IOMUX_BLOCK(block_i2c1_c9800d, "block_i2c1_c9800d", NORMAL, i2c1_c9800d_pins)
IOMUX_BLOCK(block_i2c2_c9800d, "block_i2c2_c9800d", NORMAL, i2c2_c9800d_pins)
IOMUX_BLOCK(block_i2c3_c9800d, "block_i2c3_c9800d", NORMAL, i2c3_c9800d_pins)
IOMUX_BLOCK(block_spi0_c9800d, "block_spi0_c9800d", NORMAL, spi0_c9800d_pins)
IOMUX_BLOCK(block_spi0_cs_c9800d, "block_spi0_cs_c9800d", NORMAL, spi0_cs_c9800d_pins)
IOMUX_BLOCK(block_uart0_c9800d, "block_uart0_c9800d", NORMAL, uart0_c9800d_pins)
IOMUX_BLOCK(block_uart1_c9800d, "block_uart1_c9800d", NORMAL, uart1_c9800d_pins)
IOMUX_BLOCK(block_uart2_c9800d, "block_uart2_c9800d", NORMAL, uart2_c9800d_pins)
IOMUX_BLOCK(block_uart4_c9800d, "block_uart4_c9800d", NORMAL, uart4_c9800d_pins)
IOMUX_BLOCK(block_kpc_c9800d, "block_kpc_c9800d", NORMAL, kpc_c9800d_pins)
IOMUX_BLOCK(block_sd_c9800d, "block_sd_c9800d", NORMAL, sd_c9800d_pins)
IOMUX_BLOCK(block_nand_c9800d, "block_nand_c9800d", NORMAL, nand_c9800d_pins)
IOMUX_BLOCK(block_sdio_c9800d, "block_sdio_c9800d", NORMAL, sdio_c9800d_pins)
IOMUX_BLOCK(block_btpm_c9800d, "block_btpm_c9800d", NORMAL, btpm_c9800d_pins)
IOMUX_BLOCK(block_btpwr_c9800d, "block_btpwr_c9800d", NORMAL, btpwr_c9800d_pins)
IOMUX_BLOCK(block_gps_boardcom_c9800d, "block_gps_boardcom_c9800d", NORMAL, gps_boardcom_c9800d_pins)
IOMUX_BLOCK(block_ts_c9800d, "block_ts_c9800d", NORMAL, ts_c9800d_pins)
IOMUX_BLOCK(block_lcd_c9800d, "block_lcd_c9800d", NORMAL, lcd_c9800d_pins)
IOMUX_BLOCK(block_pwm_c9800d, "block_pwm_c9800d", NORMAL, pwm_c9800d_pins)
IOMUX_BLOCK(block_hdmi_c9800d, "block_hdmi_c9800d", NORMAL, hdmi_c9800d_pins)
IOMUX_BLOCK(block_wifi_c9800d, "block_wifi_c9800d", NORMAL, wifi_c9800d_pins)
IOMUX_BLOCK(block_isp_dvp_c9800d, "block_isp_dvp_c9800d", NORMAL, isp_dvp_c9800d_pins)
IOMUX_BLOCK(block_isp_i2c_c9800d, "block_isp_i2c_c9800d", NORMAL, isp_i2c_c9800d_pins)
IOMUX_BLOCK(block_isp_reset_c9800d, "block_isp_reset_c9800d", NORMAL, isp_reset_c9800d_pins)
IOMUX_BLOCK(block_isp_c9800d, "block_isp_c9800d", NORMAL, isp_c9800d_pins)
IOMUX_BLOCK(block_isp_flash_c9800d, "block_isp_flash_c9800d", NORMAL, isp_flash_c9800d_pins)
IOMUX_BLOCK(block_charger_c9800d, "block_charger_c9800d", NORMAL, charger_c9800d_pins)
IOMUX_BLOCK(block_gsensor_c9800d, "block_gsensor_c9800d", NORMAL, gsensor_c9800d_pins)
IOMUX_BLOCK(block_audio_spk_c9800d, "block_audio_spk_c9800d", NORMAL, audio_spk_c9800d_pins)
IOMUX_BLOCK(block_audio_eph_c9800d, "block_audio_eph_c9800d", NORMAL, audio_eph_c9800d_pins)
IOMUX_BLOCK(block_modem_c9800d, "block_modem_c9800d", NORMAL, modem_c9800d_pins)
IOMUX_BLOCK(block_vbusdrv_c9800d, "block_vbusdrv_c9800d", NORMAL, vbusdrv_c9800d_pins)
IOMUX_BLOCK(block_gps_spi_c9800d, "block_gps_spi_c9800d", NORMAL, gps_spi_c9800d_pins)
IOMUX_BLOCK(block_modem_switch_c9800d, "block_modem_switch_c9800d", NORMAL, modem_switch_c9800d_pins)
IOMUX_BLOCK(block_mcamdvdd_c9800d, "block_mcamdvdd_c9800d", NORMAL, mcamdvdd_c9800d_pins)
IOMUX_BLOCK(block_usb_switch_c9800d, "block_usb_switch_c9800d", NORMAL, usb_switch_c9800d_pins)
IOMUX_BLOCK(block_modem_qsc_c9800d, "block_modem_qsc_c9800d", NORMAL, modem_qsc_c9800d_pins)
IOMUX_BLOCK(block_sensor_gyr_c9800d, "block_sensor_gyr_c9800d", NORMAL, sensor_gyr_c9800d_pins)
IOMUX_BLOCK(block_headset_uart_c9800d, "block_headset_uart_c9800d", NORMAL, headset_uart_c9800d_pins)
IOMUX_BLOCK(block_mhl_c9800d, "block_mhl_c9800d", NORMAL, mhl_c9800d_pins)
IOMUX_BLOCK(block_sensor_com_c9800d, "block_sensor_com_c9800d", NORMAL, sensor_com_c9800d_pins)
IOMUX_BLOCK(block_sensor_pro_c9800d, "block_sensor_pro_c9800d", NORMAL, sensor_pro_c9800d_pins)
IOMUX_BLOCK(block_therm_c9800d, "block_therm_c9800d", NORMAL, therm_c9800d_pins)
IOMUX_BLOCK(block_es305_c9800d, "block_es305_c9800d", NORMAL, es305_c9800d_pins)
IOMUX_BLOCK(block_pmu_c9800d, "block_pmu_c9800d", NORMAL, pmu_c9800d_pins)
IOMUX_BLOCK(block_battery_c9800d, "block_battery_c9800d", NORMAL, battery_c9800d_pins)
IOMUX_BLOCK(block_camera_c9800d, "block_camera_c9800d", NORMAL, camera_c9800d_pins)

/******************normal func ****************/

enum lowlayer_func i2c0_c9800d_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func i2c1_c9800d_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func i2c2_c9800d_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func i2c3_c9800d_func_normal[] = {FUNC2, FUNC2, -INVALID,};
enum lowlayer_func spi0_c9800d_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func spi0_cs_c9800d_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func uart0_c9800d_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func uart1_c9800d_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func uart2_c9800d_func_normal[] = {FUNC2, FUNC2, -INVALID,};
enum lowlayer_func uart4_c9800d_func_normal[] = {FUNC2, FUNC2, FUNC2, FUNC2, -INVALID,};
enum lowlayer_func kpc_c9800d_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func sd_c9800d_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func nand_c9800d_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func sdio_c9800d_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func btpm_c9800d_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func btpwr_c9800d_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func gps_boardcom_c9800d_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func ts_c9800d_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func lcd_c9800d_func_normal[] = {FUNC0, FUNC2, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func pwm_c9800d_func_normal[] = {FUNC0, FUNC1, -INVALID,};
enum lowlayer_func hdmi_c9800d_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func wifi_c9800d_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_dvp_c9800d_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_i2c_c9800d_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_reset_c9800d_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_c9800d_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_flash_c9800d_func_normal[] = {FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func charger_c9800d_func_normal[] = {FUNC0, FUNC1, -INVALID,};
enum lowlayer_func gsensor_c9800d_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func audio_spk_c9800d_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func audio_eph_c9800d_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func modem_c9800d_func_normal[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func vbusdrv_c9800d_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func gps_spi_c9800d_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func modem_switch_c9800d_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func mcamdvdd_c9800d_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func usb_switch_c9800d_func_normal[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC0, FUNC1, FUNC0, -INVALID,};
enum lowlayer_func modem_qsc_c9800d_func_normal[] = {FUNC0, -INVALID,};
enum lowlayer_func sensor_gyr_c9800d_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func headset_uart_c9800d_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func mhl_c9800d_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func sensor_com_c9800d_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func sensor_pro_c9800d_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func therm_c9800d_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func es305_c9800d_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func pmu_c9800d_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func battery_c9800d_func_normal[] = {FUNC0, -INVALID,};
enum lowlayer_func camera_c9800d_func_normal[] = {FUNC0, -INVALID,};

/******************lowpower func****************/

enum lowlayer_func i2c0_c9800d_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func i2c1_c9800d_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func i2c2_c9800d_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func i2c3_c9800d_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func spi0_c9800d_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func spi0_cs_c9800d_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart0_c9800d_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart1_c9800d_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart2_c9800d_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart4_c9800d_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func kpc_c9800d_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func sd_c9800d_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func nand_c9800d_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func sdio_c9800d_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func btpm_c9800d_func_lowpower[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func btpwr_c9800d_func_lowpower[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func gps_boardcom_c9800d_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func ts_c9800d_func_lowpower[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func lcd_c9800d_func_lowpower[] = {FUNC0, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func pwm_c9800d_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func hdmi_c9800d_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func wifi_c9800d_func_lowpower[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_dvp_c9800d_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func isp_i2c_c9800d_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func isp_reset_c9800d_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func isp_c9800d_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC0, -INVALID,};
enum lowlayer_func isp_flash_c9800d_func_lowpower[] = {FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func charger_c9800d_func_lowpower[] = {FUNC0, FUNC1, -INVALID,};
enum lowlayer_func gsensor_c9800d_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func audio_spk_c9800d_func_lowpower[] = {FUNC1, -INVALID,};
enum lowlayer_func audio_eph_c9800d_func_lowpower[] = {FUNC1, -INVALID,};
enum lowlayer_func modem_c9800d_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func vbusdrv_c9800d_func_lowpower[] = {FUNC0, -INVALID,};
enum lowlayer_func gps_spi_c9800d_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func modem_switch_c9800d_func_lowpower[] = {FUNC1, -INVALID,};
enum lowlayer_func mcamdvdd_c9800d_func_lowpower[] = {FUNC1, -INVALID,};
enum lowlayer_func usb_switch_c9800d_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC0, -INVALID,};
enum lowlayer_func modem_qsc_c9800d_func_lowpower[] = {FUNC0, -INVALID,};
enum lowlayer_func sensor_gyr_c9800d_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func headset_uart_c9800d_func_lowpower[] = {FUNC1, -INVALID,};
enum lowlayer_func mhl_c9800d_func_lowpower[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func sensor_com_c9800d_func_lowpower[] = {FUNC1, -INVALID,};
enum lowlayer_func sensor_pro_c9800d_func_lowpower[] = {FUNC1, -INVALID,};
enum lowlayer_func therm_c9800d_func_lowpower[] = {FUNC1, -INVALID,};
enum lowlayer_func es305_c9800d_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func pmu_c9800d_func_lowpower[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func battery_c9800d_func_lowpower[] = {FUNC0, -INVALID,};
enum lowlayer_func camera_c9800d_func_lowpower[] = {FUNC0, -INVALID,};

/******************normal pullud****************/

enum pull_updown i2c0_c9800d_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c1_c9800d_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c2_c9800d_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c3_c9800d_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown spi0_c9800d_pullud_normal[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown spi0_cs_c9800d_pullud_normal[] = {PULLDOWN, PULLDOWN, NOPULL, NOPULL, -INVALID,};
enum pull_updown uart0_c9800d_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown uart1_c9800d_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown uart2_c9800d_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown uart4_c9800d_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown kpc_c9800d_pullud_normal[] = {PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, -INVALID,};
enum pull_updown sd_c9800d_pullud_normal[] = {NOPULL, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, -INVALID,};
enum pull_updown nand_c9800d_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown sdio_c9800d_pullud_normal[] = {NOPULL, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, -INVALID,};
enum pull_updown btpm_c9800d_pullud_normal[] = {PULLUP, NOPULL, -INVALID,};
enum pull_updown btpwr_c9800d_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown gps_boardcom_c9800d_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown ts_c9800d_pullud_normal[] = {NOPULL, PULLUP, -INVALID,};
enum pull_updown lcd_c9800d_pullud_normal[] = {NOPULL, PULLDOWN, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown pwm_c9800d_pullud_normal[] = {NOPULL, PULLDOWN, -INVALID,};
enum pull_updown hdmi_c9800d_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown wifi_c9800d_pullud_normal[] = {NOPULL, PULLDOWN, -INVALID,};
enum pull_updown isp_dvp_c9800d_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_i2c_c9800d_pullud_normal[] = {PULLUP, PULLUP, -INVALID,};
enum pull_updown isp_reset_c9800d_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_c9800d_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_flash_c9800d_pullud_normal[] = {NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown charger_c9800d_pullud_normal[] = {PULLUP, NOPULL, -INVALID,};
enum pull_updown gsensor_c9800d_pullud_normal[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown audio_spk_c9800d_pullud_normal[] = {NOPULL, -INVALID,};
enum pull_updown audio_eph_c9800d_pullud_normal[] = {NOPULL, -INVALID,};
enum pull_updown modem_c9800d_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown vbusdrv_c9800d_pullud_normal[] = {NOPULL, -INVALID,};
enum pull_updown gps_spi_c9800d_pullud_normal[] = {NOPULL, NOPULL, NOPULL, PULLDOWN, -INVALID,};
enum pull_updown modem_switch_c9800d_pullud_normal[] = {NOPULL, -INVALID,};
enum pull_updown mcamdvdd_c9800d_pullud_normal[] = {NOPULL, -INVALID,};
enum pull_updown usb_switch_c9800d_pullud_normal[] = {NOPULL, NOPULL, PULLUP, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown modem_qsc_c9800d_pullud_normal[] = {NOPULL, -INVALID,};
enum pull_updown sensor_gyr_c9800d_pullud_normal[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown headset_uart_c9800d_pullud_normal[] = {PULLDOWN, -INVALID,};
enum pull_updown mhl_c9800d_pullud_normal[] = {PULLUP, NOPULL, -INVALID,};
enum pull_updown sensor_com_c9800d_pullud_normal[] = {PULLDOWN, -INVALID,};
enum pull_updown sensor_pro_c9800d_pullud_normal[] = {PULLUP, -INVALID,};
enum pull_updown therm_c9800d_pullud_normal[] = {NOPULL, -INVALID,};
enum pull_updown es305_c9800d_pullud_normal[] = {NOPULL, PULLDOWN, -INVALID,};
enum pull_updown pmu_c9800d_pullud_normal[] = {NOPULL, PULLUP, -INVALID,};
enum pull_updown battery_c9800d_pullud_normal[] = {PULLUP, -INVALID,};
enum pull_updown camera_c9800d_pullud_normal[] = {NOPULL, -INVALID,};

/******************lowpower pullud****************/

enum pull_updown i2c0_c9800d_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c1_c9800d_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c2_c9800d_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c3_c9800d_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown spi0_c9800d_pullud_lowpower[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown spi0_cs_c9800d_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown uart0_c9800d_pullud_lowpower[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown uart1_c9800d_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, PULLDOWN, -INVALID,};
enum pull_updown uart2_c9800d_pullud_lowpower[] = {NOPULL, PULLDOWN, -INVALID,};
enum pull_updown uart4_c9800d_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown kpc_c9800d_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLUP, PULLUP, NOPULL, -INVALID,};
enum pull_updown sd_c9800d_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown nand_c9800d_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, NOPULL, NOPULL, NOPULL, NOPULL, PULLDOWN, NOPULL, NOPULL, NOPULL, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown sdio_c9800d_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown btpm_c9800d_pullud_lowpower[] = {PULLUP, NOPULL, -INVALID,};
enum pull_updown btpwr_c9800d_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown gps_boardcom_c9800d_pullud_lowpower[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown ts_c9800d_pullud_lowpower[] = {NOPULL, PULLUP, -INVALID,};
enum pull_updown lcd_c9800d_pullud_lowpower[] = {NOPULL, PULLDOWN, NOPULL, PULLDOWN, NOPULL, -INVALID,};
enum pull_updown pwm_c9800d_pullud_lowpower[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown hdmi_c9800d_pullud_lowpower[] = {NOPULL, NOPULL, PULLDOWN, NOPULL, -INVALID,};
enum pull_updown wifi_c9800d_pullud_lowpower[] = {NOPULL, PULLUP, -INVALID,};
enum pull_updown isp_dvp_c9800d_pullud_lowpower[] = {PULLDOWN, NOPULL, PULLDOWN, NOPULL, PULLDOWN, PULLDOWN, PULLDOWN, NOPULL, -INVALID,};
enum pull_updown isp_i2c_c9800d_pullud_lowpower[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown isp_reset_c9800d_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_c9800d_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_flash_c9800d_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown charger_c9800d_pullud_lowpower[] = {PULLUP, NOPULL, -INVALID,};
enum pull_updown gsensor_c9800d_pullud_lowpower[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown audio_spk_c9800d_pullud_lowpower[] = {PULLDOWN, -INVALID,};
enum pull_updown audio_eph_c9800d_pullud_lowpower[] = {PULLDOWN, -INVALID,};
enum pull_updown modem_c9800d_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, PULLDOWN, -INVALID,};
enum pull_updown vbusdrv_c9800d_pullud_lowpower[] = {PULLDOWN, -INVALID,};
enum pull_updown gps_spi_c9800d_pullud_lowpower[] = {PULLDOWN, PULLDOWN, NOPULL, NOPULL, -INVALID,};
enum pull_updown modem_switch_c9800d_pullud_lowpower[] = {NOPULL, -INVALID,};
enum pull_updown mcamdvdd_c9800d_pullud_lowpower[] = {NOPULL, -INVALID,};
enum pull_updown usb_switch_c9800d_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, PULLDOWN, NOPULL, -INVALID,};
enum pull_updown modem_qsc_c9800d_pullud_lowpower[] = {NOPULL, -INVALID,};
enum pull_updown sensor_gyr_c9800d_pullud_lowpower[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown headset_uart_c9800d_pullud_lowpower[] = {PULLDOWN, -INVALID,};
enum pull_updown mhl_c9800d_pullud_lowpower[] = {PULLUP, NOPULL, -INVALID,};
enum pull_updown sensor_com_c9800d_pullud_lowpower[] = {PULLDOWN, -INVALID,};
enum pull_updown sensor_pro_c9800d_pullud_lowpower[] = {PULLUP, -INVALID,};
enum pull_updown therm_c9800d_pullud_lowpower[] = {NOPULL, -INVALID,};
enum pull_updown es305_c9800d_pullud_lowpower[] = {NOPULL, PULLDOWN, -INVALID,};
enum pull_updown pmu_c9800d_pullud_lowpower[] = {NOPULL, PULLUP, -INVALID,};
enum pull_updown battery_c9800d_pullud_lowpower[] = {PULLUP, -INVALID,};
enum pull_updown camera_c9800d_pullud_lowpower[] = {NOPULL, -INVALID,};

/******************normal drv****************/

enum drive_strength i2c0_c9800d_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c1_c9800d_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c2_c9800d_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c3_c9800d_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength spi0_c9800d_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength spi0_cs_c9800d_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength uart0_c9800d_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength uart1_c9800d_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength uart2_c9800d_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength uart4_c9800d_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength kpc_c9800d_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength sd_c9800d_drv_normal[] = {LEVEL2, LEVEL3, LEVEL3, LEVEL3, LEVEL3, LEVEL3, -INVALID,};
enum drive_strength nand_c9800d_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, RESERVE, RESERVE, RESERVE, RESERVE, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength sdio_c9800d_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength btpm_c9800d_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength btpwr_c9800d_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength gps_boardcom_c9800d_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength ts_c9800d_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength lcd_c9800d_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength pwm_c9800d_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength hdmi_c9800d_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength wifi_c9800d_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_dvp_c9800d_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_i2c_c9800d_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_reset_c9800d_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_c9800d_drv_normal[] = {LEVEL0, LEVEL0, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_flash_c9800d_drv_normal[] = {RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength charger_c9800d_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength gsensor_c9800d_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength audio_spk_c9800d_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength audio_eph_c9800d_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength modem_c9800d_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength vbusdrv_c9800d_drv_normal[] = {LEVEL2, -INVALID,};
enum drive_strength gps_spi_c9800d_drv_normal[] = {LEVEL2, RESERVE, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength modem_switch_c9800d_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength mcamdvdd_c9800d_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength usb_switch_c9800d_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength modem_qsc_c9800d_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength sensor_gyr_c9800d_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength headset_uart_c9800d_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength mhl_c9800d_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength sensor_com_c9800d_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength sensor_pro_c9800d_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength therm_c9800d_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength es305_c9800d_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength pmu_c9800d_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength battery_c9800d_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength camera_c9800d_drv_normal[] = {RESERVE, -INVALID,};

/******************lowpower drv****************/

enum drive_strength i2c0_c9800d_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c1_c9800d_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c2_c9800d_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c3_c9800d_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength spi0_c9800d_drv_lowpower[] = {LEVEL0, LEVEL0, -INVALID,};
enum drive_strength spi0_cs_c9800d_drv_lowpower[] = {LEVEL0, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength uart0_c9800d_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength uart1_c9800d_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength uart2_c9800d_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength uart4_c9800d_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength kpc_c9800d_drv_lowpower[] = {LEVEL0, LEVEL0, LEVEL0, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength sd_c9800d_drv_lowpower[] = {LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, -INVALID,};
enum drive_strength nand_c9800d_drv_lowpower[] = {LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, RESERVE, RESERVE, LEVEL2, LEVEL2, LEVEL2, LEVEL0, LEVEL2, LEVEL2, LEVEL2, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, -INVALID,};
enum drive_strength sdio_c9800d_drv_lowpower[] = {LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, -INVALID,};
enum drive_strength btpm_c9800d_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength btpwr_c9800d_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength gps_boardcom_c9800d_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength ts_c9800d_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength lcd_c9800d_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, LEVEL0, RESERVE, -INVALID,};
enum drive_strength pwm_c9800d_drv_lowpower[] = {LEVEL0, LEVEL0, -INVALID,};
enum drive_strength hdmi_c9800d_drv_lowpower[] = {RESERVE, RESERVE, LEVEL0, RESERVE, -INVALID,};
enum drive_strength wifi_c9800d_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_dvp_c9800d_drv_lowpower[] = {LEVEL0, RESERVE, LEVEL0, RESERVE, LEVEL0, LEVEL0, LEVEL0, RESERVE, -INVALID,};
enum drive_strength isp_i2c_c9800d_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_reset_c9800d_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_c9800d_drv_lowpower[] = {LEVEL0, LEVEL0, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_flash_c9800d_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength charger_c9800d_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength gsensor_c9800d_drv_lowpower[] = {LEVEL0, RESERVE, -INVALID,};
enum drive_strength audio_spk_c9800d_drv_lowpower[] = {LEVEL0, -INVALID,};
enum drive_strength audio_eph_c9800d_drv_lowpower[] = {LEVEL0, -INVALID,};
enum drive_strength modem_c9800d_drv_lowpower[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL0, -INVALID,};
enum drive_strength vbusdrv_c9800d_drv_lowpower[] = {LEVEL0, -INVALID,};
enum drive_strength gps_spi_c9800d_drv_lowpower[] = {LEVEL2, RESERVE, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength modem_switch_c9800d_drv_lowpower[] = {RESERVE, -INVALID,};
enum drive_strength mcamdvdd_c9800d_drv_lowpower[] = {RESERVE, -INVALID,};
enum drive_strength usb_switch_c9800d_drv_lowpower[] = {LEVEL2, LEVEL2, LEVEL2, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength modem_qsc_c9800d_drv_lowpower[] = {RESERVE, -INVALID,};
enum drive_strength sensor_gyr_c9800d_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength headset_uart_c9800d_drv_lowpower[] = {RESERVE, -INVALID,};
enum drive_strength mhl_c9800d_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength sensor_com_c9800d_drv_lowpower[] = {RESERVE, -INVALID,};
enum drive_strength sensor_pro_c9800d_drv_lowpower[] = {RESERVE, -INVALID,};
enum drive_strength therm_c9800d_drv_lowpower[] = {RESERVE, -INVALID,};
enum drive_strength es305_c9800d_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength pmu_c9800d_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength battery_c9800d_drv_lowpower[] = {RESERVE, -INVALID,};
enum drive_strength camera_c9800d_drv_lowpower[] = {RESERVE, -INVALID,};

/******************config****************/

struct block_config i2c0_c9800d_config[] = {
	[NORMAL] = {i2c0_c9800d_func_normal, i2c0_c9800d_pullud_normal, i2c0_c9800d_drv_normal},
	[LOWPOWER] = {i2c0_c9800d_func_lowpower, i2c0_c9800d_pullud_lowpower, i2c0_c9800d_drv_lowpower},
};
struct block_config i2c1_c9800d_config[] = {
	[NORMAL] = {i2c1_c9800d_func_normal, i2c1_c9800d_pullud_normal, i2c1_c9800d_drv_normal},
	[LOWPOWER] = {i2c1_c9800d_func_lowpower, i2c1_c9800d_pullud_lowpower, i2c1_c9800d_drv_lowpower},
};
struct block_config i2c2_c9800d_config[] = {
	[NORMAL] = {i2c2_c9800d_func_normal, i2c2_c9800d_pullud_normal, i2c2_c9800d_drv_normal},
	[LOWPOWER] = {i2c2_c9800d_func_lowpower, i2c2_c9800d_pullud_lowpower, i2c2_c9800d_drv_lowpower},
};
struct block_config i2c3_c9800d_config[] = {
	[NORMAL] = {i2c3_c9800d_func_normal, i2c3_c9800d_pullud_normal, i2c3_c9800d_drv_normal},
	[LOWPOWER] = {i2c3_c9800d_func_lowpower, i2c3_c9800d_pullud_lowpower, i2c3_c9800d_drv_lowpower},
};
struct block_config spi0_c9800d_config[] = {
	[NORMAL] = {spi0_c9800d_func_normal, spi0_c9800d_pullud_normal, spi0_c9800d_drv_normal},
	[LOWPOWER] = {spi0_c9800d_func_lowpower, spi0_c9800d_pullud_lowpower, spi0_c9800d_drv_lowpower},
};
struct block_config spi0_cs_c9800d_config[] = {
	[NORMAL] = {spi0_cs_c9800d_func_normal, spi0_cs_c9800d_pullud_normal, spi0_cs_c9800d_drv_normal},
	[LOWPOWER] = {spi0_cs_c9800d_func_lowpower, spi0_cs_c9800d_pullud_lowpower, spi0_cs_c9800d_drv_lowpower},
};
struct block_config uart0_c9800d_config[] = {
	[NORMAL] = {uart0_c9800d_func_normal, uart0_c9800d_pullud_normal, uart0_c9800d_drv_normal},
	[LOWPOWER] = {uart0_c9800d_func_lowpower, uart0_c9800d_pullud_lowpower, uart0_c9800d_drv_lowpower},
};
struct block_config uart1_c9800d_config[] = {
	[NORMAL] = {uart1_c9800d_func_normal, uart1_c9800d_pullud_normal, uart1_c9800d_drv_normal},
	[LOWPOWER] = {uart1_c9800d_func_lowpower, uart1_c9800d_pullud_lowpower, uart1_c9800d_drv_lowpower},
};
struct block_config uart2_c9800d_config[] = {
	[NORMAL] = {uart2_c9800d_func_normal, uart2_c9800d_pullud_normal, uart2_c9800d_drv_normal},
	[LOWPOWER] = {uart2_c9800d_func_lowpower, uart2_c9800d_pullud_lowpower, uart2_c9800d_drv_lowpower},
};
struct block_config uart4_c9800d_config[] = {
	[NORMAL] = {uart4_c9800d_func_normal, uart4_c9800d_pullud_normal, uart4_c9800d_drv_normal},
	[LOWPOWER] = {uart4_c9800d_func_lowpower, uart4_c9800d_pullud_lowpower, uart4_c9800d_drv_lowpower},
};
struct block_config kpc_c9800d_config[] = {
	[NORMAL] = {kpc_c9800d_func_normal, kpc_c9800d_pullud_normal, kpc_c9800d_drv_normal},
	[LOWPOWER] = {kpc_c9800d_func_lowpower, kpc_c9800d_pullud_lowpower, kpc_c9800d_drv_lowpower},
};
struct block_config sd_c9800d_config[] = {
	[NORMAL] = {sd_c9800d_func_normal, sd_c9800d_pullud_normal, sd_c9800d_drv_normal},
	[LOWPOWER] = {sd_c9800d_func_lowpower, sd_c9800d_pullud_lowpower, sd_c9800d_drv_lowpower},
};
struct block_config nand_c9800d_config[] = {
	[NORMAL] = {nand_c9800d_func_normal, nand_c9800d_pullud_normal, nand_c9800d_drv_normal},
	[LOWPOWER] = {nand_c9800d_func_lowpower, nand_c9800d_pullud_lowpower, nand_c9800d_drv_lowpower},
};
struct block_config sdio_c9800d_config[] = {
	[NORMAL] = {sdio_c9800d_func_normal, sdio_c9800d_pullud_normal, sdio_c9800d_drv_normal},
	[LOWPOWER] = {sdio_c9800d_func_lowpower, sdio_c9800d_pullud_lowpower, sdio_c9800d_drv_lowpower},
};
struct block_config btpm_c9800d_config[] = {
	[NORMAL] = {btpm_c9800d_func_normal, btpm_c9800d_pullud_normal, btpm_c9800d_drv_normal},
	[LOWPOWER] = {btpm_c9800d_func_lowpower, btpm_c9800d_pullud_lowpower, btpm_c9800d_drv_lowpower},
};
struct block_config btpwr_c9800d_config[] = {
	[NORMAL] = {btpwr_c9800d_func_normal, btpwr_c9800d_pullud_normal, btpwr_c9800d_drv_normal},
	[LOWPOWER] = {btpwr_c9800d_func_lowpower, btpwr_c9800d_pullud_lowpower, btpwr_c9800d_drv_lowpower},
};
struct block_config gps_boardcom_c9800d_config[] = {
	[NORMAL] = {gps_boardcom_c9800d_func_normal, gps_boardcom_c9800d_pullud_normal, gps_boardcom_c9800d_drv_normal},
	[LOWPOWER] = {gps_boardcom_c9800d_func_lowpower, gps_boardcom_c9800d_pullud_lowpower, gps_boardcom_c9800d_drv_lowpower},
};
struct block_config ts_c9800d_config[] = {
	[NORMAL] = {ts_c9800d_func_normal, ts_c9800d_pullud_normal, ts_c9800d_drv_normal},
	[LOWPOWER] = {ts_c9800d_func_lowpower, ts_c9800d_pullud_lowpower, ts_c9800d_drv_lowpower},
};
struct block_config lcd_c9800d_config[] = {
	[NORMAL] = {lcd_c9800d_func_normal, lcd_c9800d_pullud_normal, lcd_c9800d_drv_normal},
	[LOWPOWER] = {lcd_c9800d_func_lowpower, lcd_c9800d_pullud_lowpower, lcd_c9800d_drv_lowpower},
};
struct block_config pwm_c9800d_config[] = {
	[NORMAL] = {pwm_c9800d_func_normal, pwm_c9800d_pullud_normal, pwm_c9800d_drv_normal},
	[LOWPOWER] = {pwm_c9800d_func_lowpower, pwm_c9800d_pullud_lowpower, pwm_c9800d_drv_lowpower},
};
struct block_config hdmi_c9800d_config[] = {
	[NORMAL] = {hdmi_c9800d_func_normal, hdmi_c9800d_pullud_normal, hdmi_c9800d_drv_normal},
	[LOWPOWER] = {hdmi_c9800d_func_lowpower, hdmi_c9800d_pullud_lowpower, hdmi_c9800d_drv_lowpower},
};
struct block_config wifi_c9800d_config[] = {
	[NORMAL] = {wifi_c9800d_func_normal, wifi_c9800d_pullud_normal, wifi_c9800d_drv_normal},
	[LOWPOWER] = {wifi_c9800d_func_lowpower, wifi_c9800d_pullud_lowpower, wifi_c9800d_drv_lowpower},
};
struct block_config isp_dvp_c9800d_config[] = {
	[NORMAL] = {isp_dvp_c9800d_func_normal, isp_dvp_c9800d_pullud_normal, isp_dvp_c9800d_drv_normal},
	[LOWPOWER] = {isp_dvp_c9800d_func_lowpower, isp_dvp_c9800d_pullud_lowpower, isp_dvp_c9800d_drv_lowpower},
};
struct block_config isp_i2c_c9800d_config[] = {
	[NORMAL] = {isp_i2c_c9800d_func_normal, isp_i2c_c9800d_pullud_normal, isp_i2c_c9800d_drv_normal},
	[LOWPOWER] = {isp_i2c_c9800d_func_lowpower, isp_i2c_c9800d_pullud_lowpower, isp_i2c_c9800d_drv_lowpower},
};
struct block_config isp_reset_c9800d_config[] = {
	[NORMAL] = {isp_reset_c9800d_func_normal, isp_reset_c9800d_pullud_normal, isp_reset_c9800d_drv_normal},
	[LOWPOWER] = {isp_reset_c9800d_func_lowpower, isp_reset_c9800d_pullud_lowpower, isp_reset_c9800d_drv_lowpower},
};
struct block_config isp_c9800d_config[] = {
	[NORMAL] = {isp_c9800d_func_normal, isp_c9800d_pullud_normal, isp_c9800d_drv_normal},
	[LOWPOWER] = {isp_c9800d_func_lowpower, isp_c9800d_pullud_lowpower, isp_c9800d_drv_lowpower},
};
struct block_config isp_flash_c9800d_config[] = {
	[NORMAL] = {isp_flash_c9800d_func_normal, isp_flash_c9800d_pullud_normal, isp_flash_c9800d_drv_normal},
	[LOWPOWER] = {isp_flash_c9800d_func_lowpower, isp_flash_c9800d_pullud_lowpower, isp_flash_c9800d_drv_lowpower},
};
struct block_config charger_c9800d_config[] = {
	[NORMAL] = {charger_c9800d_func_normal, charger_c9800d_pullud_normal, charger_c9800d_drv_normal},
	[LOWPOWER] = {charger_c9800d_func_lowpower, charger_c9800d_pullud_lowpower, charger_c9800d_drv_lowpower},
};
struct block_config gsensor_c9800d_config[] = {
	[NORMAL] = {gsensor_c9800d_func_normal, gsensor_c9800d_pullud_normal, gsensor_c9800d_drv_normal},
	[LOWPOWER] = {gsensor_c9800d_func_lowpower, gsensor_c9800d_pullud_lowpower, gsensor_c9800d_drv_lowpower},
};
struct block_config audio_spk_c9800d_config[] = {
	[NORMAL] = {audio_spk_c9800d_func_normal, audio_spk_c9800d_pullud_normal, audio_spk_c9800d_drv_normal},
	[LOWPOWER] = {audio_spk_c9800d_func_lowpower, audio_spk_c9800d_pullud_lowpower, audio_spk_c9800d_drv_lowpower},
};
struct block_config audio_eph_c9800d_config[] = {
	[NORMAL] = {audio_eph_c9800d_func_normal, audio_eph_c9800d_pullud_normal, audio_eph_c9800d_drv_normal},
	[LOWPOWER] = {audio_eph_c9800d_func_lowpower, audio_eph_c9800d_pullud_lowpower, audio_eph_c9800d_drv_lowpower},
};
struct block_config modem_c9800d_config[] = {
	[NORMAL] = {modem_c9800d_func_normal, modem_c9800d_pullud_normal, modem_c9800d_drv_normal},
	[LOWPOWER] = {modem_c9800d_func_lowpower, modem_c9800d_pullud_lowpower, modem_c9800d_drv_lowpower},
};
struct block_config vbusdrv_c9800d_config[] = {
	[NORMAL] = {vbusdrv_c9800d_func_normal, vbusdrv_c9800d_pullud_normal, vbusdrv_c9800d_drv_normal},
	[LOWPOWER] = {vbusdrv_c9800d_func_lowpower, vbusdrv_c9800d_pullud_lowpower, vbusdrv_c9800d_drv_lowpower},
};
struct block_config gps_spi_c9800d_config[] = {
	[NORMAL] = {gps_spi_c9800d_func_normal, gps_spi_c9800d_pullud_normal, gps_spi_c9800d_drv_normal},
	[LOWPOWER] = {gps_spi_c9800d_func_lowpower, gps_spi_c9800d_pullud_lowpower, gps_spi_c9800d_drv_lowpower},
};
struct block_config modem_switch_c9800d_config[] = {
	[NORMAL] = {modem_switch_c9800d_func_normal, modem_switch_c9800d_pullud_normal, modem_switch_c9800d_drv_normal},
	[LOWPOWER] = {modem_switch_c9800d_func_lowpower, modem_switch_c9800d_pullud_lowpower, modem_switch_c9800d_drv_lowpower},
};
struct block_config mcamdvdd_c9800d_config[] = {
	[NORMAL] = {mcamdvdd_c9800d_func_normal, mcamdvdd_c9800d_pullud_normal, mcamdvdd_c9800d_drv_normal},
	[LOWPOWER] = {mcamdvdd_c9800d_func_lowpower, mcamdvdd_c9800d_pullud_lowpower, mcamdvdd_c9800d_drv_lowpower},
};
struct block_config usb_switch_c9800d_config[] = {
	[NORMAL] = {usb_switch_c9800d_func_normal, usb_switch_c9800d_pullud_normal, usb_switch_c9800d_drv_normal},
	[LOWPOWER] = {usb_switch_c9800d_func_lowpower, usb_switch_c9800d_pullud_lowpower, usb_switch_c9800d_drv_lowpower},
};
struct block_config modem_qsc_c9800d_config[] = {
	[NORMAL] = {modem_qsc_c9800d_func_normal, modem_qsc_c9800d_pullud_normal, modem_qsc_c9800d_drv_normal},
	[LOWPOWER] = {modem_qsc_c9800d_func_lowpower, modem_qsc_c9800d_pullud_lowpower, modem_qsc_c9800d_drv_lowpower},
};
struct block_config sensor_gyr_c9800d_config[] = {
	[NORMAL] = {sensor_gyr_c9800d_func_normal, sensor_gyr_c9800d_pullud_normal, sensor_gyr_c9800d_drv_normal},
	[LOWPOWER] = {sensor_gyr_c9800d_func_lowpower, sensor_gyr_c9800d_pullud_lowpower, sensor_gyr_c9800d_drv_lowpower},
};
struct block_config headset_uart_c9800d_config[] = {
	[NORMAL] = {headset_uart_c9800d_func_normal, headset_uart_c9800d_pullud_normal, headset_uart_c9800d_drv_normal},
	[LOWPOWER] = {headset_uart_c9800d_func_lowpower, headset_uart_c9800d_pullud_lowpower, headset_uart_c9800d_drv_lowpower},
};
struct block_config mhl_c9800d_config[] = {
	[NORMAL] = {mhl_c9800d_func_normal, mhl_c9800d_pullud_normal, mhl_c9800d_drv_normal},
	[LOWPOWER] = {mhl_c9800d_func_lowpower, mhl_c9800d_pullud_lowpower, mhl_c9800d_drv_lowpower},
};
struct block_config sensor_com_c9800d_config[] = {
	[NORMAL] = {sensor_com_c9800d_func_normal, sensor_com_c9800d_pullud_normal, sensor_com_c9800d_drv_normal},
	[LOWPOWER] = {sensor_com_c9800d_func_lowpower, sensor_com_c9800d_pullud_lowpower, sensor_com_c9800d_drv_lowpower},
};
struct block_config sensor_pro_c9800d_config[] = {
	[NORMAL] = {sensor_pro_c9800d_func_normal, sensor_pro_c9800d_pullud_normal, sensor_pro_c9800d_drv_normal},
	[LOWPOWER] = {sensor_pro_c9800d_func_lowpower, sensor_pro_c9800d_pullud_lowpower, sensor_pro_c9800d_drv_lowpower},
};
struct block_config therm_c9800d_config[] = {
	[NORMAL] = {therm_c9800d_func_normal, therm_c9800d_pullud_normal, therm_c9800d_drv_normal},
	[LOWPOWER] = {therm_c9800d_func_lowpower, therm_c9800d_pullud_lowpower, therm_c9800d_drv_lowpower},
};
struct block_config es305_c9800d_config[] = {
	[NORMAL] = {es305_c9800d_func_normal, es305_c9800d_pullud_normal, es305_c9800d_drv_normal},
	[LOWPOWER] = {es305_c9800d_func_lowpower, es305_c9800d_pullud_lowpower, es305_c9800d_drv_lowpower},
};
struct block_config pmu_c9800d_config[] = {
	[NORMAL] = {pmu_c9800d_func_normal, pmu_c9800d_pullud_normal, pmu_c9800d_drv_normal},
	[LOWPOWER] = {pmu_c9800d_func_lowpower, pmu_c9800d_pullud_lowpower, pmu_c9800d_drv_lowpower},
};
struct block_config battery_c9800d_config[] = {
	[NORMAL] = {battery_c9800d_func_normal, battery_c9800d_pullud_normal, battery_c9800d_drv_normal},
	[LOWPOWER] = {battery_c9800d_func_lowpower, battery_c9800d_pullud_lowpower, battery_c9800d_drv_lowpower},
};
struct block_config camera_c9800d_config[] = {
	[NORMAL] = {camera_c9800d_func_normal, camera_c9800d_pullud_normal, camera_c9800d_drv_normal},
	[LOWPOWER] = {camera_c9800d_func_lowpower, camera_c9800d_pullud_lowpower, camera_c9800d_drv_lowpower},
};


/******************pins ****************/

struct  iomux_pin *audio_es305_c9800d_pins[] = {
&gpio_127_cs, &gpio_128_cs, NULL,
};
struct  iomux_pin *spi1_c9800d_pins[] = {
&gpio_113_cs, &gpio_114_cs, &gpio_115_cs, &gpio_116_cs, NULL,
};
struct  iomux_pin *uart3_c9800d_pins[] = {
&gpio_154_cs, &gpio_155_cs, &gpio_160_cs, &gpio_161_cs, NULL,
};
struct  iomux_pin *emmc_c9800d_pins[] = {
&gpio_028_cs, &gpio_029_cs, &gpio_030_cs, &gpio_031_cs, &gpio_032_cs, &gpio_033_cs, &gpio_034_cs, &gpio_035_cs, &gpio_036_cs, &gpio_037_cs, NULL,
};

/******************IOMUX_BLOCK****************/

IOMUX_BLOCK(block_audio_es305_c9800d, "block_audio_es305_c9800d", NORMAL, audio_es305_c9800d_pins)
IOMUX_BLOCK(block_spi1_c9800d, "block_spi1_c9800d", NORMAL, spi1_c9800d_pins)
IOMUX_BLOCK(block_uart3_c9800d, "block_uart3_c9800d", NORMAL, uart3_c9800d_pins)
IOMUX_BLOCK(block_emmc_c9800d, "block_emmc_c9800d", NORMAL, emmc_c9800d_pins)

/******************normal func ****************/

enum lowlayer_func audio_es305_c9800d_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func spi1_c9800d_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func uart3_c9800d_func_normal[] = {FUNC2, FUNC2, FUNC2, FUNC2, -INVALID,};
enum lowlayer_func emmc_c9800d_func_normal[] = {FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, -INVALID,};

/******************lowpower func****************/

enum lowlayer_func audio_es305_c9800d_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func spi1_c9800d_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart3_c9800d_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func emmc_c9800d_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC0, FUNC0, -INVALID,};

/******************normal pullud****************/

enum pull_updown audio_es305_c9800d_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown spi1_c9800d_pullud_normal[] = {PULLUP, NOPULL, NOPULL, PULLDOWN, -INVALID,};
enum pull_updown uart3_c9800d_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown emmc_c9800d_pullud_normal[] = {PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, NOPULL, -INVALID,};

/******************lowpower pullud****************/

enum pull_updown audio_es305_c9800d_pullud_lowpower[] = {NOPULL, PULLDOWN, -INVALID,};
enum pull_updown spi1_c9800d_pullud_lowpower[] = {NOPULL, NOPULL, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown uart3_c9800d_pullud_lowpower[] = {PULLDOWN, PULLDOWN, NOPULL, NOPULL, -INVALID,};
enum pull_updown emmc_c9800d_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};

/******************normal drv****************/

enum drive_strength audio_es305_c9800d_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength spi1_c9800d_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength uart3_c9800d_drv_normal[] = {LEVEL2, RESERVE, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength emmc_c9800d_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};

/******************lowpower drv****************/

enum drive_strength audio_es305_c9800d_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength spi1_c9800d_drv_lowpower[] = {LEVEL2, LEVEL2, LEVEL0, LEVEL0, -INVALID,};
enum drive_strength uart3_c9800d_drv_lowpower[] = {LEVEL2, RESERVE, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength emmc_c9800d_drv_lowpower[] = {LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, -INVALID,};

/******************config****************/

struct block_config audio_es305_c9800d_config[] = {
	[NORMAL] = {audio_es305_c9800d_func_normal, audio_es305_c9800d_pullud_normal, audio_es305_c9800d_drv_normal},
	[LOWPOWER] = {audio_es305_c9800d_func_lowpower, audio_es305_c9800d_pullud_lowpower, audio_es305_c9800d_drv_lowpower},
};
struct block_config spi1_c9800d_config[] = {
	[NORMAL] = {spi1_c9800d_func_normal, spi1_c9800d_pullud_normal, spi1_c9800d_drv_normal},
	[LOWPOWER] = {spi1_c9800d_func_lowpower, spi1_c9800d_pullud_lowpower, spi1_c9800d_drv_lowpower},
};
struct block_config uart3_c9800d_config[] = {
	[NORMAL] = {uart3_c9800d_func_normal, uart3_c9800d_pullud_normal, uart3_c9800d_drv_normal},
	[LOWPOWER] = {uart3_c9800d_func_lowpower, uart3_c9800d_pullud_lowpower, uart3_c9800d_drv_lowpower},
};
struct block_config emmc_c9800d_config[] = {
	[NORMAL] = {emmc_c9800d_func_normal, emmc_c9800d_pullud_normal, emmc_c9800d_drv_normal},
	[LOWPOWER] = {emmc_c9800d_func_lowpower, emmc_c9800d_pullud_lowpower, emmc_c9800d_drv_lowpower},
};

struct block_table block_config_phone_c9800d[] = {
     BLOCK_CONFIG("block_i2c0", &block_i2c0_c9800d, i2c0_c9800d_config)
     BLOCK_CONFIG("block_i2c1", &block_i2c1_c9800d, i2c1_c9800d_config)
     BLOCK_CONFIG("block_i2c2", &block_i2c2_c9800d, i2c2_c9800d_config)
     BLOCK_CONFIG("block_i2c3", &block_i2c3_c9800d, i2c3_c9800d_config)
     BLOCK_CONFIG("block_spi0", &block_spi0_c9800d, spi0_c9800d_config)
     BLOCK_CONFIG("block_spi0_cs", &block_spi0_cs_c9800d, spi0_cs_c9800d_config)
     BLOCK_CONFIG("block_uart0", &block_uart0_c9800d, uart0_c9800d_config)
     BLOCK_CONFIG("block_uart1", &block_uart1_c9800d, uart1_c9800d_config)
     BLOCK_CONFIG("block_uart2", &block_uart2_c9800d, uart2_c9800d_config)
     BLOCK_CONFIG("block_uart4", &block_uart4_c9800d, uart4_c9800d_config)
     BLOCK_CONFIG("block_kpc", &block_kpc_c9800d, kpc_c9800d_config)
     BLOCK_CONFIG("block_sd", &block_sd_c9800d, sd_c9800d_config)
     BLOCK_CONFIG("block_nand", &block_nand_c9800d, nand_c9800d_config)
     BLOCK_CONFIG("block_sdio", &block_sdio_c9800d, sdio_c9800d_config)
     BLOCK_CONFIG("block_btpm", &block_btpm_c9800d, btpm_c9800d_config)
     BLOCK_CONFIG("block_btpwr", &block_btpwr_c9800d, btpwr_c9800d_config)
     BLOCK_CONFIG("block_gps_boardcom", &block_gps_boardcom_c9800d, gps_boardcom_c9800d_config)
     BLOCK_CONFIG("block_ts", &block_ts_c9800d, ts_c9800d_config)
     BLOCK_CONFIG("block_lcd", &block_lcd_c9800d, lcd_c9800d_config)
     BLOCK_CONFIG("block_pwm", &block_pwm_c9800d, pwm_c9800d_config)
     BLOCK_CONFIG("block_hdmi", &block_hdmi_c9800d, hdmi_c9800d_config)
     BLOCK_CONFIG("block_wifi", &block_wifi_c9800d, wifi_c9800d_config)
     BLOCK_CONFIG("block_isp_dvp", &block_isp_dvp_c9800d, isp_dvp_c9800d_config)
     BLOCK_CONFIG("block_isp_i2c", &block_isp_i2c_c9800d, isp_i2c_c9800d_config)
     BLOCK_CONFIG("block_isp_reset", &block_isp_reset_c9800d, isp_reset_c9800d_config)
     BLOCK_CONFIG("block_isp", &block_isp_c9800d, isp_c9800d_config)
     BLOCK_CONFIG("block_isp_flash", &block_isp_flash_c9800d, isp_flash_c9800d_config)
     BLOCK_CONFIG("block_charger", &block_charger_c9800d, charger_c9800d_config)
     BLOCK_CONFIG("block_gsensor", &block_gsensor_c9800d, gsensor_c9800d_config)
     BLOCK_CONFIG("block_audio_spk", &block_audio_spk_c9800d, audio_spk_c9800d_config)
     BLOCK_CONFIG("block_audio_eph", &block_audio_eph_c9800d, audio_eph_c9800d_config)
     BLOCK_CONFIG("block_modem", &block_modem_c9800d, modem_c9800d_config)
     BLOCK_CONFIG("block_vbusdrv", &block_vbusdrv_c9800d, vbusdrv_c9800d_config)
     BLOCK_CONFIG("block_gps_spi", &block_gps_spi_c9800d, gps_spi_c9800d_config)
     BLOCK_CONFIG("block_modem_switch", &block_modem_switch_c9800d, modem_switch_c9800d_config)
     BLOCK_CONFIG("block_mcamdvdd", &block_mcamdvdd_c9800d, mcamdvdd_c9800d_config)
     BLOCK_CONFIG("block_usb_switch", &block_usb_switch_c9800d, usb_switch_c9800d_config)
     BLOCK_CONFIG("block_modem_qsc", &block_modem_qsc_c9800d, modem_qsc_c9800d_config)
     BLOCK_CONFIG("block_sensor_gyr", &block_sensor_gyr_c9800d, sensor_gyr_c9800d_config)
     BLOCK_CONFIG("block_headset_uart", &block_headset_uart_c9800d, headset_uart_c9800d_config)
     BLOCK_CONFIG("block_mhl", &block_mhl_c9800d, mhl_c9800d_config)
     BLOCK_CONFIG("block_sensor_com", &block_sensor_com_c9800d, sensor_com_c9800d_config)
     BLOCK_CONFIG("block_sensor_pro", &block_sensor_pro_c9800d, sensor_pro_c9800d_config)
     BLOCK_CONFIG("block_therm", &block_therm_c9800d, therm_c9800d_config)
     BLOCK_CONFIG("block_es305", &block_es305_c9800d, es305_c9800d_config)
     BLOCK_CONFIG("block_pmu", &block_pmu_c9800d, pmu_c9800d_config)
     BLOCK_CONFIG("block_battery", &block_battery_c9800d, battery_c9800d_config)
     BLOCK_CONFIG("block_camera", &block_camera_c9800d, camera_c9800d_config)
     BLOCK_CONFIG("block_audio_es305", &block_audio_es305_c9800d, audio_es305_c9800d_config)
     BLOCK_CONFIG("block_spi1", &block_spi1_c9800d, spi1_c9800d_config)
     BLOCK_CONFIG("block_uart3", &block_uart3_c9800d, uart3_c9800d_config)
     BLOCK_CONFIG("block_emmc", &block_emmc_c9800d, emmc_c9800d_config)
     {NULL, NULL, NULL},
};


/******************pins ****************/

struct  iomux_pin *i2c0_u9700l_pins[] = {
&gpio_084_cs, &gpio_085_cs, NULL,
};
struct  iomux_pin *i2c1_u9700l_pins[] = {
&gpio_086_cs, &gpio_087_cs, NULL,
};
struct  iomux_pin *i2c2_u9700l_pins[] = {
&gpio_063_cs, &gpio_064_cs, NULL,
};
struct  iomux_pin *i2c3_u9700l_pins[] = {
&gpio_057_cs, &gpio_058_cs, NULL,
};
struct  iomux_pin *spi0_u9700l_pins[] = {
&gpio_107_cs, &gpio_108_cs, NULL,
};
struct  iomux_pin *spi0_cs_u9700l_pins[] = {
&gpio_109_cs, &gpio_110_cs, &gpio_111_cs, &gpio_112_cs, NULL,
};
struct  iomux_pin *uart0_u9700l_pins[] = {
&gpio_119_cs, &gpio_120_cs, NULL,
};
struct  iomux_pin *uart1_u9700l_pins[] = {
&gpio_121_cs, &gpio_122_cs, &gpio_123_cs, &gpio_124_cs, NULL,
};
struct  iomux_pin *uart2_u9700l_pins[] = {
&gpio_127_cs, &gpio_128_cs, NULL,
};
struct  iomux_pin *uart4_u9700l_pins[] = {
&gpio_162_cs, &gpio_163_cs, &gpio_164_cs, &gpio_165_cs, NULL,
};
struct  iomux_pin *kpc_u9700l_pins[] = {
&gpio_129_cs, &gpio_130_cs, &gpio_131_cs, &gpio_137_cs, &gpio_138_cs, &gpio_139_cs, NULL,
};
struct  iomux_pin *sd_u9700l_pins[] = {
&gpio_088_cs, &gpio_089_cs, &gpio_090_cs, &gpio_091_cs, &gpio_092_cs, &gpio_093_cs, NULL,
};
struct  iomux_pin *nand_u9700l_pins[] = {
&gpio_008_cs, &gpio_009_cs, &gpio_010_cs, &gpio_011_cs, &gpio_012_cs, &gpio_013_cs, &gpio_014_cs, &gpio_015_cs, &gpio_016_cs, &gpio_017_cs, &gpio_018_cs, &gpio_019_cs, &gpio_020_cs, &gpio_021_cs, &gpio_022_cs, &gpio_023_cs, &gpio_024_cs, &gpio_025_cs, &gpio_026_cs, &gpio_027_cs, &gpio_028_cs, &gpio_029_cs, &gpio_030_cs, &gpio_031_cs, &gpio_032_cs, &gpio_033_cs, &gpio_034_cs, &gpio_035_cs, NULL,
};
struct  iomux_pin *sdio_u9700l_pins[] = {
&gpio_100_cs, &gpio_101_cs, &gpio_102_cs, &gpio_103_cs, &gpio_104_cs, &gpio_105_cs, NULL,
};
struct  iomux_pin *btpm_u9700l_pins[] = {
&gpio_166_cs, &gpio_167_cs, NULL,
};
struct  iomux_pin *btpwr_u9700l_pins[] = {
&gpio_168_cs, &gpio_169_cs, NULL,
};
struct  iomux_pin *gps_boardcom_u9700l_pins[] = {
&gpio_151_cs, &gpio_152_cs, NULL,
};
struct  iomux_pin *ts_u9700l_pins[] = {
&gpio_156_cs, &gpio_157_cs, NULL,
};
struct  iomux_pin *lcd_u9700l_pins[] = {
&gpio_003_cs, &gpio_072_cs, &gpio_135_cs, &gpio_136_cs, &gpio_171_cs, NULL,
};
struct  iomux_pin *pwm_u9700l_pins[] = {
&gpio_149_cs, &gpio_150_cs, NULL,
};
struct  iomux_pin *hdmi_u9700l_pins[] = {
&gpio_038_cs, &gpio_039_cs, &gpio_040_cs, &gpio_041_cs, NULL,
};
struct  iomux_pin *wifi_u9700l_pins[] = {
&gpio_002_cs, &gpio_004_cs, NULL,
};
struct  iomux_pin *isp_dvp_u9700l_pins[] = {
&gpio_042_cs, &gpio_043_cs, &gpio_044_cs, &gpio_045_cs, &gpio_046_cs, &gpio_047_cs, &gpio_048_cs, &gpio_049_cs, &gpio_052_cs, &gpio_053_cs, &gpio_054_cs, NULL,
};
struct  iomux_pin *isp_i2c_u9700l_pins[] = {
&gpio_055_cs, &gpio_056_cs, NULL,
};
struct  iomux_pin *isp_reset_u9700l_pins[] = {
&gpio_059_cs, &gpio_060_cs, NULL,
};
struct  iomux_pin *isp_u9700l_pins[] = {
&gpio_067_cs, &gpio_068_cs, &gpio_069_cs, &gpio_070_cs, &gpio_071_cs, &gpio_075_cs, NULL,
};
struct  iomux_pin *isp_flash_u9700l_pins[] = {
&gpio_065_cs, &gpio_066_cs, &gpio_076_cs, NULL,
};
struct  iomux_pin *charger_u9700l_pins[] = {
&gpio_005_cs, &gpio_074_cs, NULL,
};
struct  iomux_pin *gsensor_u9700l_pins[] = {
&gpio_051_cs, &gpio_148_cs, NULL,
};
struct  iomux_pin *audio_spk_u9700l_pins[] = {
&gpio_117_cs, NULL,
};
struct  iomux_pin *audio_eph_u9700l_pins[] = {
&gpio_118_cs, NULL,
};
struct  iomux_pin *modem_u9700l_pins[] = {
&gpio_094_cs, &gpio_095_cs, &gpio_096_cs, &gpio_097_cs, &gpio_098_cs, &gpio_113_cs, &gpio_114_cs, &gpio_115_cs, NULL,
};
struct  iomux_pin *vbusdrv_u9700l_pins[] = {
&gpio_082_cs, NULL,
};
struct  iomux_pin *gps_spi_u9700l_pins[] = {
&gpio_154_cs, &gpio_155_cs, NULL,
};
struct  iomux_pin *modem_switch_u9700l_pins[] = {
&gpio_106_cs, NULL,
};
struct  iomux_pin *mcamdvdd_u9700l_pins[] = {
&gpio_073_cs, NULL,
};
struct  iomux_pin *usb_switch_u9700l_pins[] = {
&gpio_174_cs, NULL,
};
struct  iomux_pin *felica_u9700l_pins[] = {
&gpio_006_cs, &gpio_134_cs, &gpio_140_cs, &gpio_160_cs, &gpio_161_cs, NULL,
};

/******************IOMUX_BLOCK****************/

IOMUX_BLOCK(block_i2c0_u9700l, "block_i2c0_u9700l", NORMAL, i2c0_u9700l_pins)
IOMUX_BLOCK(block_i2c1_u9700l, "block_i2c1_u9700l", NORMAL, i2c1_u9700l_pins)
IOMUX_BLOCK(block_i2c2_u9700l, "block_i2c2_u9700l", NORMAL, i2c2_u9700l_pins)
IOMUX_BLOCK(block_i2c3_u9700l, "block_i2c3_u9700l", NORMAL, i2c3_u9700l_pins)
IOMUX_BLOCK(block_spi0_u9700l, "block_spi0_u9700l", NORMAL, spi0_u9700l_pins)
IOMUX_BLOCK(block_spi0_cs_u9700l, "block_spi0_cs_u9700l", NORMAL, spi0_cs_u9700l_pins)
IOMUX_BLOCK(block_uart0_u9700l, "block_uart0_u9700l", NORMAL, uart0_u9700l_pins)
IOMUX_BLOCK(block_uart1_u9700l, "block_uart1_u9700l", NORMAL, uart1_u9700l_pins)
IOMUX_BLOCK(block_uart2_u9700l, "block_uart2_u9700l", NORMAL, uart2_u9700l_pins)
IOMUX_BLOCK(block_uart4_u9700l, "block_uart4_u9700l", NORMAL, uart4_u9700l_pins)
IOMUX_BLOCK(block_kpc_u9700l, "block_kpc_u9700l", NORMAL, kpc_u9700l_pins)
IOMUX_BLOCK(block_sd_u9700l, "block_sd_u9700l", NORMAL, sd_u9700l_pins)
IOMUX_BLOCK(block_nand_u9700l, "block_nand_u9700l", NORMAL, nand_u9700l_pins)
IOMUX_BLOCK(block_sdio_u9700l, "block_sdio_u9700l", NORMAL, sdio_u9700l_pins)
IOMUX_BLOCK(block_btpm_u9700l, "block_btpm_u9700l", NORMAL, btpm_u9700l_pins)
IOMUX_BLOCK(block_btpwr_u9700l, "block_btpwr_u9700l", NORMAL, btpwr_u9700l_pins)
IOMUX_BLOCK(block_gps_boardcom_u9700l, "block_gps_boardcom_u9700l", NORMAL, gps_boardcom_u9700l_pins)
IOMUX_BLOCK(block_ts_u9700l, "block_ts_u9700l", NORMAL, ts_u9700l_pins)
IOMUX_BLOCK(block_lcd_u9700l, "block_lcd_u9700l", NORMAL, lcd_u9700l_pins)
IOMUX_BLOCK(block_pwm_u9700l, "block_pwm_u9700l", NORMAL, pwm_u9700l_pins)
IOMUX_BLOCK(block_hdmi_u9700l, "block_hdmi_u9700l", NORMAL, hdmi_u9700l_pins)
IOMUX_BLOCK(block_wifi_u9700l, "block_wifi_u9700l", NORMAL, wifi_u9700l_pins)
IOMUX_BLOCK(block_isp_dvp_u9700l, "block_isp_dvp_u9700l", NORMAL, isp_dvp_u9700l_pins)
IOMUX_BLOCK(block_isp_i2c_u9700l, "block_isp_i2c_u9700l", NORMAL, isp_i2c_u9700l_pins)
IOMUX_BLOCK(block_isp_reset_u9700l, "block_isp_reset_u9700l", NORMAL, isp_reset_u9700l_pins)
IOMUX_BLOCK(block_isp_u9700l, "block_isp_u9700l", NORMAL, isp_u9700l_pins)
IOMUX_BLOCK(block_isp_flash_u9700l, "block_isp_flash_u9700l", NORMAL, isp_flash_u9700l_pins)
IOMUX_BLOCK(block_charger_u9700l, "block_charger_u9700l", NORMAL, charger_u9700l_pins)
IOMUX_BLOCK(block_gsensor_u9700l, "block_gsensor_u9700l", NORMAL, gsensor_u9700l_pins)
IOMUX_BLOCK(block_audio_spk_u9700l, "block_audio_spk_u9700l", NORMAL, audio_spk_u9700l_pins)
IOMUX_BLOCK(block_audio_eph_u9700l, "block_audio_eph_u9700l", NORMAL, audio_eph_u9700l_pins)
IOMUX_BLOCK(block_modem_u9700l, "block_modem_u9700l", NORMAL, modem_u9700l_pins)
IOMUX_BLOCK(block_vbusdrv_u9700l, "block_vbusdrv_u9700l", NORMAL, vbusdrv_u9700l_pins)
IOMUX_BLOCK(block_gps_spi_u9700l, "block_gps_spi_u9700l", NORMAL, gps_spi_u9700l_pins)
IOMUX_BLOCK(block_modem_switch_u9700l, "block_modem_switch_u9700l", NORMAL, modem_switch_u9700l_pins)
IOMUX_BLOCK(block_mcamdvdd_u9700l, "block_mcamdvdd_u9700l", NORMAL, mcamdvdd_u9700l_pins)
IOMUX_BLOCK(block_usb_switch_u9700l, "block_usb_switch_u9700l", NORMAL, usb_switch_u9700l_pins)
IOMUX_BLOCK(block_felica_u9700l, "block_felica_u9700l", NORMAL, felica_u9700l_pins)

/******************normal func ****************/

enum lowlayer_func i2c0_u9700l_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func i2c1_u9700l_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func i2c2_u9700l_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func i2c3_u9700l_func_normal[] = {FUNC2, FUNC2, -INVALID,};
enum lowlayer_func spi0_u9700l_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func spi0_cs_u9700l_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func uart0_u9700l_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func uart1_u9700l_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func uart2_u9700l_func_normal[] = {FUNC2, FUNC2, -INVALID,};
enum lowlayer_func uart4_u9700l_func_normal[] = {FUNC2, FUNC2, FUNC2, FUNC2, -INVALID,};
enum lowlayer_func kpc_u9700l_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func sd_u9700l_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func nand_u9700l_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func sdio_u9700l_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func btpm_u9700l_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func btpwr_u9700l_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func gps_boardcom_u9700l_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func ts_u9700l_func_normal[] = {RESERVE, RESERVE, -INVALID,};
enum lowlayer_func lcd_u9700l_func_normal[] = {FUNC0, FUNC2, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func pwm_u9700l_func_normal[] = {FUNC0, FUNC1, -INVALID,};
enum lowlayer_func hdmi_u9700l_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func wifi_u9700l_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_dvp_u9700l_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_i2c_u9700l_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_reset_u9700l_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_u9700l_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_flash_u9700l_func_normal[] = {FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func charger_u9700l_func_normal[] = {FUNC0, FUNC1, -INVALID,};
enum lowlayer_func gsensor_u9700l_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func audio_spk_u9700l_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func audio_eph_u9700l_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func modem_u9700l_func_normal[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func vbusdrv_u9700l_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func gps_spi_u9700l_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func modem_switch_u9700l_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func mcamdvdd_u9700l_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func usb_switch_u9700l_func_normal[] = {RESERVE, -INVALID,};
enum lowlayer_func felica_u9700l_func_normal[] = {FUNC0, FUNC1, FUNC1, FUNC2, FUNC2, -INVALID,};

/******************lowpower func****************/

enum lowlayer_func i2c0_u9700l_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func i2c1_u9700l_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func i2c2_u9700l_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func i2c3_u9700l_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func spi0_u9700l_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func spi0_cs_u9700l_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart0_u9700l_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart1_u9700l_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart2_u9700l_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart4_u9700l_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func kpc_u9700l_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func sd_u9700l_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func nand_u9700l_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func sdio_u9700l_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func btpm_u9700l_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func btpwr_u9700l_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func gps_boardcom_u9700l_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func ts_u9700l_func_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum lowlayer_func lcd_u9700l_func_lowpower[] = {FUNC0, FUNC2, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func pwm_u9700l_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func hdmi_u9700l_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func wifi_u9700l_func_lowpower[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_dvp_u9700l_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func isp_i2c_u9700l_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func isp_reset_u9700l_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func isp_u9700l_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC0, -INVALID,};
enum lowlayer_func isp_flash_u9700l_func_lowpower[] = {FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func charger_u9700l_func_lowpower[] = {FUNC0, FUNC1, -INVALID,};
enum lowlayer_func gsensor_u9700l_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func audio_spk_u9700l_func_lowpower[] = {FUNC1, -INVALID,};
enum lowlayer_func audio_eph_u9700l_func_lowpower[] = {FUNC1, -INVALID,};
enum lowlayer_func modem_u9700l_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func vbusdrv_u9700l_func_lowpower[] = {FUNC0, -INVALID,};
enum lowlayer_func gps_spi_u9700l_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func modem_switch_u9700l_func_lowpower[] = {FUNC1, -INVALID,};
enum lowlayer_func mcamdvdd_u9700l_func_lowpower[] = {FUNC1, -INVALID,};
enum lowlayer_func usb_switch_u9700l_func_lowpower[] = {FUNC1, -INVALID,};
enum lowlayer_func felica_u9700l_func_lowpower[] = {FUNC0, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};

/******************normal pullud****************/

enum pull_updown i2c0_u9700l_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c1_u9700l_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c2_u9700l_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c3_u9700l_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown spi0_u9700l_pullud_normal[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown spi0_cs_u9700l_pullud_normal[] = {PULLDOWN, PULLDOWN, NOPULL, NOPULL, -INVALID,};
enum pull_updown uart0_u9700l_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown uart1_u9700l_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown uart2_u9700l_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown uart4_u9700l_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown kpc_u9700l_pullud_normal[] = {PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, -INVALID,};
enum pull_updown sd_u9700l_pullud_normal[] = {NOPULL, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, -INVALID,};
enum pull_updown nand_u9700l_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown sdio_u9700l_pullud_normal[] = {NOPULL, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, -INVALID,};
enum pull_updown btpm_u9700l_pullud_normal[] = {PULLUP, NOPULL, -INVALID,};
enum pull_updown btpwr_u9700l_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown gps_boardcom_u9700l_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown ts_u9700l_pullud_normal[] = {NOPULL, PULLUP, -INVALID,};
enum pull_updown lcd_u9700l_pullud_normal[] = {NOPULL, PULLDOWN, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown pwm_u9700l_pullud_normal[] = {NOPULL, PULLDOWN, -INVALID,};
enum pull_updown hdmi_u9700l_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown wifi_u9700l_pullud_normal[] = {NOPULL, PULLDOWN, -INVALID,};
enum pull_updown isp_dvp_u9700l_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_i2c_u9700l_pullud_normal[] = {PULLUP, PULLUP, -INVALID,};
enum pull_updown isp_reset_u9700l_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_u9700l_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_flash_u9700l_pullud_normal[] = {NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown charger_u9700l_pullud_normal[] = {PULLUP, NOPULL, -INVALID,};
enum pull_updown gsensor_u9700l_pullud_normal[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown audio_spk_u9700l_pullud_normal[] = {NOPULL, -INVALID,};
enum pull_updown audio_eph_u9700l_pullud_normal[] = {NOPULL, -INVALID,};
enum pull_updown modem_u9700l_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown vbusdrv_u9700l_pullud_normal[] = {NOPULL, -INVALID,};
enum pull_updown gps_spi_u9700l_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown modem_switch_u9700l_pullud_normal[] = {NOPULL, -INVALID,};
enum pull_updown mcamdvdd_u9700l_pullud_normal[] = {NOPULL, -INVALID,};
enum pull_updown usb_switch_u9700l_pullud_normal[] = {RESERVE, -INVALID,};
enum pull_updown felica_u9700l_pullud_normal[] = {PULLUP, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};

/******************lowpower pullud****************/

enum pull_updown i2c0_u9700l_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c1_u9700l_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c2_u9700l_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c3_u9700l_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown spi0_u9700l_pullud_lowpower[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown spi0_cs_u9700l_pullud_lowpower[] = {PULLDOWN, PULLDOWN, NOPULL, NOPULL, -INVALID,};
enum pull_updown uart0_u9700l_pullud_lowpower[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown uart1_u9700l_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown uart2_u9700l_pullud_lowpower[] = {PULLDOWN, NOPULL, -INVALID,};
enum pull_updown uart4_u9700l_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown kpc_u9700l_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLUP, PULLUP, PULLDOWN, -INVALID,};
enum pull_updown sd_u9700l_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown nand_u9700l_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown sdio_u9700l_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown btpm_u9700l_pullud_lowpower[] = {PULLDOWN, NOPULL, -INVALID,};
enum pull_updown btpwr_u9700l_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown gps_boardcom_u9700l_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown ts_u9700l_pullud_lowpower[] = {NOPULL, PULLUP, -INVALID,};
enum pull_updown lcd_u9700l_pullud_lowpower[] = {NOPULL, PULLDOWN, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown pwm_u9700l_pullud_lowpower[] = {NOPULL, PULLDOWN, -INVALID,};
enum pull_updown hdmi_u9700l_pullud_lowpower[] = {NOPULL, NOPULL, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown wifi_u9700l_pullud_lowpower[] = {NOPULL, PULLDOWN, -INVALID,};
enum pull_updown isp_dvp_u9700l_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown isp_i2c_u9700l_pullud_lowpower[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown isp_reset_u9700l_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_u9700l_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_flash_u9700l_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown charger_u9700l_pullud_lowpower[] = {PULLUP, NOPULL, -INVALID,};
enum pull_updown gsensor_u9700l_pullud_lowpower[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown audio_spk_u9700l_pullud_lowpower[] = {NOPULL, -INVALID,};
enum pull_updown audio_eph_u9700l_pullud_lowpower[] = {NOPULL, -INVALID,};
enum pull_updown modem_u9700l_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, NOPULL, PULLDOWN, PULLDOWN, NOPULL, NOPULL, -INVALID,};
enum pull_updown vbusdrv_u9700l_pullud_lowpower[] = {NOPULL, -INVALID,};
enum pull_updown gps_spi_u9700l_pullud_lowpower[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown modem_switch_u9700l_pullud_lowpower[] = {NOPULL, -INVALID,};
enum pull_updown mcamdvdd_u9700l_pullud_lowpower[] = {NOPULL, -INVALID,};
enum pull_updown usb_switch_u9700l_pullud_lowpower[] = {NOPULL, -INVALID,};
enum pull_updown felica_u9700l_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, PULLDOWN, PULLDOWN, -INVALID,};

/******************normal drv****************/

enum drive_strength i2c0_u9700l_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c1_u9700l_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c2_u9700l_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c3_u9700l_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength spi0_u9700l_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength spi0_cs_u9700l_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength uart0_u9700l_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength uart1_u9700l_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength uart2_u9700l_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength uart4_u9700l_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength kpc_u9700l_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength sd_u9700l_drv_normal[] = {LEVEL2, LEVEL3, LEVEL3, LEVEL3, LEVEL3, LEVEL3, -INVALID,};
enum drive_strength nand_u9700l_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, RESERVE, RESERVE, RESERVE, RESERVE, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength sdio_u9700l_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength btpm_u9700l_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength btpwr_u9700l_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength gps_boardcom_u9700l_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength ts_u9700l_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength lcd_u9700l_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength pwm_u9700l_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength hdmi_u9700l_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength wifi_u9700l_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_dvp_u9700l_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_i2c_u9700l_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_reset_u9700l_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_u9700l_drv_normal[] = {LEVEL0, LEVEL0, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_flash_u9700l_drv_normal[] = {RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength charger_u9700l_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength gsensor_u9700l_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength audio_spk_u9700l_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength audio_eph_u9700l_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength modem_u9700l_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength vbusdrv_u9700l_drv_normal[] = {LEVEL2, -INVALID,};
enum drive_strength gps_spi_u9700l_drv_normal[] = {LEVEL2, RESERVE, -INVALID,};
enum drive_strength modem_switch_u9700l_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength mcamdvdd_u9700l_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength usb_switch_u9700l_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength felica_u9700l_drv_normal[] = {RESERVE, RESERVE, RESERVE, LEVEL2, LEVEL2, -INVALID,};

/******************lowpower drv****************/

enum drive_strength i2c0_u9700l_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c1_u9700l_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c2_u9700l_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c3_u9700l_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength spi0_u9700l_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength spi0_cs_u9700l_drv_lowpower[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength uart0_u9700l_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength uart1_u9700l_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength uart2_u9700l_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength uart4_u9700l_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength kpc_u9700l_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength sd_u9700l_drv_lowpower[] = {LEVEL2, LEVEL3, LEVEL3, LEVEL3, LEVEL3, LEVEL3, -INVALID,};
enum drive_strength nand_u9700l_drv_lowpower[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, RESERVE, RESERVE, RESERVE, RESERVE, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, -INVALID,};
enum drive_strength sdio_u9700l_drv_lowpower[] = {LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, -INVALID,};
enum drive_strength btpm_u9700l_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength btpwr_u9700l_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength gps_boardcom_u9700l_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength ts_u9700l_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength lcd_u9700l_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength pwm_u9700l_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength hdmi_u9700l_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength wifi_u9700l_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_dvp_u9700l_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_i2c_u9700l_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_reset_u9700l_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_u9700l_drv_lowpower[] = {LEVEL0, LEVEL0, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_flash_u9700l_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength charger_u9700l_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength gsensor_u9700l_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength audio_spk_u9700l_drv_lowpower[] = {RESERVE, -INVALID,};
enum drive_strength audio_eph_u9700l_drv_lowpower[] = {RESERVE, -INVALID,};
enum drive_strength modem_u9700l_drv_lowpower[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength vbusdrv_u9700l_drv_lowpower[] = {LEVEL2, -INVALID,};
enum drive_strength gps_spi_u9700l_drv_lowpower[] = {LEVEL2, RESERVE, -INVALID,};
enum drive_strength modem_switch_u9700l_drv_lowpower[] = {RESERVE, -INVALID,};
enum drive_strength mcamdvdd_u9700l_drv_lowpower[] = {RESERVE, -INVALID,};
enum drive_strength usb_switch_u9700l_drv_lowpower[] = {RESERVE, -INVALID,};
enum drive_strength felica_u9700l_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, LEVEL2, LEVEL2, -INVALID,};

/******************config****************/

struct block_config i2c0_u9700l_config[] = {
	[NORMAL] = {i2c0_u9700l_func_normal, i2c0_u9700l_pullud_normal, i2c0_u9700l_drv_normal},
	[LOWPOWER] = {i2c0_u9700l_func_lowpower, i2c0_u9700l_pullud_lowpower, i2c0_u9700l_drv_lowpower},
};
struct block_config i2c1_u9700l_config[] = {
	[NORMAL] = {i2c1_u9700l_func_normal, i2c1_u9700l_pullud_normal, i2c1_u9700l_drv_normal},
	[LOWPOWER] = {i2c1_u9700l_func_lowpower, i2c1_u9700l_pullud_lowpower, i2c1_u9700l_drv_lowpower},
};
struct block_config i2c2_u9700l_config[] = {
	[NORMAL] = {i2c2_u9700l_func_normal, i2c2_u9700l_pullud_normal, i2c2_u9700l_drv_normal},
	[LOWPOWER] = {i2c2_u9700l_func_lowpower, i2c2_u9700l_pullud_lowpower, i2c2_u9700l_drv_lowpower},
};
struct block_config i2c3_u9700l_config[] = {
	[NORMAL] = {i2c3_u9700l_func_normal, i2c3_u9700l_pullud_normal, i2c3_u9700l_drv_normal},
	[LOWPOWER] = {i2c3_u9700l_func_lowpower, i2c3_u9700l_pullud_lowpower, i2c3_u9700l_drv_lowpower},
};
struct block_config spi0_u9700l_config[] = {
	[NORMAL] = {spi0_u9700l_func_normal, spi0_u9700l_pullud_normal, spi0_u9700l_drv_normal},
	[LOWPOWER] = {spi0_u9700l_func_lowpower, spi0_u9700l_pullud_lowpower, spi0_u9700l_drv_lowpower},
};
struct block_config spi0_cs_u9700l_config[] = {
	[NORMAL] = {spi0_cs_u9700l_func_normal, spi0_cs_u9700l_pullud_normal, spi0_cs_u9700l_drv_normal},
	[LOWPOWER] = {spi0_cs_u9700l_func_lowpower, spi0_cs_u9700l_pullud_lowpower, spi0_cs_u9700l_drv_lowpower},
};
struct block_config uart0_u9700l_config[] = {
	[NORMAL] = {uart0_u9700l_func_normal, uart0_u9700l_pullud_normal, uart0_u9700l_drv_normal},
	[LOWPOWER] = {uart0_u9700l_func_lowpower, uart0_u9700l_pullud_lowpower, uart0_u9700l_drv_lowpower},
};
struct block_config uart1_u9700l_config[] = {
	[NORMAL] = {uart1_u9700l_func_normal, uart1_u9700l_pullud_normal, uart1_u9700l_drv_normal},
	[LOWPOWER] = {uart1_u9700l_func_lowpower, uart1_u9700l_pullud_lowpower, uart1_u9700l_drv_lowpower},
};
struct block_config uart2_u9700l_config[] = {
	[NORMAL] = {uart2_u9700l_func_normal, uart2_u9700l_pullud_normal, uart2_u9700l_drv_normal},
	[LOWPOWER] = {uart2_u9700l_func_lowpower, uart2_u9700l_pullud_lowpower, uart2_u9700l_drv_lowpower},
};
struct block_config uart4_u9700l_config[] = {
	[NORMAL] = {uart4_u9700l_func_normal, uart4_u9700l_pullud_normal, uart4_u9700l_drv_normal},
	[LOWPOWER] = {uart4_u9700l_func_lowpower, uart4_u9700l_pullud_lowpower, uart4_u9700l_drv_lowpower},
};
struct block_config kpc_u9700l_config[] = {
	[NORMAL] = {kpc_u9700l_func_normal, kpc_u9700l_pullud_normal, kpc_u9700l_drv_normal},
	[LOWPOWER] = {kpc_u9700l_func_lowpower, kpc_u9700l_pullud_lowpower, kpc_u9700l_drv_lowpower},
};
struct block_config sd_u9700l_config[] = {
	[NORMAL] = {sd_u9700l_func_normal, sd_u9700l_pullud_normal, sd_u9700l_drv_normal},
	[LOWPOWER] = {sd_u9700l_func_lowpower, sd_u9700l_pullud_lowpower, sd_u9700l_drv_lowpower},
};
struct block_config nand_u9700l_config[] = {
	[NORMAL] = {nand_u9700l_func_normal, nand_u9700l_pullud_normal, nand_u9700l_drv_normal},
	[LOWPOWER] = {nand_u9700l_func_lowpower, nand_u9700l_pullud_lowpower, nand_u9700l_drv_lowpower},
};
struct block_config sdio_u9700l_config[] = {
	[NORMAL] = {sdio_u9700l_func_normal, sdio_u9700l_pullud_normal, sdio_u9700l_drv_normal},
	[LOWPOWER] = {sdio_u9700l_func_lowpower, sdio_u9700l_pullud_lowpower, sdio_u9700l_drv_lowpower},
};
struct block_config btpm_u9700l_config[] = {
	[NORMAL] = {btpm_u9700l_func_normal, btpm_u9700l_pullud_normal, btpm_u9700l_drv_normal},
	[LOWPOWER] = {btpm_u9700l_func_lowpower, btpm_u9700l_pullud_lowpower, btpm_u9700l_drv_lowpower},
};
struct block_config btpwr_u9700l_config[] = {
	[NORMAL] = {btpwr_u9700l_func_normal, btpwr_u9700l_pullud_normal, btpwr_u9700l_drv_normal},
	[LOWPOWER] = {btpwr_u9700l_func_lowpower, btpwr_u9700l_pullud_lowpower, btpwr_u9700l_drv_lowpower},
};
struct block_config gps_boardcom_u9700l_config[] = {
	[NORMAL] = {gps_boardcom_u9700l_func_normal, gps_boardcom_u9700l_pullud_normal, gps_boardcom_u9700l_drv_normal},
	[LOWPOWER] = {gps_boardcom_u9700l_func_lowpower, gps_boardcom_u9700l_pullud_lowpower, gps_boardcom_u9700l_drv_lowpower},
};
struct block_config ts_u9700l_config[] = {
	[NORMAL] = {ts_u9700l_func_normal, ts_u9700l_pullud_normal, ts_u9700l_drv_normal},
	[LOWPOWER] = {ts_u9700l_func_lowpower, ts_u9700l_pullud_lowpower, ts_u9700l_drv_lowpower},
};
struct block_config lcd_u9700l_config[] = {
	[NORMAL] = {lcd_u9700l_func_normal, lcd_u9700l_pullud_normal, lcd_u9700l_drv_normal},
	[LOWPOWER] = {lcd_u9700l_func_lowpower, lcd_u9700l_pullud_lowpower, lcd_u9700l_drv_lowpower},
};
struct block_config pwm_u9700l_config[] = {
	[NORMAL] = {pwm_u9700l_func_normal, pwm_u9700l_pullud_normal, pwm_u9700l_drv_normal},
	[LOWPOWER] = {pwm_u9700l_func_lowpower, pwm_u9700l_pullud_lowpower, pwm_u9700l_drv_lowpower},
};
struct block_config hdmi_u9700l_config[] = {
	[NORMAL] = {hdmi_u9700l_func_normal, hdmi_u9700l_pullud_normal, hdmi_u9700l_drv_normal},
	[LOWPOWER] = {hdmi_u9700l_func_lowpower, hdmi_u9700l_pullud_lowpower, hdmi_u9700l_drv_lowpower},
};
struct block_config wifi_u9700l_config[] = {
	[NORMAL] = {wifi_u9700l_func_normal, wifi_u9700l_pullud_normal, wifi_u9700l_drv_normal},
	[LOWPOWER] = {wifi_u9700l_func_lowpower, wifi_u9700l_pullud_lowpower, wifi_u9700l_drv_lowpower},
};
struct block_config isp_dvp_u9700l_config[] = {
	[NORMAL] = {isp_dvp_u9700l_func_normal, isp_dvp_u9700l_pullud_normal, isp_dvp_u9700l_drv_normal},
	[LOWPOWER] = {isp_dvp_u9700l_func_lowpower, isp_dvp_u9700l_pullud_lowpower, isp_dvp_u9700l_drv_lowpower},
};
struct block_config isp_i2c_u9700l_config[] = {
	[NORMAL] = {isp_i2c_u9700l_func_normal, isp_i2c_u9700l_pullud_normal, isp_i2c_u9700l_drv_normal},
	[LOWPOWER] = {isp_i2c_u9700l_func_lowpower, isp_i2c_u9700l_pullud_lowpower, isp_i2c_u9700l_drv_lowpower},
};
struct block_config isp_reset_u9700l_config[] = {
	[NORMAL] = {isp_reset_u9700l_func_normal, isp_reset_u9700l_pullud_normal, isp_reset_u9700l_drv_normal},
	[LOWPOWER] = {isp_reset_u9700l_func_lowpower, isp_reset_u9700l_pullud_lowpower, isp_reset_u9700l_drv_lowpower},
};
struct block_config isp_u9700l_config[] = {
	[NORMAL] = {isp_u9700l_func_normal, isp_u9700l_pullud_normal, isp_u9700l_drv_normal},
	[LOWPOWER] = {isp_u9700l_func_lowpower, isp_u9700l_pullud_lowpower, isp_u9700l_drv_lowpower},
};
struct block_config isp_flash_u9700l_config[] = {
	[NORMAL] = {isp_flash_u9700l_func_normal, isp_flash_u9700l_pullud_normal, isp_flash_u9700l_drv_normal},
	[LOWPOWER] = {isp_flash_u9700l_func_lowpower, isp_flash_u9700l_pullud_lowpower, isp_flash_u9700l_drv_lowpower},
};
struct block_config charger_u9700l_config[] = {
	[NORMAL] = {charger_u9700l_func_normal, charger_u9700l_pullud_normal, charger_u9700l_drv_normal},
	[LOWPOWER] = {charger_u9700l_func_lowpower, charger_u9700l_pullud_lowpower, charger_u9700l_drv_lowpower},
};
struct block_config gsensor_u9700l_config[] = {
	[NORMAL] = {gsensor_u9700l_func_normal, gsensor_u9700l_pullud_normal, gsensor_u9700l_drv_normal},
	[LOWPOWER] = {gsensor_u9700l_func_lowpower, gsensor_u9700l_pullud_lowpower, gsensor_u9700l_drv_lowpower},
};
struct block_config audio_spk_u9700l_config[] = {
	[NORMAL] = {audio_spk_u9700l_func_normal, audio_spk_u9700l_pullud_normal, audio_spk_u9700l_drv_normal},
	[LOWPOWER] = {audio_spk_u9700l_func_lowpower, audio_spk_u9700l_pullud_lowpower, audio_spk_u9700l_drv_lowpower},
};
struct block_config audio_eph_u9700l_config[] = {
	[NORMAL] = {audio_eph_u9700l_func_normal, audio_eph_u9700l_pullud_normal, audio_eph_u9700l_drv_normal},
	[LOWPOWER] = {audio_eph_u9700l_func_lowpower, audio_eph_u9700l_pullud_lowpower, audio_eph_u9700l_drv_lowpower},
};
struct block_config modem_u9700l_config[] = {
	[NORMAL] = {modem_u9700l_func_normal, modem_u9700l_pullud_normal, modem_u9700l_drv_normal},
	[LOWPOWER] = {modem_u9700l_func_lowpower, modem_u9700l_pullud_lowpower, modem_u9700l_drv_lowpower},
};
struct block_config vbusdrv_u9700l_config[] = {
	[NORMAL] = {vbusdrv_u9700l_func_normal, vbusdrv_u9700l_pullud_normal, vbusdrv_u9700l_drv_normal},
	[LOWPOWER] = {vbusdrv_u9700l_func_lowpower, vbusdrv_u9700l_pullud_lowpower, vbusdrv_u9700l_drv_lowpower},
};
struct block_config gps_spi_u9700l_config[] = {
	[NORMAL] = {gps_spi_u9700l_func_normal, gps_spi_u9700l_pullud_normal, gps_spi_u9700l_drv_normal},
	[LOWPOWER] = {gps_spi_u9700l_func_lowpower, gps_spi_u9700l_pullud_lowpower, gps_spi_u9700l_drv_lowpower},
};
struct block_config modem_switch_u9700l_config[] = {
	[NORMAL] = {modem_switch_u9700l_func_normal, modem_switch_u9700l_pullud_normal, modem_switch_u9700l_drv_normal},
	[LOWPOWER] = {modem_switch_u9700l_func_lowpower, modem_switch_u9700l_pullud_lowpower, modem_switch_u9700l_drv_lowpower},
};
struct block_config mcamdvdd_u9700l_config[] = {
	[NORMAL] = {mcamdvdd_u9700l_func_normal, mcamdvdd_u9700l_pullud_normal, mcamdvdd_u9700l_drv_normal},
	[LOWPOWER] = {mcamdvdd_u9700l_func_lowpower, mcamdvdd_u9700l_pullud_lowpower, mcamdvdd_u9700l_drv_lowpower},
};
struct block_config usb_switch_u9700l_config[] = {
	[NORMAL] = {usb_switch_u9700l_func_normal, usb_switch_u9700l_pullud_normal, usb_switch_u9700l_drv_normal},
	[LOWPOWER] = {usb_switch_u9700l_func_lowpower, usb_switch_u9700l_pullud_lowpower, usb_switch_u9700l_drv_lowpower},
};
struct block_config felica_u9700l_config[] = {
	[NORMAL] = {felica_u9700l_func_normal, felica_u9700l_pullud_normal, felica_u9700l_drv_normal},
	[LOWPOWER] = {felica_u9700l_func_lowpower, felica_u9700l_pullud_lowpower, felica_u9700l_drv_lowpower},
};


/******************pins ****************/

struct  iomux_pin *audio_es305_u9700l_pins[] = {
&gpio_127_cs, &gpio_128_cs, NULL,
};
struct  iomux_pin *spi1_u9700l_pins[] = {
&gpio_113_cs, &gpio_114_cs, &gpio_115_cs, &gpio_116_cs, NULL,
};
struct  iomux_pin *uart3_u9700l_pins[] = {
&gpio_154_cs, &gpio_155_cs, &gpio_160_cs, &gpio_161_cs, NULL,
};
struct  iomux_pin *emmc_u9700l_pins[] = {
&gpio_028_cs, &gpio_029_cs, &gpio_030_cs, &gpio_031_cs, &gpio_032_cs, &gpio_033_cs, &gpio_034_cs, &gpio_035_cs, &gpio_036_cs, &gpio_037_cs, NULL,
};

/******************IOMUX_BLOCK****************/

IOMUX_BLOCK(block_audio_es305_u9700l, "block_audio_es305_u9700l", NORMAL, audio_es305_u9700l_pins)
IOMUX_BLOCK(block_spi1_u9700l, "block_spi1_u9700l", NORMAL, spi1_u9700l_pins)
IOMUX_BLOCK(block_uart3_u9700l, "block_uart3_u9700l", NORMAL, uart3_u9700l_pins)
IOMUX_BLOCK(block_emmc_u9700l, "block_emmc_u9700l", NORMAL, emmc_u9700l_pins)

/******************normal func ****************/

enum lowlayer_func audio_es305_u9700l_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func spi1_u9700l_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func uart3_u9700l_func_normal[] = {FUNC2, FUNC2, FUNC2, FUNC2, -INVALID,};
enum lowlayer_func emmc_u9700l_func_normal[] = {FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, -INVALID,};

/******************lowpower func****************/

enum lowlayer_func audio_es305_u9700l_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func spi1_u9700l_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart3_u9700l_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func emmc_u9700l_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC0, FUNC0, -INVALID,};

/******************normal pullud****************/

enum pull_updown audio_es305_u9700l_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown spi1_u9700l_pullud_normal[] = {PULLUP, NOPULL, NOPULL, PULLDOWN, -INVALID,};
enum pull_updown uart3_u9700l_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown emmc_u9700l_pullud_normal[] = {PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, NOPULL, -INVALID,};

/******************lowpower pullud****************/

enum pull_updown audio_es305_u9700l_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown spi1_u9700l_pullud_lowpower[] = {PULLUP, NOPULL, NOPULL, PULLDOWN, -INVALID,};
enum pull_updown uart3_u9700l_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown emmc_u9700l_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};

/******************normal drv****************/

enum drive_strength audio_es305_u9700l_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength spi1_u9700l_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength uart3_u9700l_drv_normal[] = {LEVEL2, RESERVE, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength emmc_u9700l_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};

/******************lowpower drv****************/

enum drive_strength audio_es305_u9700l_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength spi1_u9700l_drv_lowpower[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength uart3_u9700l_drv_lowpower[] = {LEVEL2, RESERVE, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength emmc_u9700l_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};

/******************config****************/

struct block_config audio_es305_u9700l_config[] = {
	[NORMAL] = {audio_es305_u9700l_func_normal, audio_es305_u9700l_pullud_normal, audio_es305_u9700l_drv_normal},
	[LOWPOWER] = {audio_es305_u9700l_func_lowpower, audio_es305_u9700l_pullud_lowpower, audio_es305_u9700l_drv_lowpower},
};
struct block_config spi1_u9700l_config[] = {
	[NORMAL] = {spi1_u9700l_func_normal, spi1_u9700l_pullud_normal, spi1_u9700l_drv_normal},
	[LOWPOWER] = {spi1_u9700l_func_lowpower, spi1_u9700l_pullud_lowpower, spi1_u9700l_drv_lowpower},
};
struct block_config uart3_u9700l_config[] = {
	[NORMAL] = {uart3_u9700l_func_normal, uart3_u9700l_pullud_normal, uart3_u9700l_drv_normal},
	[LOWPOWER] = {uart3_u9700l_func_lowpower, uart3_u9700l_pullud_lowpower, uart3_u9700l_drv_lowpower},
};
struct block_config emmc_u9700l_config[] = {
	[NORMAL] = {emmc_u9700l_func_normal, emmc_u9700l_pullud_normal, emmc_u9700l_drv_normal},
	[LOWPOWER] = {emmc_u9700l_func_lowpower, emmc_u9700l_pullud_lowpower, emmc_u9700l_drv_lowpower},
};

struct block_table block_config_phone_u9700l[] = {
     BLOCK_CONFIG("block_i2c0", &block_i2c0_u9700l, i2c0_u9700l_config)
     BLOCK_CONFIG("block_i2c1", &block_i2c1_u9700l, i2c1_u9700l_config)
     BLOCK_CONFIG("block_i2c2", &block_i2c2_u9700l, i2c2_u9700l_config)
     BLOCK_CONFIG("block_i2c3", &block_i2c3_u9700l, i2c3_u9700l_config)
     BLOCK_CONFIG("block_spi0", &block_spi0_u9700l, spi0_u9700l_config)
     BLOCK_CONFIG("block_spi0_cs", &block_spi0_cs_u9700l, spi0_cs_u9700l_config)
     BLOCK_CONFIG("block_uart0", &block_uart0_u9700l, uart0_u9700l_config)
     BLOCK_CONFIG("block_uart1", &block_uart1_u9700l, uart1_u9700l_config)
     BLOCK_CONFIG("block_uart2", &block_uart2_u9700l, uart2_u9700l_config)
     BLOCK_CONFIG("block_uart4", &block_uart4_u9700l, uart4_u9700l_config)
     BLOCK_CONFIG("block_kpc", &block_kpc_u9700l, kpc_u9700l_config)
     BLOCK_CONFIG("block_sd", &block_sd_u9700l, sd_u9700l_config)
     BLOCK_CONFIG("block_nand", &block_nand_u9700l, nand_u9700l_config)
     BLOCK_CONFIG("block_sdio", &block_sdio_u9700l, sdio_u9700l_config)
     BLOCK_CONFIG("block_btpm", &block_btpm_u9700l, btpm_u9700l_config)
     BLOCK_CONFIG("block_btpwr", &block_btpwr_u9700l, btpwr_u9700l_config)
     BLOCK_CONFIG("block_gps_boardcom", &block_gps_boardcom_u9700l, gps_boardcom_u9700l_config)
     BLOCK_CONFIG("block_ts", &block_ts_u9700l, ts_u9700l_config)
     BLOCK_CONFIG("block_lcd", &block_lcd_u9700l, lcd_u9700l_config)
     BLOCK_CONFIG("block_pwm", &block_pwm_u9700l, pwm_u9700l_config)
     BLOCK_CONFIG("block_hdmi", &block_hdmi_u9700l, hdmi_u9700l_config)
     BLOCK_CONFIG("block_wifi", &block_wifi_u9700l, wifi_u9700l_config)
     BLOCK_CONFIG("block_isp_dvp", &block_isp_dvp_u9700l, isp_dvp_u9700l_config)
     BLOCK_CONFIG("block_isp_i2c", &block_isp_i2c_u9700l, isp_i2c_u9700l_config)
     BLOCK_CONFIG("block_isp_reset", &block_isp_reset_u9700l, isp_reset_u9700l_config)
     BLOCK_CONFIG("block_isp", &block_isp_u9700l, isp_u9700l_config)
     BLOCK_CONFIG("block_isp_flash", &block_isp_flash_u9700l, isp_flash_u9700l_config)
     BLOCK_CONFIG("block_charger", &block_charger_u9700l, charger_u9700l_config)
     BLOCK_CONFIG("block_gsensor", &block_gsensor_u9700l, gsensor_u9700l_config)
     BLOCK_CONFIG("block_audio_spk", &block_audio_spk_u9700l, audio_spk_u9700l_config)
     BLOCK_CONFIG("block_audio_eph", &block_audio_eph_u9700l, audio_eph_u9700l_config)
     BLOCK_CONFIG("block_modem", &block_modem_u9700l, modem_u9700l_config)
     BLOCK_CONFIG("block_vbusdrv", &block_vbusdrv_u9700l, vbusdrv_u9700l_config)
     BLOCK_CONFIG("block_gps_spi", &block_gps_spi_u9700l, gps_spi_u9700l_config)
     BLOCK_CONFIG("block_modem_switch", &block_modem_switch_u9700l, modem_switch_u9700l_config)
     BLOCK_CONFIG("block_mcamdvdd", &block_mcamdvdd_u9700l, mcamdvdd_u9700l_config)
     BLOCK_CONFIG("block_usb_switch", &block_usb_switch_u9700l, usb_switch_u9700l_config)
     BLOCK_CONFIG("block_felica", &block_felica_u9700l, felica_u9700l_config)
     BLOCK_CONFIG("block_audio_es305", &block_audio_es305_u9700l, audio_es305_u9700l_config)
     BLOCK_CONFIG("block_spi1", &block_spi1_u9700l, spi1_u9700l_config)
     BLOCK_CONFIG("block_uart3", &block_uart3_u9700l, uart3_u9700l_config)
     BLOCK_CONFIG("block_emmc", &block_emmc_u9700l, emmc_u9700l_config)
     {NULL, NULL, NULL},
};


/******************pins ****************/

struct  iomux_pin *i2c0_u9900_pins[] = {
&gpio_084_cs, &gpio_085_cs, NULL,
};
struct  iomux_pin *i2c1_u9900_pins[] = {
&gpio_086_cs, &gpio_087_cs, NULL,
};
struct  iomux_pin *i2c2_u9900_pins[] = {
&gpio_063_cs, &gpio_064_cs, NULL,
};
struct  iomux_pin *i2c3_u9900_pins[] = {
&gpio_057_cs, &gpio_058_cs, NULL,
};
struct  iomux_pin *spi0_u9900_pins[] = {
&gpio_107_cs, &gpio_108_cs, NULL,
};
struct  iomux_pin *spi0_cs_u9900_pins[] = {
&gpio_109_cs, &gpio_110_cs, &gpio_111_cs, &gpio_112_cs, NULL,
};
struct  iomux_pin *uart0_u9900_pins[] = {
&gpio_119_cs, &gpio_120_cs, NULL,
};
struct  iomux_pin *uart1_u9900_pins[] = {
&gpio_121_cs, &gpio_122_cs, &gpio_123_cs, &gpio_124_cs, NULL,
};
struct  iomux_pin *uart2_u9900_pins[] = {
&gpio_127_cs, &gpio_128_cs, NULL,
};
struct  iomux_pin *uart4_u9900_pins[] = {
&gpio_162_cs, &gpio_163_cs, &gpio_164_cs, &gpio_165_cs, NULL,
};
struct  iomux_pin *kpc_u9900_pins[] = {
&gpio_129_cs, &gpio_130_cs, &gpio_131_cs, &gpio_137_cs, &gpio_138_cs, &gpio_139_cs, NULL,
};
struct  iomux_pin *sd_u9900_pins[] = {
&gpio_088_cs, &gpio_089_cs, &gpio_090_cs, &gpio_091_cs, &gpio_092_cs, &gpio_093_cs, NULL,
};
struct  iomux_pin *nand_u9900_pins[] = {
&gpio_010_cs, &gpio_011_cs, &gpio_012_cs, &gpio_013_cs, &gpio_014_cs, &gpio_015_cs, &gpio_016_cs, &gpio_017_cs, &gpio_018_cs, &gpio_019_cs, &gpio_020_cs, &gpio_021_cs, &gpio_022_cs, &gpio_023_cs, &gpio_024_cs, &gpio_025_cs, &gpio_026_cs, &gpio_028_cs, &gpio_029_cs, &gpio_030_cs, &gpio_031_cs, &gpio_032_cs, &gpio_033_cs, &gpio_034_cs, &gpio_035_cs, NULL,
};
struct  iomux_pin *sdio_u9900_pins[] = {
&gpio_100_cs, &gpio_101_cs, &gpio_102_cs, &gpio_103_cs, &gpio_104_cs, &gpio_105_cs, NULL,
};
struct  iomux_pin *btpm_u9900_pins[] = {
&gpio_166_cs, &gpio_167_cs, NULL,
};
struct  iomux_pin *btpwr_u9900_pins[] = {
&gpio_168_cs, &gpio_169_cs, NULL,
};
struct  iomux_pin *gps_boardcom_u9900_pins[] = {
&gpio_151_cs, &gpio_152_cs, NULL,
};
struct  iomux_pin *ts_u9900_pins[] = {
&gpio_156_cs, &gpio_157_cs, NULL,
};
struct  iomux_pin *lcd_u9900_pins[] = {
&gpio_003_cs, &gpio_043_cs, &gpio_072_cs, &gpio_135_cs, &gpio_136_cs, &gpio_171_cs, NULL,
};
struct  iomux_pin *pwm_u9900_pins[] = {
&gpio_149_cs, &gpio_150_cs, NULL,
};
struct  iomux_pin *hdmi_u9900_pins[] = {
&gpio_038_cs, &gpio_039_cs, &gpio_040_cs, &gpio_041_cs, NULL,
};
struct  iomux_pin *wifi_u9900_pins[] = {
&gpio_002_cs, &gpio_004_cs, NULL,
};
struct  iomux_pin *isp_dvp_u9900_pins[] = {
&gpio_044_cs, &gpio_045_cs, &gpio_046_cs, &gpio_047_cs, &gpio_048_cs, &gpio_049_cs, &gpio_054_cs, NULL,
};
struct  iomux_pin *isp_i2c_u9900_pins[] = {
&gpio_055_cs, &gpio_056_cs, NULL,
};
struct  iomux_pin *isp_reset_u9900_pins[] = {
&gpio_059_cs, &gpio_060_cs, NULL,
};
struct  iomux_pin *isp_u9900_pins[] = {
&gpio_067_cs, &gpio_068_cs, &gpio_069_cs, &gpio_070_cs, &gpio_071_cs, &gpio_075_cs, NULL,
};
struct  iomux_pin *isp_flash_u9900_pins[] = {
&gpio_065_cs, &gpio_066_cs, &gpio_076_cs, NULL,
};
struct  iomux_pin *charger_u9900_pins[] = {
&gpio_005_cs, &gpio_074_cs, NULL,
};
struct  iomux_pin *gsensor_u9900_pins[] = {
&gpio_051_cs, &gpio_148_cs, NULL,
};
struct  iomux_pin *audio_spk_u9900_pins[] = {
&gpio_117_cs, NULL,
};
struct  iomux_pin *audio_eph_u9900_pins[] = {
&gpio_118_cs, NULL,
};
struct  iomux_pin *modem_u9900_pins[] = {
&gpio_094_cs, &gpio_095_cs, &gpio_096_cs, &gpio_097_cs, &gpio_098_cs, &gpio_113_cs, &gpio_114_cs, &gpio_115_cs, NULL,
};
struct  iomux_pin *vbusdrv_u9900_pins[] = {
&gpio_082_cs, NULL,
};
struct  iomux_pin *gps_spi_u9900_pins[] = {
&gpio_154_cs, &gpio_155_cs, &gpio_160_cs, &gpio_161_cs, NULL,
};
struct  iomux_pin *modem_switch_u9900_pins[] = {
&gpio_106_cs, NULL,
};
struct  iomux_pin *mcamdvdd_u9900_pins[] = {
&gpio_073_cs, NULL,
};
struct  iomux_pin *usb_switch_u9900_pins[] = {
&gpio_008_cs, &gpio_009_cs, &gpio_027_cs, &gpio_042_cs, &gpio_052_cs, &gpio_053_cs, &gpio_099_cs, &gpio_174_cs, NULL,
};

/******************IOMUX_BLOCK****************/

IOMUX_BLOCK(block_i2c0_u9900, "block_i2c0_u9900", NORMAL, i2c0_u9900_pins)
IOMUX_BLOCK(block_i2c1_u9900, "block_i2c1_u9900", NORMAL, i2c1_u9900_pins)
IOMUX_BLOCK(block_i2c2_u9900, "block_i2c2_u9900", NORMAL, i2c2_u9900_pins)
IOMUX_BLOCK(block_i2c3_u9900, "block_i2c3_u9900", NORMAL, i2c3_u9900_pins)
IOMUX_BLOCK(block_spi0_u9900, "block_spi0_u9900", NORMAL, spi0_u9900_pins)
IOMUX_BLOCK(block_spi0_cs_u9900, "block_spi0_cs_u9900", NORMAL, spi0_cs_u9900_pins)
IOMUX_BLOCK(block_uart0_u9900, "block_uart0_u9900", NORMAL, uart0_u9900_pins)
IOMUX_BLOCK(block_uart1_u9900, "block_uart1_u9900", NORMAL, uart1_u9900_pins)
IOMUX_BLOCK(block_uart2_u9900, "block_uart2_u9900", NORMAL, uart2_u9900_pins)
IOMUX_BLOCK(block_uart4_u9900, "block_uart4_u9900", NORMAL, uart4_u9900_pins)
IOMUX_BLOCK(block_kpc_u9900, "block_kpc_u9900", NORMAL, kpc_u9900_pins)
IOMUX_BLOCK(block_sd_u9900, "block_sd_u9900", NORMAL, sd_u9900_pins)
IOMUX_BLOCK(block_nand_u9900, "block_nand_u9900", NORMAL, nand_u9900_pins)
IOMUX_BLOCK(block_sdio_u9900, "block_sdio_u9900", NORMAL, sdio_u9900_pins)
IOMUX_BLOCK(block_btpm_u9900, "block_btpm_u9900", NORMAL, btpm_u9900_pins)
IOMUX_BLOCK(block_btpwr_u9900, "block_btpwr_u9900", NORMAL, btpwr_u9900_pins)
IOMUX_BLOCK(block_gps_boardcom_u9900, "block_gps_boardcom_u9900", NORMAL, gps_boardcom_u9900_pins)
IOMUX_BLOCK(block_ts_u9900, "block_ts_u9900", NORMAL, ts_u9900_pins)
IOMUX_BLOCK(block_lcd_u9900, "block_lcd_u9900", NORMAL, lcd_u9900_pins)
IOMUX_BLOCK(block_pwm_u9900, "block_pwm_u9900", NORMAL, pwm_u9900_pins)
IOMUX_BLOCK(block_hdmi_u9900, "block_hdmi_u9900", NORMAL, hdmi_u9900_pins)
IOMUX_BLOCK(block_wifi_u9900, "block_wifi_u9900", NORMAL, wifi_u9900_pins)
IOMUX_BLOCK(block_isp_dvp_u9900, "block_isp_dvp_u9900", NORMAL, isp_dvp_u9900_pins)
IOMUX_BLOCK(block_isp_i2c_u9900, "block_isp_i2c_u9900", NORMAL, isp_i2c_u9900_pins)
IOMUX_BLOCK(block_isp_reset_u9900, "block_isp_reset_u9900", NORMAL, isp_reset_u9900_pins)
IOMUX_BLOCK(block_isp_u9900, "block_isp_u9900", NORMAL, isp_u9900_pins)
IOMUX_BLOCK(block_isp_flash_u9900, "block_isp_flash_u9900", NORMAL, isp_flash_u9900_pins)
IOMUX_BLOCK(block_charger_u9900, "block_charger_u9900", NORMAL, charger_u9900_pins)
IOMUX_BLOCK(block_gsensor_u9900, "block_gsensor_u9900", NORMAL, gsensor_u9900_pins)
IOMUX_BLOCK(block_audio_spk_u9900, "block_audio_spk_u9900", NORMAL, audio_spk_u9900_pins)
IOMUX_BLOCK(block_audio_eph_u9900, "block_audio_eph_u9900", NORMAL, audio_eph_u9900_pins)
IOMUX_BLOCK(block_modem_u9900, "block_modem_u9900", NORMAL, modem_u9900_pins)
IOMUX_BLOCK(block_vbusdrv_u9900, "block_vbusdrv_u9900", NORMAL, vbusdrv_u9900_pins)
IOMUX_BLOCK(block_gps_spi_u9900, "block_gps_spi_u9900", NORMAL, gps_spi_u9900_pins)
IOMUX_BLOCK(block_modem_switch_u9900, "block_modem_switch_u9900", NORMAL, modem_switch_u9900_pins)
IOMUX_BLOCK(block_mcamdvdd_u9900, "block_mcamdvdd_u9900", NORMAL, mcamdvdd_u9900_pins)
IOMUX_BLOCK(block_usb_switch_u9900, "block_usb_switch_u9900", NORMAL, usb_switch_u9900_pins)

/******************normal func ****************/

enum lowlayer_func i2c0_u9900_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func i2c1_u9900_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func i2c2_u9900_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func i2c3_u9900_func_normal[] = {FUNC2, FUNC2, -INVALID,};
enum lowlayer_func spi0_u9900_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func spi0_cs_u9900_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func uart0_u9900_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func uart1_u9900_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func uart2_u9900_func_normal[] = {FUNC2, FUNC2, -INVALID,};
enum lowlayer_func uart4_u9900_func_normal[] = {FUNC2, FUNC2, FUNC2, FUNC2, -INVALID,};
enum lowlayer_func kpc_u9900_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func sd_u9900_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func nand_u9900_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func sdio_u9900_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func btpm_u9900_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func btpwr_u9900_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func gps_boardcom_u9900_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func ts_u9900_func_normal[] = {RESERVE, RESERVE, -INVALID,};
enum lowlayer_func lcd_u9900_func_normal[] = {FUNC0, FUNC1, FUNC2, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func pwm_u9900_func_normal[] = {FUNC0, FUNC1, -INVALID,};
enum lowlayer_func hdmi_u9900_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func wifi_u9900_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_dvp_u9900_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_i2c_u9900_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_reset_u9900_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_u9900_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_flash_u9900_func_normal[] = {FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func charger_u9900_func_normal[] = {FUNC0, FUNC1, -INVALID,};
enum lowlayer_func gsensor_u9900_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func audio_spk_u9900_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func audio_eph_u9900_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func modem_u9900_func_normal[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func vbusdrv_u9900_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func gps_spi_u9900_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func modem_switch_u9900_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func mcamdvdd_u9900_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func usb_switch_u9900_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, RESERVE, RESERVE, -INVALID,};

/******************lowpower func****************/

enum lowlayer_func i2c0_u9900_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func i2c1_u9900_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func i2c2_u9900_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func i2c3_u9900_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func spi0_u9900_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func spi0_cs_u9900_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart0_u9900_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart1_u9900_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart2_u9900_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart4_u9900_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func kpc_u9900_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func sd_u9900_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func nand_u9900_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func sdio_u9900_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func btpm_u9900_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func btpwr_u9900_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func gps_boardcom_u9900_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func ts_u9900_func_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum lowlayer_func lcd_u9900_func_lowpower[] = {FUNC0, FUNC1, FUNC2, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func pwm_u9900_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func hdmi_u9900_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func wifi_u9900_func_lowpower[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_dvp_u9900_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func isp_i2c_u9900_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func isp_reset_u9900_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func isp_u9900_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC0, -INVALID,};
enum lowlayer_func isp_flash_u9900_func_lowpower[] = {FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func charger_u9900_func_lowpower[] = {FUNC0, FUNC1, -INVALID,};
enum lowlayer_func gsensor_u9900_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func audio_spk_u9900_func_lowpower[] = {FUNC1, -INVALID,};
enum lowlayer_func audio_eph_u9900_func_lowpower[] = {FUNC1, -INVALID,};
enum lowlayer_func modem_u9900_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func vbusdrv_u9900_func_lowpower[] = {FUNC0, -INVALID,};
enum lowlayer_func gps_spi_u9900_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func modem_switch_u9900_func_lowpower[] = {FUNC1, -INVALID,};
enum lowlayer_func mcamdvdd_u9900_func_lowpower[] = {FUNC1, -INVALID,};
enum lowlayer_func usb_switch_u9900_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};

/******************normal pullud****************/

enum pull_updown i2c0_u9900_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c1_u9900_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c2_u9900_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c3_u9900_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown spi0_u9900_pullud_normal[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown spi0_cs_u9900_pullud_normal[] = {PULLDOWN, PULLDOWN, NOPULL, NOPULL, -INVALID,};
enum pull_updown uart0_u9900_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown uart1_u9900_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown uart2_u9900_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown uart4_u9900_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown kpc_u9900_pullud_normal[] = {PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, -INVALID,};
enum pull_updown sd_u9900_pullud_normal[] = {NOPULL, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, -INVALID,};
enum pull_updown nand_u9900_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown sdio_u9900_pullud_normal[] = {NOPULL, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, -INVALID,};
enum pull_updown btpm_u9900_pullud_normal[] = {PULLUP, NOPULL, -INVALID,};
enum pull_updown btpwr_u9900_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown gps_boardcom_u9900_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown ts_u9900_pullud_normal[] = {NOPULL, PULLUP, -INVALID,};
enum pull_updown lcd_u9900_pullud_normal[] = {NOPULL, NOPULL, PULLDOWN, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown pwm_u9900_pullud_normal[] = {NOPULL, PULLDOWN, -INVALID,};
enum pull_updown hdmi_u9900_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown wifi_u9900_pullud_normal[] = {NOPULL, PULLDOWN, -INVALID,};
enum pull_updown isp_dvp_u9900_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_i2c_u9900_pullud_normal[] = {PULLUP, PULLUP, -INVALID,};
enum pull_updown isp_reset_u9900_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_u9900_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_flash_u9900_pullud_normal[] = {NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown charger_u9900_pullud_normal[] = {PULLUP, NOPULL, -INVALID,};
enum pull_updown gsensor_u9900_pullud_normal[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown audio_spk_u9900_pullud_normal[] = {NOPULL, -INVALID,};
enum pull_updown audio_eph_u9900_pullud_normal[] = {NOPULL, -INVALID,};
enum pull_updown modem_u9900_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown vbusdrv_u9900_pullud_normal[] = {NOPULL, -INVALID,};
enum pull_updown gps_spi_u9900_pullud_normal[] = {NOPULL, NOPULL, NOPULL, PULLDOWN, -INVALID,};
enum pull_updown modem_switch_u9900_pullud_normal[] = {NOPULL, -INVALID,};
enum pull_updown mcamdvdd_u9900_pullud_normal[] = {NOPULL, -INVALID,};
enum pull_updown usb_switch_u9900_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, RESERVE, RESERVE, -INVALID,};

/******************lowpower pullud****************/

enum pull_updown i2c0_u9900_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c1_u9900_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c2_u9900_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c3_u9900_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown spi0_u9900_pullud_lowpower[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown spi0_cs_u9900_pullud_lowpower[] = {PULLDOWN, PULLDOWN, NOPULL, NOPULL, -INVALID,};
enum pull_updown uart0_u9900_pullud_lowpower[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown uart1_u9900_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown uart2_u9900_pullud_lowpower[] = {PULLDOWN, NOPULL, -INVALID,};
enum pull_updown uart4_u9900_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown kpc_u9900_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLUP, PULLUP, PULLDOWN, -INVALID,};
enum pull_updown sd_u9900_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown nand_u9900_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown sdio_u9900_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown btpm_u9900_pullud_lowpower[] = {PULLDOWN, NOPULL, -INVALID,};
enum pull_updown btpwr_u9900_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown gps_boardcom_u9900_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown ts_u9900_pullud_lowpower[] = {NOPULL, PULLUP, -INVALID,};
enum pull_updown lcd_u9900_pullud_lowpower[] = {NOPULL, PULLDOWN, PULLDOWN, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown pwm_u9900_pullud_lowpower[] = {NOPULL, PULLDOWN, -INVALID,};
enum pull_updown hdmi_u9900_pullud_lowpower[] = {NOPULL, NOPULL, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown wifi_u9900_pullud_lowpower[] = {NOPULL, PULLDOWN, -INVALID,};
enum pull_updown isp_dvp_u9900_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown isp_i2c_u9900_pullud_lowpower[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown isp_reset_u9900_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_u9900_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_flash_u9900_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown charger_u9900_pullud_lowpower[] = {PULLUP, NOPULL, -INVALID,};
enum pull_updown gsensor_u9900_pullud_lowpower[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown audio_spk_u9900_pullud_lowpower[] = {NOPULL, -INVALID,};
enum pull_updown audio_eph_u9900_pullud_lowpower[] = {NOPULL, -INVALID,};
enum pull_updown modem_u9900_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, NOPULL, PULLDOWN, PULLDOWN, NOPULL, NOPULL, -INVALID,};
enum pull_updown vbusdrv_u9900_pullud_lowpower[] = {NOPULL, -INVALID,};
enum pull_updown gps_spi_u9900_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown modem_switch_u9900_pullud_lowpower[] = {NOPULL, -INVALID,};
enum pull_updown mcamdvdd_u9900_pullud_lowpower[] = {NOPULL, -INVALID,};
enum pull_updown usb_switch_u9900_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, NOPULL, -INVALID,};

/******************normal drv****************/

enum drive_strength i2c0_u9900_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c1_u9900_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c2_u9900_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c3_u9900_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength spi0_u9900_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength spi0_cs_u9900_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength uart0_u9900_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength uart1_u9900_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength uart2_u9900_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength uart4_u9900_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength kpc_u9900_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength sd_u9900_drv_normal[] = {LEVEL2, LEVEL3, LEVEL3, LEVEL3, LEVEL3, LEVEL3, -INVALID,};
enum drive_strength nand_u9900_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, RESERVE, RESERVE, RESERVE, RESERVE, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength sdio_u9900_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength btpm_u9900_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength btpwr_u9900_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength gps_boardcom_u9900_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength ts_u9900_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength lcd_u9900_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength pwm_u9900_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength hdmi_u9900_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength wifi_u9900_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_dvp_u9900_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_i2c_u9900_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_reset_u9900_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_u9900_drv_normal[] = {LEVEL0, LEVEL0, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_flash_u9900_drv_normal[] = {RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength charger_u9900_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength gsensor_u9900_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength audio_spk_u9900_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength audio_eph_u9900_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength modem_u9900_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength vbusdrv_u9900_drv_normal[] = {LEVEL2, -INVALID,};
enum drive_strength gps_spi_u9900_drv_normal[] = {LEVEL2, RESERVE, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength modem_switch_u9900_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength mcamdvdd_u9900_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength usb_switch_u9900_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};

/******************lowpower drv****************/

enum drive_strength i2c0_u9900_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c1_u9900_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c2_u9900_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c3_u9900_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength spi0_u9900_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength spi0_cs_u9900_drv_lowpower[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength uart0_u9900_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength uart1_u9900_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength uart2_u9900_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength uart4_u9900_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength kpc_u9900_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength sd_u9900_drv_lowpower[] = {LEVEL2, LEVEL3, LEVEL3, LEVEL3, LEVEL3, LEVEL3, -INVALID,};
enum drive_strength nand_u9900_drv_lowpower[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, RESERVE, RESERVE, RESERVE, RESERVE, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, -INVALID,};
enum drive_strength sdio_u9900_drv_lowpower[] = {LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, -INVALID,};
enum drive_strength btpm_u9900_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength btpwr_u9900_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength gps_boardcom_u9900_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength ts_u9900_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength lcd_u9900_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength pwm_u9900_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength hdmi_u9900_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength wifi_u9900_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_dvp_u9900_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_i2c_u9900_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_reset_u9900_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_u9900_drv_lowpower[] = {LEVEL0, LEVEL0, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_flash_u9900_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength charger_u9900_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength gsensor_u9900_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength audio_spk_u9900_drv_lowpower[] = {RESERVE, -INVALID,};
enum drive_strength audio_eph_u9900_drv_lowpower[] = {RESERVE, -INVALID,};
enum drive_strength modem_u9900_drv_lowpower[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength vbusdrv_u9900_drv_lowpower[] = {LEVEL2, -INVALID,};
enum drive_strength gps_spi_u9900_drv_lowpower[] = {LEVEL2, RESERVE, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength modem_switch_u9900_drv_lowpower[] = {RESERVE, -INVALID,};
enum drive_strength mcamdvdd_u9900_drv_lowpower[] = {RESERVE, -INVALID,};
enum drive_strength usb_switch_u9900_drv_lowpower[] = {LEVEL2, LEVEL2, LEVEL2, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};

/******************config****************/

struct block_config i2c0_u9900_config[] = {
	[NORMAL] = {i2c0_u9900_func_normal, i2c0_u9900_pullud_normal, i2c0_u9900_drv_normal},
	[LOWPOWER] = {i2c0_u9900_func_lowpower, i2c0_u9900_pullud_lowpower, i2c0_u9900_drv_lowpower},
};
struct block_config i2c1_u9900_config[] = {
	[NORMAL] = {i2c1_u9900_func_normal, i2c1_u9900_pullud_normal, i2c1_u9900_drv_normal},
	[LOWPOWER] = {i2c1_u9900_func_lowpower, i2c1_u9900_pullud_lowpower, i2c1_u9900_drv_lowpower},
};
struct block_config i2c2_u9900_config[] = {
	[NORMAL] = {i2c2_u9900_func_normal, i2c2_u9900_pullud_normal, i2c2_u9900_drv_normal},
	[LOWPOWER] = {i2c2_u9900_func_lowpower, i2c2_u9900_pullud_lowpower, i2c2_u9900_drv_lowpower},
};
struct block_config i2c3_u9900_config[] = {
	[NORMAL] = {i2c3_u9900_func_normal, i2c3_u9900_pullud_normal, i2c3_u9900_drv_normal},
	[LOWPOWER] = {i2c3_u9900_func_lowpower, i2c3_u9900_pullud_lowpower, i2c3_u9900_drv_lowpower},
};
struct block_config spi0_u9900_config[] = {
	[NORMAL] = {spi0_u9900_func_normal, spi0_u9900_pullud_normal, spi0_u9900_drv_normal},
	[LOWPOWER] = {spi0_u9900_func_lowpower, spi0_u9900_pullud_lowpower, spi0_u9900_drv_lowpower},
};
struct block_config spi0_cs_u9900_config[] = {
	[NORMAL] = {spi0_cs_u9900_func_normal, spi0_cs_u9900_pullud_normal, spi0_cs_u9900_drv_normal},
	[LOWPOWER] = {spi0_cs_u9900_func_lowpower, spi0_cs_u9900_pullud_lowpower, spi0_cs_u9900_drv_lowpower},
};
struct block_config uart0_u9900_config[] = {
	[NORMAL] = {uart0_u9900_func_normal, uart0_u9900_pullud_normal, uart0_u9900_drv_normal},
	[LOWPOWER] = {uart0_u9900_func_lowpower, uart0_u9900_pullud_lowpower, uart0_u9900_drv_lowpower},
};
struct block_config uart1_u9900_config[] = {
	[NORMAL] = {uart1_u9900_func_normal, uart1_u9900_pullud_normal, uart1_u9900_drv_normal},
	[LOWPOWER] = {uart1_u9900_func_lowpower, uart1_u9900_pullud_lowpower, uart1_u9900_drv_lowpower},
};
struct block_config uart2_u9900_config[] = {
	[NORMAL] = {uart2_u9900_func_normal, uart2_u9900_pullud_normal, uart2_u9900_drv_normal},
	[LOWPOWER] = {uart2_u9900_func_lowpower, uart2_u9900_pullud_lowpower, uart2_u9900_drv_lowpower},
};
struct block_config uart4_u9900_config[] = {
	[NORMAL] = {uart4_u9900_func_normal, uart4_u9900_pullud_normal, uart4_u9900_drv_normal},
	[LOWPOWER] = {uart4_u9900_func_lowpower, uart4_u9900_pullud_lowpower, uart4_u9900_drv_lowpower},
};
struct block_config kpc_u9900_config[] = {
	[NORMAL] = {kpc_u9900_func_normal, kpc_u9900_pullud_normal, kpc_u9900_drv_normal},
	[LOWPOWER] = {kpc_u9900_func_lowpower, kpc_u9900_pullud_lowpower, kpc_u9900_drv_lowpower},
};
struct block_config sd_u9900_config[] = {
	[NORMAL] = {sd_u9900_func_normal, sd_u9900_pullud_normal, sd_u9900_drv_normal},
	[LOWPOWER] = {sd_u9900_func_lowpower, sd_u9900_pullud_lowpower, sd_u9900_drv_lowpower},
};
struct block_config nand_u9900_config[] = {
	[NORMAL] = {nand_u9900_func_normal, nand_u9900_pullud_normal, nand_u9900_drv_normal},
	[LOWPOWER] = {nand_u9900_func_lowpower, nand_u9900_pullud_lowpower, nand_u9900_drv_lowpower},
};
struct block_config sdio_u9900_config[] = {
	[NORMAL] = {sdio_u9900_func_normal, sdio_u9900_pullud_normal, sdio_u9900_drv_normal},
	[LOWPOWER] = {sdio_u9900_func_lowpower, sdio_u9900_pullud_lowpower, sdio_u9900_drv_lowpower},
};
struct block_config btpm_u9900_config[] = {
	[NORMAL] = {btpm_u9900_func_normal, btpm_u9900_pullud_normal, btpm_u9900_drv_normal},
	[LOWPOWER] = {btpm_u9900_func_lowpower, btpm_u9900_pullud_lowpower, btpm_u9900_drv_lowpower},
};
struct block_config btpwr_u9900_config[] = {
	[NORMAL] = {btpwr_u9900_func_normal, btpwr_u9900_pullud_normal, btpwr_u9900_drv_normal},
	[LOWPOWER] = {btpwr_u9900_func_lowpower, btpwr_u9900_pullud_lowpower, btpwr_u9900_drv_lowpower},
};
struct block_config gps_boardcom_u9900_config[] = {
	[NORMAL] = {gps_boardcom_u9900_func_normal, gps_boardcom_u9900_pullud_normal, gps_boardcom_u9900_drv_normal},
	[LOWPOWER] = {gps_boardcom_u9900_func_lowpower, gps_boardcom_u9900_pullud_lowpower, gps_boardcom_u9900_drv_lowpower},
};
struct block_config ts_u9900_config[] = {
	[NORMAL] = {ts_u9900_func_normal, ts_u9900_pullud_normal, ts_u9900_drv_normal},
	[LOWPOWER] = {ts_u9900_func_lowpower, ts_u9900_pullud_lowpower, ts_u9900_drv_lowpower},
};
struct block_config lcd_u9900_config[] = {
	[NORMAL] = {lcd_u9900_func_normal, lcd_u9900_pullud_normal, lcd_u9900_drv_normal},
	[LOWPOWER] = {lcd_u9900_func_lowpower, lcd_u9900_pullud_lowpower, lcd_u9900_drv_lowpower},
};
struct block_config pwm_u9900_config[] = {
	[NORMAL] = {pwm_u9900_func_normal, pwm_u9900_pullud_normal, pwm_u9900_drv_normal},
	[LOWPOWER] = {pwm_u9900_func_lowpower, pwm_u9900_pullud_lowpower, pwm_u9900_drv_lowpower},
};
struct block_config hdmi_u9900_config[] = {
	[NORMAL] = {hdmi_u9900_func_normal, hdmi_u9900_pullud_normal, hdmi_u9900_drv_normal},
	[LOWPOWER] = {hdmi_u9900_func_lowpower, hdmi_u9900_pullud_lowpower, hdmi_u9900_drv_lowpower},
};
struct block_config wifi_u9900_config[] = {
	[NORMAL] = {wifi_u9900_func_normal, wifi_u9900_pullud_normal, wifi_u9900_drv_normal},
	[LOWPOWER] = {wifi_u9900_func_lowpower, wifi_u9900_pullud_lowpower, wifi_u9900_drv_lowpower},
};
struct block_config isp_dvp_u9900_config[] = {
	[NORMAL] = {isp_dvp_u9900_func_normal, isp_dvp_u9900_pullud_normal, isp_dvp_u9900_drv_normal},
	[LOWPOWER] = {isp_dvp_u9900_func_lowpower, isp_dvp_u9900_pullud_lowpower, isp_dvp_u9900_drv_lowpower},
};
struct block_config isp_i2c_u9900_config[] = {
	[NORMAL] = {isp_i2c_u9900_func_normal, isp_i2c_u9900_pullud_normal, isp_i2c_u9900_drv_normal},
	[LOWPOWER] = {isp_i2c_u9900_func_lowpower, isp_i2c_u9900_pullud_lowpower, isp_i2c_u9900_drv_lowpower},
};
struct block_config isp_reset_u9900_config[] = {
	[NORMAL] = {isp_reset_u9900_func_normal, isp_reset_u9900_pullud_normal, isp_reset_u9900_drv_normal},
	[LOWPOWER] = {isp_reset_u9900_func_lowpower, isp_reset_u9900_pullud_lowpower, isp_reset_u9900_drv_lowpower},
};
struct block_config isp_u9900_config[] = {
	[NORMAL] = {isp_u9900_func_normal, isp_u9900_pullud_normal, isp_u9900_drv_normal},
	[LOWPOWER] = {isp_u9900_func_lowpower, isp_u9900_pullud_lowpower, isp_u9900_drv_lowpower},
};
struct block_config isp_flash_u9900_config[] = {
	[NORMAL] = {isp_flash_u9900_func_normal, isp_flash_u9900_pullud_normal, isp_flash_u9900_drv_normal},
	[LOWPOWER] = {isp_flash_u9900_func_lowpower, isp_flash_u9900_pullud_lowpower, isp_flash_u9900_drv_lowpower},
};
struct block_config charger_u9900_config[] = {
	[NORMAL] = {charger_u9900_func_normal, charger_u9900_pullud_normal, charger_u9900_drv_normal},
	[LOWPOWER] = {charger_u9900_func_lowpower, charger_u9900_pullud_lowpower, charger_u9900_drv_lowpower},
};
struct block_config gsensor_u9900_config[] = {
	[NORMAL] = {gsensor_u9900_func_normal, gsensor_u9900_pullud_normal, gsensor_u9900_drv_normal},
	[LOWPOWER] = {gsensor_u9900_func_lowpower, gsensor_u9900_pullud_lowpower, gsensor_u9900_drv_lowpower},
};
struct block_config audio_spk_u9900_config[] = {
	[NORMAL] = {audio_spk_u9900_func_normal, audio_spk_u9900_pullud_normal, audio_spk_u9900_drv_normal},
	[LOWPOWER] = {audio_spk_u9900_func_lowpower, audio_spk_u9900_pullud_lowpower, audio_spk_u9900_drv_lowpower},
};
struct block_config audio_eph_u9900_config[] = {
	[NORMAL] = {audio_eph_u9900_func_normal, audio_eph_u9900_pullud_normal, audio_eph_u9900_drv_normal},
	[LOWPOWER] = {audio_eph_u9900_func_lowpower, audio_eph_u9900_pullud_lowpower, audio_eph_u9900_drv_lowpower},
};
struct block_config modem_u9900_config[] = {
	[NORMAL] = {modem_u9900_func_normal, modem_u9900_pullud_normal, modem_u9900_drv_normal},
	[LOWPOWER] = {modem_u9900_func_lowpower, modem_u9900_pullud_lowpower, modem_u9900_drv_lowpower},
};
struct block_config vbusdrv_u9900_config[] = {
	[NORMAL] = {vbusdrv_u9900_func_normal, vbusdrv_u9900_pullud_normal, vbusdrv_u9900_drv_normal},
	[LOWPOWER] = {vbusdrv_u9900_func_lowpower, vbusdrv_u9900_pullud_lowpower, vbusdrv_u9900_drv_lowpower},
};
struct block_config gps_spi_u9900_config[] = {
	[NORMAL] = {gps_spi_u9900_func_normal, gps_spi_u9900_pullud_normal, gps_spi_u9900_drv_normal},
	[LOWPOWER] = {gps_spi_u9900_func_lowpower, gps_spi_u9900_pullud_lowpower, gps_spi_u9900_drv_lowpower},
};
struct block_config modem_switch_u9900_config[] = {
	[NORMAL] = {modem_switch_u9900_func_normal, modem_switch_u9900_pullud_normal, modem_switch_u9900_drv_normal},
	[LOWPOWER] = {modem_switch_u9900_func_lowpower, modem_switch_u9900_pullud_lowpower, modem_switch_u9900_drv_lowpower},
};
struct block_config mcamdvdd_u9900_config[] = {
	[NORMAL] = {mcamdvdd_u9900_func_normal, mcamdvdd_u9900_pullud_normal, mcamdvdd_u9900_drv_normal},
	[LOWPOWER] = {mcamdvdd_u9900_func_lowpower, mcamdvdd_u9900_pullud_lowpower, mcamdvdd_u9900_drv_lowpower},
};
struct block_config usb_switch_u9900_config[] = {
	[NORMAL] = {usb_switch_u9900_func_normal, usb_switch_u9900_pullud_normal, usb_switch_u9900_drv_normal},
	[LOWPOWER] = {usb_switch_u9900_func_lowpower, usb_switch_u9900_pullud_lowpower, usb_switch_u9900_drv_lowpower},
};


/******************pins ****************/

struct  iomux_pin *audio_es305_u9900_pins[] = {
&gpio_127_cs, &gpio_128_cs, NULL,
};
struct  iomux_pin *spi1_u9900_pins[] = {
&gpio_113_cs, &gpio_114_cs, &gpio_115_cs, &gpio_116_cs, NULL,
};
struct  iomux_pin *uart3_u9900_pins[] = {
&gpio_154_cs, &gpio_155_cs, &gpio_160_cs, &gpio_161_cs, NULL,
};
struct  iomux_pin *emmc_u9900_pins[] = {
&gpio_028_cs, &gpio_029_cs, &gpio_030_cs, &gpio_031_cs, &gpio_032_cs, &gpio_033_cs, &gpio_034_cs, &gpio_035_cs, &gpio_036_cs, &gpio_037_cs, NULL,
};

/******************IOMUX_BLOCK****************/

IOMUX_BLOCK(block_audio_es305_u9900, "block_audio_es305_u9900", NORMAL, audio_es305_u9900_pins)
IOMUX_BLOCK(block_spi1_u9900, "block_spi1_u9900", NORMAL, spi1_u9900_pins)
IOMUX_BLOCK(block_uart3_u9900, "block_uart3_u9900", NORMAL, uart3_u9900_pins)
IOMUX_BLOCK(block_emmc_u9900, "block_emmc_u9900", NORMAL, emmc_u9900_pins)

/******************normal func ****************/

enum lowlayer_func audio_es305_u9900_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func spi1_u9900_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func uart3_u9900_func_normal[] = {FUNC2, FUNC2, FUNC2, FUNC2, -INVALID,};
enum lowlayer_func emmc_u9900_func_normal[] = {FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, -INVALID,};

/******************lowpower func****************/

enum lowlayer_func audio_es305_u9900_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func spi1_u9900_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart3_u9900_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func emmc_u9900_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC0, FUNC0, -INVALID,};

/******************normal pullud****************/

enum pull_updown audio_es305_u9900_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown spi1_u9900_pullud_normal[] = {PULLUP, NOPULL, NOPULL, PULLDOWN, -INVALID,};
enum pull_updown uart3_u9900_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown emmc_u9900_pullud_normal[] = {PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, NOPULL, -INVALID,};

/******************lowpower pullud****************/

enum pull_updown audio_es305_u9900_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown spi1_u9900_pullud_lowpower[] = {PULLUP, NOPULL, NOPULL, PULLDOWN, -INVALID,};
enum pull_updown uart3_u9900_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown emmc_u9900_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};

/******************normal drv****************/

enum drive_strength audio_es305_u9900_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength spi1_u9900_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength uart3_u9900_drv_normal[] = {LEVEL2, RESERVE, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength emmc_u9900_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};

/******************lowpower drv****************/

enum drive_strength audio_es305_u9900_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength spi1_u9900_drv_lowpower[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength uart3_u9900_drv_lowpower[] = {LEVEL2, RESERVE, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength emmc_u9900_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};

/******************config****************/

struct block_config audio_es305_u9900_config[] = {
	[NORMAL] = {audio_es305_u9900_func_normal, audio_es305_u9900_pullud_normal, audio_es305_u9900_drv_normal},
	[LOWPOWER] = {audio_es305_u9900_func_lowpower, audio_es305_u9900_pullud_lowpower, audio_es305_u9900_drv_lowpower},
};
struct block_config spi1_u9900_config[] = {
	[NORMAL] = {spi1_u9900_func_normal, spi1_u9900_pullud_normal, spi1_u9900_drv_normal},
	[LOWPOWER] = {spi1_u9900_func_lowpower, spi1_u9900_pullud_lowpower, spi1_u9900_drv_lowpower},
};
struct block_config uart3_u9900_config[] = {
	[NORMAL] = {uart3_u9900_func_normal, uart3_u9900_pullud_normal, uart3_u9900_drv_normal},
	[LOWPOWER] = {uart3_u9900_func_lowpower, uart3_u9900_pullud_lowpower, uart3_u9900_drv_lowpower},
};
struct block_config emmc_u9900_config[] = {
	[NORMAL] = {emmc_u9900_func_normal, emmc_u9900_pullud_normal, emmc_u9900_drv_normal},
	[LOWPOWER] = {emmc_u9900_func_lowpower, emmc_u9900_pullud_lowpower, emmc_u9900_drv_lowpower},
};

struct block_table block_config_phone_u9900[] = {
     BLOCK_CONFIG("block_i2c0", &block_i2c0_u9900, i2c0_u9900_config)
     BLOCK_CONFIG("block_i2c1", &block_i2c1_u9900, i2c1_u9900_config)
     BLOCK_CONFIG("block_i2c2", &block_i2c2_u9900, i2c2_u9900_config)
     BLOCK_CONFIG("block_i2c3", &block_i2c3_u9900, i2c3_u9900_config)
     BLOCK_CONFIG("block_spi0", &block_spi0_u9900, spi0_u9900_config)
     BLOCK_CONFIG("block_spi0_cs", &block_spi0_cs_u9900, spi0_cs_u9900_config)
     BLOCK_CONFIG("block_uart0", &block_uart0_u9900, uart0_u9900_config)
     BLOCK_CONFIG("block_uart1", &block_uart1_u9900, uart1_u9900_config)
     BLOCK_CONFIG("block_uart2", &block_uart2_u9900, uart2_u9900_config)
     BLOCK_CONFIG("block_uart4", &block_uart4_u9900, uart4_u9900_config)
     BLOCK_CONFIG("block_kpc", &block_kpc_u9900, kpc_u9900_config)
     BLOCK_CONFIG("block_sd", &block_sd_u9900, sd_u9900_config)
     BLOCK_CONFIG("block_nand", &block_nand_u9900, nand_u9900_config)
     BLOCK_CONFIG("block_sdio", &block_sdio_u9900, sdio_u9900_config)
     BLOCK_CONFIG("block_btpm", &block_btpm_u9900, btpm_u9900_config)
     BLOCK_CONFIG("block_btpwr", &block_btpwr_u9900, btpwr_u9900_config)
     BLOCK_CONFIG("block_gps_boardcom", &block_gps_boardcom_u9900, gps_boardcom_u9900_config)
     BLOCK_CONFIG("block_ts", &block_ts_u9900, ts_u9900_config)
     BLOCK_CONFIG("block_lcd", &block_lcd_u9900, lcd_u9900_config)
     BLOCK_CONFIG("block_pwm", &block_pwm_u9900, pwm_u9900_config)
     BLOCK_CONFIG("block_hdmi", &block_hdmi_u9900, hdmi_u9900_config)
     BLOCK_CONFIG("block_wifi", &block_wifi_u9900, wifi_u9900_config)
     BLOCK_CONFIG("block_isp_dvp", &block_isp_dvp_u9900, isp_dvp_u9900_config)
     BLOCK_CONFIG("block_isp_i2c", &block_isp_i2c_u9900, isp_i2c_u9900_config)
     BLOCK_CONFIG("block_isp_reset", &block_isp_reset_u9900, isp_reset_u9900_config)
     BLOCK_CONFIG("block_isp", &block_isp_u9900, isp_u9900_config)
     BLOCK_CONFIG("block_isp_flash", &block_isp_flash_u9900, isp_flash_u9900_config)
     BLOCK_CONFIG("block_charger", &block_charger_u9900, charger_u9900_config)
     BLOCK_CONFIG("block_gsensor", &block_gsensor_u9900, gsensor_u9900_config)
     BLOCK_CONFIG("block_audio_spk", &block_audio_spk_u9900, audio_spk_u9900_config)
     BLOCK_CONFIG("block_audio_eph", &block_audio_eph_u9900, audio_eph_u9900_config)
     BLOCK_CONFIG("block_modem", &block_modem_u9900, modem_u9900_config)
     BLOCK_CONFIG("block_vbusdrv", &block_vbusdrv_u9900, vbusdrv_u9900_config)
     BLOCK_CONFIG("block_gps_spi", &block_gps_spi_u9900, gps_spi_u9900_config)
     BLOCK_CONFIG("block_modem_switch", &block_modem_switch_u9900, modem_switch_u9900_config)
     BLOCK_CONFIG("block_mcamdvdd", &block_mcamdvdd_u9900, mcamdvdd_u9900_config)
     BLOCK_CONFIG("block_usb_switch", &block_usb_switch_u9900, usb_switch_u9900_config)
     BLOCK_CONFIG("block_audio_es305", &block_audio_es305_u9900, audio_es305_u9900_config)
     BLOCK_CONFIG("block_spi1", &block_spi1_u9900, spi1_u9900_config)
     BLOCK_CONFIG("block_uart3", &block_uart3_u9900, uart3_u9900_config)
     BLOCK_CONFIG("block_emmc", &block_emmc_u9900, emmc_u9900_config)
     {NULL, NULL, NULL},
};


/******************pins ****************/

struct  iomux_pin *i2c0_u9701l_pins[] = {
&gpio_084_cs, &gpio_085_cs, NULL,
};
struct  iomux_pin *i2c1_u9701l_pins[] = {
&gpio_086_cs, &gpio_087_cs, NULL,
};
struct  iomux_pin *i2c2_u9701l_pins[] = {
&gpio_063_cs, &gpio_064_cs, NULL,
};
struct  iomux_pin *i2c3_u9701l_pins[] = {
&gpio_057_cs, &gpio_058_cs, NULL,
};
struct  iomux_pin *spi0_u9701l_pins[] = {
NULL,
};
struct  iomux_pin *spi0_cs_u9701l_pins[] = {
&gpio_110_cs, &gpio_111_cs, &gpio_112_cs, NULL,
};
struct  iomux_pin *uart0_u9701l_pins[] = {
&gpio_119_cs, &gpio_120_cs, NULL,
};
struct  iomux_pin *uart1_u9701l_pins[] = {
&gpio_121_cs, &gpio_122_cs, &gpio_123_cs, &gpio_124_cs, NULL,
};
struct  iomux_pin *uart2_u9701l_pins[] = {
&gpio_127_cs, &gpio_128_cs, NULL,
};
struct  iomux_pin *uart4_u9701l_pins[] = {
&gpio_162_cs, &gpio_163_cs, &gpio_164_cs, &gpio_165_cs, NULL,
};
struct  iomux_pin *kpc_u9701l_pins[] = {
&gpio_131_cs, &gpio_137_cs, &gpio_138_cs, NULL,
};
struct  iomux_pin *sd_u9701l_pins[] = {
&gpio_088_cs, &gpio_089_cs, &gpio_090_cs, &gpio_091_cs, &gpio_092_cs, &gpio_093_cs, NULL,
};
struct  iomux_pin *nand_u9701l_pins[] = {
&gpio_009_cs, &gpio_028_cs, &gpio_029_cs, &gpio_030_cs, &gpio_031_cs, &gpio_032_cs, &gpio_033_cs, &gpio_034_cs, &gpio_035_cs, NULL,
};
struct  iomux_pin *sdio_u9701l_pins[] = {
&gpio_100_cs, &gpio_101_cs, &gpio_102_cs, &gpio_103_cs, &gpio_104_cs, &gpio_105_cs, NULL,
};
struct  iomux_pin *btpm_u9701l_pins[] = {
&gpio_166_cs, &gpio_167_cs, NULL,
};
struct  iomux_pin *btpwr_u9701l_pins[] = {
&gpio_169_cs, NULL,
};
struct  iomux_pin *gps_boardcom_u9701l_pins[] = {
NULL,
};
struct  iomux_pin *ts_u9701l_pins[] = {
NULL,
};
struct  iomux_pin *lcd_u9701l_pins[] = {
&gpio_003_cs, &gpio_072_cs, &gpio_171_cs, NULL,
};
struct  iomux_pin *pwm_u9701l_pins[] = {
NULL,
};
struct  iomux_pin *hdmi_u9701l_pins[] = {
&gpio_038_cs, &gpio_039_cs, &gpio_041_cs, NULL,
};
struct  iomux_pin *wifi_u9701l_pins[] = {
&gpio_002_cs, &gpio_004_cs, NULL,
};
struct  iomux_pin *isp_dvp_u9701l_pins[] = {
NULL,
};
struct  iomux_pin *isp_i2c_u9701l_pins[] = {
&gpio_055_cs, &gpio_056_cs, NULL,
};
struct  iomux_pin *isp_reset_u9701l_pins[] = {
&gpio_059_cs, &gpio_060_cs, NULL,
};
struct  iomux_pin *isp_u9701l_pins[] = {
&gpio_067_cs, &gpio_068_cs, &gpio_069_cs, &gpio_070_cs, &gpio_075_cs, NULL,
};
struct  iomux_pin *isp_flash_u9701l_pins[] = {
&gpio_065_cs, &gpio_066_cs, &gpio_076_cs, NULL,
};
struct  iomux_pin *charger_u9701l_pins[] = {
&gpio_005_cs, &gpio_074_cs, NULL,
};
struct  iomux_pin *gsensor_u9701l_pins[] = {
&gpio_148_cs, NULL,
};
struct  iomux_pin *audio_spk_u9701l_pins[] = {
&gpio_117_cs, &gpio_139_cs, NULL,
};
struct  iomux_pin *audio_eph_u9701l_pins[] = {
&gpio_118_cs, &gpio_168_cs, NULL,
};
struct  iomux_pin *modem_u9701l_pins[] = {
&gpio_062_cs, &gpio_094_cs, &gpio_096_cs, &gpio_097_cs, &gpio_098_cs, &gpio_113_cs, &gpio_114_cs, &gpio_115_cs, &gpio_116_cs, &gpio_153_cs, NULL,
};
struct  iomux_pin *vbusdrv_u9701l_pins[] = {
&gpio_082_cs, NULL,
};
struct  iomux_pin *gps_spi_u9701l_pins[] = {
NULL,
};
struct  iomux_pin *modem_switch_u9701l_pins[] = {
NULL,
};
struct  iomux_pin *mcamdvdd_u9701l_pins[] = {
&gpio_073_cs, NULL,
};
struct  iomux_pin *isdb_u9701l_pins[] = {
&gpio_043_cs, &gpio_044_cs, &gpio_048_cs, &gpio_051_cs, &gpio_052_cs, &gpio_053_cs, &gpio_054_cs, &gpio_078_cs, &gpio_106_cs, &gpio_107_cs, &gpio_108_cs, &gpio_109_cs, &gpio_144_cs, &gpio_154_cs, &gpio_155_cs, NULL,
};
struct  iomux_pin *gyroscope_u9701l_pins[] = {
&gpio_050_cs, &gpio_147_cs, NULL,
};
struct  iomux_pin *touchkey_u9701l_pins[] = {
&gpio_045_cs, NULL,
};
struct  iomux_pin *lsensor_u9701l_pins[] = {
&gpio_126_cs, NULL,
};
struct  iomux_pin *compass_u9701l_pins[] = {
&gpio_125_cs, NULL,
};
struct  iomux_pin *touchscreen_u9701l_pins[] = {
&gpio_156_cs, &gpio_157_cs, NULL,
};
struct  iomux_pin *thermometer_u9701l_pins[] = {
&gpio_046_cs, &gpio_132_cs, NULL,
};
struct  iomux_pin *mhl_u9701l_pins[] = {
&gpio_079_cs, &gpio_080_cs, &gpio_081_cs, NULL,
};
struct  iomux_pin *felica_u9701l_pins[] = {
&gpio_006_cs, &gpio_134_cs, &gpio_140_cs, &gpio_160_cs, &gpio_161_cs, NULL,
};
struct  iomux_pin *irda_u9701l_pins[] = {
&gpio_020_cs, &gpio_021_cs, &gpio_022_cs, &gpio_150_cs, NULL,
};
struct  iomux_pin *usb_switch_u9701l_pins[] = {
&gpio_042_cs, &gpio_099_cs, &gpio_174_cs, NULL,
};
struct  iomux_pin *cprm_u9701l_pins[] = {
&gpio_071_cs, &gpio_129_cs, &gpio_136_cs, NULL,
};

/******************IOMUX_BLOCK****************/

IOMUX_BLOCK(block_i2c0_u9701l, "block_i2c0_u9701l", NORMAL, i2c0_u9701l_pins)
IOMUX_BLOCK(block_i2c1_u9701l, "block_i2c1_u9701l", NORMAL, i2c1_u9701l_pins)
IOMUX_BLOCK(block_i2c2_u9701l, "block_i2c2_u9701l", NORMAL, i2c2_u9701l_pins)
IOMUX_BLOCK(block_i2c3_u9701l, "block_i2c3_u9701l", NORMAL, i2c3_u9701l_pins)
IOMUX_BLOCK(block_spi0_u9701l, "block_spi0_u9701l", NORMAL, spi0_u9701l_pins)
IOMUX_BLOCK(block_spi0_cs_u9701l, "block_spi0_cs_u9701l", NORMAL, spi0_cs_u9701l_pins)
IOMUX_BLOCK(block_uart0_u9701l, "block_uart0_u9701l", NORMAL, uart0_u9701l_pins)
IOMUX_BLOCK(block_uart1_u9701l, "block_uart1_u9701l", NORMAL, uart1_u9701l_pins)
IOMUX_BLOCK(block_uart2_u9701l, "block_uart2_u9701l", NORMAL, uart2_u9701l_pins)
IOMUX_BLOCK(block_uart4_u9701l, "block_uart4_u9701l", NORMAL, uart4_u9701l_pins)
IOMUX_BLOCK(block_kpc_u9701l, "block_kpc_u9701l", NORMAL, kpc_u9701l_pins)
IOMUX_BLOCK(block_sd_u9701l, "block_sd_u9701l", NORMAL, sd_u9701l_pins)
IOMUX_BLOCK(block_nand_u9701l, "block_nand_u9701l", NORMAL, nand_u9701l_pins)
IOMUX_BLOCK(block_sdio_u9701l, "block_sdio_u9701l", NORMAL, sdio_u9701l_pins)
IOMUX_BLOCK(block_btpm_u9701l, "block_btpm_u9701l", NORMAL, btpm_u9701l_pins)
IOMUX_BLOCK(block_btpwr_u9701l, "block_btpwr_u9701l", NORMAL, btpwr_u9701l_pins)
IOMUX_BLOCK(block_gps_boardcom_u9701l, "block_gps_boardcom_u9701l", NORMAL, gps_boardcom_u9701l_pins)
IOMUX_BLOCK(block_ts_u9701l, "block_ts_u9701l", NORMAL, ts_u9701l_pins)
IOMUX_BLOCK(block_lcd_u9701l, "block_lcd_u9701l", NORMAL, lcd_u9701l_pins)
IOMUX_BLOCK(block_pwm_u9701l, "block_pwm_u9701l", NORMAL, pwm_u9701l_pins)
IOMUX_BLOCK(block_hdmi_u9701l, "block_hdmi_u9701l", NORMAL, hdmi_u9701l_pins)
IOMUX_BLOCK(block_wifi_u9701l, "block_wifi_u9701l", NORMAL, wifi_u9701l_pins)
IOMUX_BLOCK(block_isp_dvp_u9701l, "block_isp_dvp_u9701l", NORMAL, isp_dvp_u9701l_pins)
IOMUX_BLOCK(block_isp_i2c_u9701l, "block_isp_i2c_u9701l", NORMAL, isp_i2c_u9701l_pins)
IOMUX_BLOCK(block_isp_reset_u9701l, "block_isp_reset_u9701l", NORMAL, isp_reset_u9701l_pins)
IOMUX_BLOCK(block_isp_u9701l, "block_isp_u9701l", NORMAL, isp_u9701l_pins)
IOMUX_BLOCK(block_isp_flash_u9701l, "block_isp_flash_u9701l", NORMAL, isp_flash_u9701l_pins)
IOMUX_BLOCK(block_charger_u9701l, "block_charger_u9701l", NORMAL, charger_u9701l_pins)
IOMUX_BLOCK(block_gsensor_u9701l, "block_gsensor_u9701l", NORMAL, gsensor_u9701l_pins)
IOMUX_BLOCK(block_audio_spk_u9701l, "block_audio_spk_u9701l", NORMAL, audio_spk_u9701l_pins)
IOMUX_BLOCK(block_audio_eph_u9701l, "block_audio_eph_u9701l", NORMAL, audio_eph_u9701l_pins)
IOMUX_BLOCK(block_modem_u9701l, "block_modem_u9701l", NORMAL, modem_u9701l_pins)
IOMUX_BLOCK(block_vbusdrv_u9701l, "block_vbusdrv_u9701l", NORMAL, vbusdrv_u9701l_pins)
IOMUX_BLOCK(block_gps_spi_u9701l, "block_gps_spi_u9701l", NORMAL, gps_spi_u9701l_pins)
IOMUX_BLOCK(block_modem_switch_u9701l, "block_modem_switch_u9701l", NORMAL, modem_switch_u9701l_pins)
IOMUX_BLOCK(block_mcamdvdd_u9701l, "block_mcamdvdd_u9701l", NORMAL, mcamdvdd_u9701l_pins)
IOMUX_BLOCK(block_isdb_u9701l, "block_isdb_u9701l", NORMAL, isdb_u9701l_pins)
IOMUX_BLOCK(block_gyroscope_u9701l, "block_gyroscope_u9701l", NORMAL, gyroscope_u9701l_pins)
IOMUX_BLOCK(block_touchkey_u9701l, "block_touchkey_u9701l", NORMAL, touchkey_u9701l_pins)
IOMUX_BLOCK(block_lsensor_u9701l, "block_lsensor_u9701l", NORMAL, lsensor_u9701l_pins)
IOMUX_BLOCK(block_compass_u9701l, "block_compass_u9701l", NORMAL, compass_u9701l_pins)
IOMUX_BLOCK(block_touchscreen_u9701l, "block_touchscreen_u9701l", NORMAL, touchscreen_u9701l_pins)
IOMUX_BLOCK(block_thermometer_u9701l, "block_thermometer_u9701l", NORMAL, thermometer_u9701l_pins)
IOMUX_BLOCK(block_mhl_u9701l, "block_mhl_u9701l", NORMAL, mhl_u9701l_pins)
IOMUX_BLOCK(block_felica_u9701l, "block_felica_u9701l", NORMAL, felica_u9701l_pins)
IOMUX_BLOCK(block_irda_u9701l, "block_irda_u9701l", NORMAL, irda_u9701l_pins)
IOMUX_BLOCK(block_usb_switch_u9701l, "block_usb_switch_u9701l", NORMAL, usb_switch_u9701l_pins)
IOMUX_BLOCK(block_cprm_u9701l, "block_cprm_u9701l", NORMAL, cprm_u9701l_pins)

/******************normal func ****************/

enum lowlayer_func i2c0_u9701l_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func i2c1_u9701l_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func i2c2_u9701l_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func i2c3_u9701l_func_normal[] = {FUNC2, FUNC2, -INVALID,};
enum lowlayer_func spi0_u9701l_func_normal[] = {-INVALID,};
enum lowlayer_func spi0_cs_u9701l_func_normal[] = {FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func uart0_u9701l_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func uart1_u9701l_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func uart2_u9701l_func_normal[] = {FUNC2, FUNC2, -INVALID,};
enum lowlayer_func uart4_u9701l_func_normal[] = {FUNC2, FUNC2, FUNC2, FUNC2, -INVALID,};
enum lowlayer_func kpc_u9701l_func_normal[] = {FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func sd_u9701l_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func nand_u9701l_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func sdio_u9701l_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func btpm_u9701l_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func btpwr_u9701l_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func gps_boardcom_u9701l_func_normal[] = {-INVALID,};
enum lowlayer_func ts_u9701l_func_normal[] = {-INVALID,};
enum lowlayer_func lcd_u9701l_func_normal[] = {FUNC0, FUNC2, FUNC1, -INVALID,};
enum lowlayer_func pwm_u9701l_func_normal[] = {-INVALID,};
enum lowlayer_func hdmi_u9701l_func_normal[] = {FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func wifi_u9701l_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_dvp_u9701l_func_normal[] = {-INVALID,};
enum lowlayer_func isp_i2c_u9701l_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_reset_u9701l_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_u9701l_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_flash_u9701l_func_normal[] = {FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func charger_u9701l_func_normal[] = {FUNC0, FUNC1, -INVALID,};
enum lowlayer_func gsensor_u9701l_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func audio_spk_u9701l_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func audio_eph_u9701l_func_normal[] = {FUNC1, FUNC0, -INVALID,};
enum lowlayer_func modem_u9701l_func_normal[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func vbusdrv_u9701l_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func gps_spi_u9701l_func_normal[] = {-INVALID,};
enum lowlayer_func modem_switch_u9701l_func_normal[] = {-INVALID,};
enum lowlayer_func mcamdvdd_u9701l_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func isdb_u9701l_func_normal[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC0, FUNC0, FUNC0, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func gyroscope_u9701l_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func touchkey_u9701l_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func lsensor_u9701l_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func compass_u9701l_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func touchscreen_u9701l_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func thermometer_u9701l_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func mhl_u9701l_func_normal[] = {FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func felica_u9701l_func_normal[] = {FUNC0, FUNC1, FUNC1, FUNC2, FUNC2, -INVALID,};
enum lowlayer_func irda_u9701l_func_normal[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func usb_switch_u9701l_func_normal[] = {FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func cprm_u9701l_func_normal[] = {FUNC1, FUNC1, FUNC1, -INVALID,};

/******************lowpower func****************/

enum lowlayer_func i2c0_u9701l_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func i2c1_u9701l_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func i2c2_u9701l_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func i2c3_u9701l_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func spi0_u9701l_func_lowpower[] = {-INVALID,};
enum lowlayer_func spi0_cs_u9701l_func_lowpower[] = {FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart0_u9701l_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart1_u9701l_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart2_u9701l_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart4_u9701l_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func kpc_u9701l_func_lowpower[] = {FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func sd_u9701l_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func nand_u9701l_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func sdio_u9701l_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func btpm_u9701l_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func btpwr_u9701l_func_lowpower[] = {FUNC1, -INVALID,};
enum lowlayer_func gps_boardcom_u9701l_func_lowpower[] = {-INVALID,};
enum lowlayer_func ts_u9701l_func_lowpower[] = {-INVALID,};
enum lowlayer_func lcd_u9701l_func_lowpower[] = {FUNC0, FUNC2, FUNC1, -INVALID,};
enum lowlayer_func pwm_u9701l_func_lowpower[] = {-INVALID,};
enum lowlayer_func hdmi_u9701l_func_lowpower[] = {FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func wifi_u9701l_func_lowpower[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_dvp_u9701l_func_lowpower[] = {-INVALID,};
enum lowlayer_func isp_i2c_u9701l_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func isp_reset_u9701l_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func isp_u9701l_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC0, -INVALID,};
enum lowlayer_func isp_flash_u9701l_func_lowpower[] = {FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func charger_u9701l_func_lowpower[] = {FUNC0, FUNC1, -INVALID,};
enum lowlayer_func gsensor_u9701l_func_lowpower[] = {FUNC1, -INVALID,};
enum lowlayer_func audio_spk_u9701l_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func audio_eph_u9701l_func_lowpower[] = {FUNC1, FUNC0, -INVALID,};
enum lowlayer_func modem_u9701l_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func vbusdrv_u9701l_func_lowpower[] = {FUNC0, -INVALID,};
enum lowlayer_func gps_spi_u9701l_func_lowpower[] = {-INVALID,};
enum lowlayer_func modem_switch_u9701l_func_lowpower[] = {-INVALID,};
enum lowlayer_func mcamdvdd_u9701l_func_lowpower[] = {FUNC1, -INVALID,};
enum lowlayer_func isdb_u9701l_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func gyroscope_u9701l_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func touchkey_u9701l_func_lowpower[] = {FUNC1, -INVALID,};
enum lowlayer_func lsensor_u9701l_func_lowpower[] = {FUNC1, -INVALID,};
enum lowlayer_func compass_u9701l_func_lowpower[] = {FUNC1, -INVALID,};
enum lowlayer_func touchscreen_u9701l_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func thermometer_u9701l_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func mhl_u9701l_func_lowpower[] = {FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func felica_u9701l_func_lowpower[] = {FUNC0, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func irda_u9701l_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func usb_switch_u9701l_func_lowpower[] = {FUNC1, FUNC1, FUNC0, -INVALID,};
enum lowlayer_func cprm_u9701l_func_lowpower[] = {FUNC1, FUNC1, FUNC1, -INVALID,};

/******************normal pullud****************/

enum pull_updown i2c0_u9701l_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c1_u9701l_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c2_u9701l_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c3_u9701l_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown spi0_u9701l_pullud_normal[] = {-INVALID,};
enum pull_updown spi0_cs_u9701l_pullud_normal[] = {PULLDOWN, NOPULL, NOPULL, -INVALID,};
enum pull_updown uart0_u9701l_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown uart1_u9701l_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown uart2_u9701l_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown uart4_u9701l_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown kpc_u9701l_pullud_normal[] = {PULLUP, PULLUP, PULLUP, -INVALID,};
enum pull_updown sd_u9701l_pullud_normal[] = {NOPULL, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, -INVALID,};
enum pull_updown nand_u9701l_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown sdio_u9701l_pullud_normal[] = {NOPULL, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, -INVALID,};
enum pull_updown btpm_u9701l_pullud_normal[] = {PULLUP, NOPULL, -INVALID,};
enum pull_updown btpwr_u9701l_pullud_normal[] = {NOPULL, -INVALID,};
enum pull_updown gps_boardcom_u9701l_pullud_normal[] = {-INVALID,};
enum pull_updown ts_u9701l_pullud_normal[] = {-INVALID,};
enum pull_updown lcd_u9701l_pullud_normal[] = {NOPULL, PULLDOWN, NOPULL, -INVALID,};
enum pull_updown pwm_u9701l_pullud_normal[] = {-INVALID,};
enum pull_updown hdmi_u9701l_pullud_normal[] = {NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown wifi_u9701l_pullud_normal[] = {NOPULL, PULLDOWN, -INVALID,};
enum pull_updown isp_dvp_u9701l_pullud_normal[] = {-INVALID,};
enum pull_updown isp_i2c_u9701l_pullud_normal[] = {PULLUP, PULLUP, -INVALID,};
enum pull_updown isp_reset_u9701l_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_u9701l_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_flash_u9701l_pullud_normal[] = {NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown charger_u9701l_pullud_normal[] = {PULLUP, NOPULL, -INVALID,};
enum pull_updown gsensor_u9701l_pullud_normal[] = {PULLDOWN, -INVALID,};
enum pull_updown audio_spk_u9701l_pullud_normal[] = {PULLDOWN, NOPULL, -INVALID,};
enum pull_updown audio_eph_u9701l_pullud_normal[] = {PULLDOWN, NOPULL, -INVALID,};
enum pull_updown modem_u9701l_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, PULLDOWN, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown vbusdrv_u9701l_pullud_normal[] = {NOPULL, -INVALID,};
enum pull_updown gps_spi_u9701l_pullud_normal[] = {-INVALID,};
enum pull_updown modem_switch_u9701l_pullud_normal[] = {-INVALID,};
enum pull_updown mcamdvdd_u9701l_pullud_normal[] = {NOPULL, -INVALID,};
enum pull_updown isdb_u9701l_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, PULLDOWN, PULLDOWN, PULLDOWN, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown gyroscope_u9701l_pullud_normal[] = {PULLUP, PULLUP, -INVALID,};
enum pull_updown touchkey_u9701l_pullud_normal[] = {PULLUP, -INVALID,};
enum pull_updown lsensor_u9701l_pullud_normal[] = {PULLUP, -INVALID,};
enum pull_updown compass_u9701l_pullud_normal[] = {PULLDOWN, -INVALID,};
enum pull_updown touchscreen_u9701l_pullud_normal[] = {NOPULL, PULLUP, -INVALID,};
enum pull_updown thermometer_u9701l_pullud_normal[] = {NOPULL, PULLUP, -INVALID,};
enum pull_updown mhl_u9701l_pullud_normal[] = {NOPULL, PULLUP, NOPULL, -INVALID,};
enum pull_updown felica_u9701l_pullud_normal[] = {PULLUP, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown irda_u9701l_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown usb_switch_u9701l_pullud_normal[] = {NOPULL, PULLDOWN, NOPULL, -INVALID,};
enum pull_updown cprm_u9701l_pullud_normal[] = {NOPULL, NOPULL, NOPULL, -INVALID,};

/******************lowpower pullud****************/

enum pull_updown i2c0_u9701l_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c1_u9701l_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c2_u9701l_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c3_u9701l_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown spi0_u9701l_pullud_lowpower[] = {-INVALID,};
enum pull_updown spi0_cs_u9701l_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown uart0_u9701l_pullud_lowpower[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown uart1_u9701l_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown uart2_u9701l_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown uart4_u9701l_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown kpc_u9701l_pullud_lowpower[] = {PULLDOWN, PULLUP, PULLUP, -INVALID,};
enum pull_updown sd_u9701l_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown nand_u9701l_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown sdio_u9701l_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, NOPULL, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown btpm_u9701l_pullud_lowpower[] = {PULLUP, NOPULL, -INVALID,};
enum pull_updown btpwr_u9701l_pullud_lowpower[] = {NOPULL, -INVALID,};
enum pull_updown gps_boardcom_u9701l_pullud_lowpower[] = {-INVALID,};
enum pull_updown ts_u9701l_pullud_lowpower[] = {-INVALID,};
enum pull_updown lcd_u9701l_pullud_lowpower[] = {PULLDOWN, PULLDOWN, NOPULL, -INVALID,};
enum pull_updown pwm_u9701l_pullud_lowpower[] = {-INVALID,};
enum pull_updown hdmi_u9701l_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown wifi_u9701l_pullud_lowpower[] = {NOPULL, PULLDOWN, -INVALID,};
enum pull_updown isp_dvp_u9701l_pullud_lowpower[] = {-INVALID,};
enum pull_updown isp_i2c_u9701l_pullud_lowpower[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown isp_reset_u9701l_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_u9701l_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_flash_u9701l_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown charger_u9701l_pullud_lowpower[] = {PULLUP, NOPULL, -INVALID,};
enum pull_updown gsensor_u9701l_pullud_lowpower[] = {PULLDOWN, -INVALID,};
enum pull_updown audio_spk_u9701l_pullud_lowpower[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown audio_eph_u9701l_pullud_lowpower[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown modem_u9701l_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown vbusdrv_u9701l_pullud_lowpower[] = {PULLDOWN, -INVALID,};
enum pull_updown gps_spi_u9701l_pullud_lowpower[] = {-INVALID,};
enum pull_updown modem_switch_u9701l_pullud_lowpower[] = {-INVALID,};
enum pull_updown mcamdvdd_u9701l_pullud_lowpower[] = {NOPULL, -INVALID,};
enum pull_updown isdb_u9701l_pullud_lowpower[] = {PULLDOWN, NOPULL, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, NOPULL, PULLDOWN, PULLDOWN, PULLDOWN, NOPULL, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown gyroscope_u9701l_pullud_lowpower[] = {PULLUP, PULLUP, -INVALID,};
enum pull_updown touchkey_u9701l_pullud_lowpower[] = {NOPULL, -INVALID,};
enum pull_updown lsensor_u9701l_pullud_lowpower[] = {NOPULL, -INVALID,};
enum pull_updown compass_u9701l_pullud_lowpower[] = {NOPULL, -INVALID,};
enum pull_updown touchscreen_u9701l_pullud_lowpower[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown thermometer_u9701l_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown mhl_u9701l_pullud_lowpower[] = {PULLDOWN, PULLUP, NOPULL, -INVALID,};
enum pull_updown felica_u9701l_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown irda_u9701l_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown usb_switch_u9701l_pullud_lowpower[] = {PULLDOWN, PULLDOWN, NOPULL, -INVALID,};
enum pull_updown cprm_u9701l_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, -INVALID,};

/******************normal drv****************/

enum drive_strength i2c0_u9701l_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c1_u9701l_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c2_u9701l_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c3_u9701l_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength spi0_u9701l_drv_normal[] = {-INVALID,};
enum drive_strength spi0_cs_u9701l_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength uart0_u9701l_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength uart1_u9701l_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength uart2_u9701l_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength uart4_u9701l_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength kpc_u9701l_drv_normal[] = {RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength sd_u9701l_drv_normal[] = {LEVEL2, LEVEL3, LEVEL3, LEVEL3, LEVEL3, LEVEL3, -INVALID,};
enum drive_strength nand_u9701l_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength sdio_u9701l_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength btpm_u9701l_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength btpwr_u9701l_drv_normal[] = {LEVEL2, -INVALID,};
enum drive_strength gps_boardcom_u9701l_drv_normal[] = {-INVALID,};
enum drive_strength ts_u9701l_drv_normal[] = {-INVALID,};
enum drive_strength lcd_u9701l_drv_normal[] = {RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength pwm_u9701l_drv_normal[] = {-INVALID,};
enum drive_strength hdmi_u9701l_drv_normal[] = {RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength wifi_u9701l_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_dvp_u9701l_drv_normal[] = {-INVALID,};
enum drive_strength isp_i2c_u9701l_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_reset_u9701l_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_u9701l_drv_normal[] = {LEVEL0, LEVEL0, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_flash_u9701l_drv_normal[] = {RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength charger_u9701l_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength gsensor_u9701l_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength audio_spk_u9701l_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength audio_eph_u9701l_drv_normal[] = {RESERVE, LEVEL2, -INVALID,};
enum drive_strength modem_u9701l_drv_normal[] = {RESERVE, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, RESERVE, RESERVE, -INVALID,};
enum drive_strength vbusdrv_u9701l_drv_normal[] = {LEVEL2, -INVALID,};
enum drive_strength gps_spi_u9701l_drv_normal[] = {-INVALID,};
enum drive_strength modem_switch_u9701l_drv_normal[] = {-INVALID,};
enum drive_strength mcamdvdd_u9701l_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength isdb_u9701l_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, LEVEL2, LEVEL2, LEVEL2, RESERVE, LEVEL2, RESERVE, -INVALID,};
enum drive_strength gyroscope_u9701l_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength touchkey_u9701l_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength lsensor_u9701l_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength compass_u9701l_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength touchscreen_u9701l_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength thermometer_u9701l_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength mhl_u9701l_drv_normal[] = {RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength felica_u9701l_drv_normal[] = {RESERVE, RESERVE, RESERVE, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength irda_u9701l_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength usb_switch_u9701l_drv_normal[] = {RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength cprm_u9701l_drv_normal[] = {RESERVE, RESERVE, RESERVE, -INVALID,};

/******************lowpower drv****************/

enum drive_strength i2c0_u9701l_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c1_u9701l_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c2_u9701l_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c3_u9701l_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength spi0_u9701l_drv_lowpower[] = {-INVALID,};
enum drive_strength spi0_cs_u9701l_drv_lowpower[] = {LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength uart0_u9701l_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength uart1_u9701l_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength uart2_u9701l_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength uart4_u9701l_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength kpc_u9701l_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength sd_u9701l_drv_lowpower[] = {LEVEL2, LEVEL3, LEVEL3, LEVEL3, LEVEL3, LEVEL3, -INVALID,};
enum drive_strength nand_u9701l_drv_lowpower[] = {LEVEL2, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, -INVALID,};
enum drive_strength sdio_u9701l_drv_lowpower[] = {LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, -INVALID,};
enum drive_strength btpm_u9701l_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength btpwr_u9701l_drv_lowpower[] = {LEVEL2, -INVALID,};
enum drive_strength gps_boardcom_u9701l_drv_lowpower[] = {-INVALID,};
enum drive_strength ts_u9701l_drv_lowpower[] = {-INVALID,};
enum drive_strength lcd_u9701l_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength pwm_u9701l_drv_lowpower[] = {-INVALID,};
enum drive_strength hdmi_u9701l_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength wifi_u9701l_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_dvp_u9701l_drv_lowpower[] = {-INVALID,};
enum drive_strength isp_i2c_u9701l_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_reset_u9701l_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_u9701l_drv_lowpower[] = {LEVEL0, LEVEL0, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_flash_u9701l_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength charger_u9701l_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength gsensor_u9701l_drv_lowpower[] = {RESERVE, -INVALID,};
enum drive_strength audio_spk_u9701l_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength audio_eph_u9701l_drv_lowpower[] = {RESERVE, LEVEL2, -INVALID,};
enum drive_strength modem_u9701l_drv_lowpower[] = {RESERVE, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, RESERVE, -INVALID,};
enum drive_strength vbusdrv_u9701l_drv_lowpower[] = {LEVEL2, -INVALID,};
enum drive_strength gps_spi_u9701l_drv_lowpower[] = {-INVALID,};
enum drive_strength modem_switch_u9701l_drv_lowpower[] = {-INVALID,};
enum drive_strength mcamdvdd_u9701l_drv_lowpower[] = {RESERVE, -INVALID,};
enum drive_strength isdb_u9701l_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, LEVEL2, LEVEL2, LEVEL2, RESERVE, LEVEL2, RESERVE, -INVALID,};
enum drive_strength gyroscope_u9701l_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength touchkey_u9701l_drv_lowpower[] = {RESERVE, -INVALID,};
enum drive_strength lsensor_u9701l_drv_lowpower[] = {RESERVE, -INVALID,};
enum drive_strength compass_u9701l_drv_lowpower[] = {RESERVE, -INVALID,};
enum drive_strength touchscreen_u9701l_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength thermometer_u9701l_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength mhl_u9701l_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength felica_u9701l_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength irda_u9701l_drv_lowpower[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength usb_switch_u9701l_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength cprm_u9701l_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, -INVALID,};

/******************config****************/

struct block_config i2c0_u9701l_config[] = {
	[NORMAL] = {i2c0_u9701l_func_normal, i2c0_u9701l_pullud_normal, i2c0_u9701l_drv_normal},
	[LOWPOWER] = {i2c0_u9701l_func_lowpower, i2c0_u9701l_pullud_lowpower, i2c0_u9701l_drv_lowpower},
};
struct block_config i2c1_u9701l_config[] = {
	[NORMAL] = {i2c1_u9701l_func_normal, i2c1_u9701l_pullud_normal, i2c1_u9701l_drv_normal},
	[LOWPOWER] = {i2c1_u9701l_func_lowpower, i2c1_u9701l_pullud_lowpower, i2c1_u9701l_drv_lowpower},
};
struct block_config i2c2_u9701l_config[] = {
	[NORMAL] = {i2c2_u9701l_func_normal, i2c2_u9701l_pullud_normal, i2c2_u9701l_drv_normal},
	[LOWPOWER] = {i2c2_u9701l_func_lowpower, i2c2_u9701l_pullud_lowpower, i2c2_u9701l_drv_lowpower},
};
struct block_config i2c3_u9701l_config[] = {
	[NORMAL] = {i2c3_u9701l_func_normal, i2c3_u9701l_pullud_normal, i2c3_u9701l_drv_normal},
	[LOWPOWER] = {i2c3_u9701l_func_lowpower, i2c3_u9701l_pullud_lowpower, i2c3_u9701l_drv_lowpower},
};
struct block_config spi0_u9701l_config[] = {
	[NORMAL] = {spi0_u9701l_func_normal, spi0_u9701l_pullud_normal, spi0_u9701l_drv_normal},
	[LOWPOWER] = {spi0_u9701l_func_lowpower, spi0_u9701l_pullud_lowpower, spi0_u9701l_drv_lowpower},
};
struct block_config spi0_cs_u9701l_config[] = {
	[NORMAL] = {spi0_cs_u9701l_func_normal, spi0_cs_u9701l_pullud_normal, spi0_cs_u9701l_drv_normal},
	[LOWPOWER] = {spi0_cs_u9701l_func_lowpower, spi0_cs_u9701l_pullud_lowpower, spi0_cs_u9701l_drv_lowpower},
};
struct block_config uart0_u9701l_config[] = {
	[NORMAL] = {uart0_u9701l_func_normal, uart0_u9701l_pullud_normal, uart0_u9701l_drv_normal},
	[LOWPOWER] = {uart0_u9701l_func_lowpower, uart0_u9701l_pullud_lowpower, uart0_u9701l_drv_lowpower},
};
struct block_config uart1_u9701l_config[] = {
	[NORMAL] = {uart1_u9701l_func_normal, uart1_u9701l_pullud_normal, uart1_u9701l_drv_normal},
	[LOWPOWER] = {uart1_u9701l_func_lowpower, uart1_u9701l_pullud_lowpower, uart1_u9701l_drv_lowpower},
};
struct block_config uart2_u9701l_config[] = {
	[NORMAL] = {uart2_u9701l_func_normal, uart2_u9701l_pullud_normal, uart2_u9701l_drv_normal},
	[LOWPOWER] = {uart2_u9701l_func_lowpower, uart2_u9701l_pullud_lowpower, uart2_u9701l_drv_lowpower},
};
struct block_config uart4_u9701l_config[] = {
	[NORMAL] = {uart4_u9701l_func_normal, uart4_u9701l_pullud_normal, uart4_u9701l_drv_normal},
	[LOWPOWER] = {uart4_u9701l_func_lowpower, uart4_u9701l_pullud_lowpower, uart4_u9701l_drv_lowpower},
};
struct block_config kpc_u9701l_config[] = {
	[NORMAL] = {kpc_u9701l_func_normal, kpc_u9701l_pullud_normal, kpc_u9701l_drv_normal},
	[LOWPOWER] = {kpc_u9701l_func_lowpower, kpc_u9701l_pullud_lowpower, kpc_u9701l_drv_lowpower},
};
struct block_config sd_u9701l_config[] = {
	[NORMAL] = {sd_u9701l_func_normal, sd_u9701l_pullud_normal, sd_u9701l_drv_normal},
	[LOWPOWER] = {sd_u9701l_func_lowpower, sd_u9701l_pullud_lowpower, sd_u9701l_drv_lowpower},
};
struct block_config nand_u9701l_config[] = {
	[NORMAL] = {nand_u9701l_func_normal, nand_u9701l_pullud_normal, nand_u9701l_drv_normal},
	[LOWPOWER] = {nand_u9701l_func_lowpower, nand_u9701l_pullud_lowpower, nand_u9701l_drv_lowpower},
};
struct block_config sdio_u9701l_config[] = {
	[NORMAL] = {sdio_u9701l_func_normal, sdio_u9701l_pullud_normal, sdio_u9701l_drv_normal},
	[LOWPOWER] = {sdio_u9701l_func_lowpower, sdio_u9701l_pullud_lowpower, sdio_u9701l_drv_lowpower},
};
struct block_config btpm_u9701l_config[] = {
	[NORMAL] = {btpm_u9701l_func_normal, btpm_u9701l_pullud_normal, btpm_u9701l_drv_normal},
	[LOWPOWER] = {btpm_u9701l_func_lowpower, btpm_u9701l_pullud_lowpower, btpm_u9701l_drv_lowpower},
};
struct block_config btpwr_u9701l_config[] = {
	[NORMAL] = {btpwr_u9701l_func_normal, btpwr_u9701l_pullud_normal, btpwr_u9701l_drv_normal},
	[LOWPOWER] = {btpwr_u9701l_func_lowpower, btpwr_u9701l_pullud_lowpower, btpwr_u9701l_drv_lowpower},
};
struct block_config gps_boardcom_u9701l_config[] = {
	[NORMAL] = {gps_boardcom_u9701l_func_normal, gps_boardcom_u9701l_pullud_normal, gps_boardcom_u9701l_drv_normal},
	[LOWPOWER] = {gps_boardcom_u9701l_func_lowpower, gps_boardcom_u9701l_pullud_lowpower, gps_boardcom_u9701l_drv_lowpower},
};
struct block_config ts_u9701l_config[] = {
	[NORMAL] = {ts_u9701l_func_normal, ts_u9701l_pullud_normal, ts_u9701l_drv_normal},
	[LOWPOWER] = {ts_u9701l_func_lowpower, ts_u9701l_pullud_lowpower, ts_u9701l_drv_lowpower},
};
struct block_config lcd_u9701l_config[] = {
	[NORMAL] = {lcd_u9701l_func_normal, lcd_u9701l_pullud_normal, lcd_u9701l_drv_normal},
	[LOWPOWER] = {lcd_u9701l_func_lowpower, lcd_u9701l_pullud_lowpower, lcd_u9701l_drv_lowpower},
};
struct block_config pwm_u9701l_config[] = {
	[NORMAL] = {pwm_u9701l_func_normal, pwm_u9701l_pullud_normal, pwm_u9701l_drv_normal},
	[LOWPOWER] = {pwm_u9701l_func_lowpower, pwm_u9701l_pullud_lowpower, pwm_u9701l_drv_lowpower},
};
struct block_config hdmi_u9701l_config[] = {
	[NORMAL] = {hdmi_u9701l_func_normal, hdmi_u9701l_pullud_normal, hdmi_u9701l_drv_normal},
	[LOWPOWER] = {hdmi_u9701l_func_lowpower, hdmi_u9701l_pullud_lowpower, hdmi_u9701l_drv_lowpower},
};
struct block_config wifi_u9701l_config[] = {
	[NORMAL] = {wifi_u9701l_func_normal, wifi_u9701l_pullud_normal, wifi_u9701l_drv_normal},
	[LOWPOWER] = {wifi_u9701l_func_lowpower, wifi_u9701l_pullud_lowpower, wifi_u9701l_drv_lowpower},
};
struct block_config isp_dvp_u9701l_config[] = {
	[NORMAL] = {isp_dvp_u9701l_func_normal, isp_dvp_u9701l_pullud_normal, isp_dvp_u9701l_drv_normal},
	[LOWPOWER] = {isp_dvp_u9701l_func_lowpower, isp_dvp_u9701l_pullud_lowpower, isp_dvp_u9701l_drv_lowpower},
};
struct block_config isp_i2c_u9701l_config[] = {
	[NORMAL] = {isp_i2c_u9701l_func_normal, isp_i2c_u9701l_pullud_normal, isp_i2c_u9701l_drv_normal},
	[LOWPOWER] = {isp_i2c_u9701l_func_lowpower, isp_i2c_u9701l_pullud_lowpower, isp_i2c_u9701l_drv_lowpower},
};
struct block_config isp_reset_u9701l_config[] = {
	[NORMAL] = {isp_reset_u9701l_func_normal, isp_reset_u9701l_pullud_normal, isp_reset_u9701l_drv_normal},
	[LOWPOWER] = {isp_reset_u9701l_func_lowpower, isp_reset_u9701l_pullud_lowpower, isp_reset_u9701l_drv_lowpower},
};
struct block_config isp_u9701l_config[] = {
	[NORMAL] = {isp_u9701l_func_normal, isp_u9701l_pullud_normal, isp_u9701l_drv_normal},
	[LOWPOWER] = {isp_u9701l_func_lowpower, isp_u9701l_pullud_lowpower, isp_u9701l_drv_lowpower},
};
struct block_config isp_flash_u9701l_config[] = {
	[NORMAL] = {isp_flash_u9701l_func_normal, isp_flash_u9701l_pullud_normal, isp_flash_u9701l_drv_normal},
	[LOWPOWER] = {isp_flash_u9701l_func_lowpower, isp_flash_u9701l_pullud_lowpower, isp_flash_u9701l_drv_lowpower},
};
struct block_config charger_u9701l_config[] = {
	[NORMAL] = {charger_u9701l_func_normal, charger_u9701l_pullud_normal, charger_u9701l_drv_normal},
	[LOWPOWER] = {charger_u9701l_func_lowpower, charger_u9701l_pullud_lowpower, charger_u9701l_drv_lowpower},
};
struct block_config gsensor_u9701l_config[] = {
	[NORMAL] = {gsensor_u9701l_func_normal, gsensor_u9701l_pullud_normal, gsensor_u9701l_drv_normal},
	[LOWPOWER] = {gsensor_u9701l_func_lowpower, gsensor_u9701l_pullud_lowpower, gsensor_u9701l_drv_lowpower},
};
struct block_config audio_spk_u9701l_config[] = {
	[NORMAL] = {audio_spk_u9701l_func_normal, audio_spk_u9701l_pullud_normal, audio_spk_u9701l_drv_normal},
	[LOWPOWER] = {audio_spk_u9701l_func_lowpower, audio_spk_u9701l_pullud_lowpower, audio_spk_u9701l_drv_lowpower},
};
struct block_config audio_eph_u9701l_config[] = {
	[NORMAL] = {audio_eph_u9701l_func_normal, audio_eph_u9701l_pullud_normal, audio_eph_u9701l_drv_normal},
	[LOWPOWER] = {audio_eph_u9701l_func_lowpower, audio_eph_u9701l_pullud_lowpower, audio_eph_u9701l_drv_lowpower},
};
struct block_config modem_u9701l_config[] = {
	[NORMAL] = {modem_u9701l_func_normal, modem_u9701l_pullud_normal, modem_u9701l_drv_normal},
	[LOWPOWER] = {modem_u9701l_func_lowpower, modem_u9701l_pullud_lowpower, modem_u9701l_drv_lowpower},
};
struct block_config vbusdrv_u9701l_config[] = {
	[NORMAL] = {vbusdrv_u9701l_func_normal, vbusdrv_u9701l_pullud_normal, vbusdrv_u9701l_drv_normal},
	[LOWPOWER] = {vbusdrv_u9701l_func_lowpower, vbusdrv_u9701l_pullud_lowpower, vbusdrv_u9701l_drv_lowpower},
};
struct block_config gps_spi_u9701l_config[] = {
	[NORMAL] = {gps_spi_u9701l_func_normal, gps_spi_u9701l_pullud_normal, gps_spi_u9701l_drv_normal},
	[LOWPOWER] = {gps_spi_u9701l_func_lowpower, gps_spi_u9701l_pullud_lowpower, gps_spi_u9701l_drv_lowpower},
};
struct block_config modem_switch_u9701l_config[] = {
	[NORMAL] = {modem_switch_u9701l_func_normal, modem_switch_u9701l_pullud_normal, modem_switch_u9701l_drv_normal},
	[LOWPOWER] = {modem_switch_u9701l_func_lowpower, modem_switch_u9701l_pullud_lowpower, modem_switch_u9701l_drv_lowpower},
};
struct block_config mcamdvdd_u9701l_config[] = {
	[NORMAL] = {mcamdvdd_u9701l_func_normal, mcamdvdd_u9701l_pullud_normal, mcamdvdd_u9701l_drv_normal},
	[LOWPOWER] = {mcamdvdd_u9701l_func_lowpower, mcamdvdd_u9701l_pullud_lowpower, mcamdvdd_u9701l_drv_lowpower},
};
struct block_config isdb_u9701l_config[] = {
	[NORMAL] = {isdb_u9701l_func_normal, isdb_u9701l_pullud_normal, isdb_u9701l_drv_normal},
	[LOWPOWER] = {isdb_u9701l_func_lowpower, isdb_u9701l_pullud_lowpower, isdb_u9701l_drv_lowpower},
};
struct block_config gyroscope_u9701l_config[] = {
	[NORMAL] = {gyroscope_u9701l_func_normal, gyroscope_u9701l_pullud_normal, gyroscope_u9701l_drv_normal},
	[LOWPOWER] = {gyroscope_u9701l_func_lowpower, gyroscope_u9701l_pullud_lowpower, gyroscope_u9701l_drv_lowpower},
};
struct block_config touchkey_u9701l_config[] = {
	[NORMAL] = {touchkey_u9701l_func_normal, touchkey_u9701l_pullud_normal, touchkey_u9701l_drv_normal},
	[LOWPOWER] = {touchkey_u9701l_func_lowpower, touchkey_u9701l_pullud_lowpower, touchkey_u9701l_drv_lowpower},
};
struct block_config lsensor_u9701l_config[] = {
	[NORMAL] = {lsensor_u9701l_func_normal, lsensor_u9701l_pullud_normal, lsensor_u9701l_drv_normal},
	[LOWPOWER] = {lsensor_u9701l_func_lowpower, lsensor_u9701l_pullud_lowpower, lsensor_u9701l_drv_lowpower},
};
struct block_config compass_u9701l_config[] = {
	[NORMAL] = {compass_u9701l_func_normal, compass_u9701l_pullud_normal, compass_u9701l_drv_normal},
	[LOWPOWER] = {compass_u9701l_func_lowpower, compass_u9701l_pullud_lowpower, compass_u9701l_drv_lowpower},
};
struct block_config touchscreen_u9701l_config[] = {
	[NORMAL] = {touchscreen_u9701l_func_normal, touchscreen_u9701l_pullud_normal, touchscreen_u9701l_drv_normal},
	[LOWPOWER] = {touchscreen_u9701l_func_lowpower, touchscreen_u9701l_pullud_lowpower, touchscreen_u9701l_drv_lowpower},
};
struct block_config thermometer_u9701l_config[] = {
	[NORMAL] = {thermometer_u9701l_func_normal, thermometer_u9701l_pullud_normal, thermometer_u9701l_drv_normal},
	[LOWPOWER] = {thermometer_u9701l_func_lowpower, thermometer_u9701l_pullud_lowpower, thermometer_u9701l_drv_lowpower},
};
struct block_config mhl_u9701l_config[] = {
	[NORMAL] = {mhl_u9701l_func_normal, mhl_u9701l_pullud_normal, mhl_u9701l_drv_normal},
	[LOWPOWER] = {mhl_u9701l_func_lowpower, mhl_u9701l_pullud_lowpower, mhl_u9701l_drv_lowpower},
};
struct block_config felica_u9701l_config[] = {
	[NORMAL] = {felica_u9701l_func_normal, felica_u9701l_pullud_normal, felica_u9701l_drv_normal},
	[LOWPOWER] = {felica_u9701l_func_lowpower, felica_u9701l_pullud_lowpower, felica_u9701l_drv_lowpower},
};
struct block_config irda_u9701l_config[] = {
	[NORMAL] = {irda_u9701l_func_normal, irda_u9701l_pullud_normal, irda_u9701l_drv_normal},
	[LOWPOWER] = {irda_u9701l_func_lowpower, irda_u9701l_pullud_lowpower, irda_u9701l_drv_lowpower},
};
struct block_config usb_switch_u9701l_config[] = {
	[NORMAL] = {usb_switch_u9701l_func_normal, usb_switch_u9701l_pullud_normal, usb_switch_u9701l_drv_normal},
	[LOWPOWER] = {usb_switch_u9701l_func_lowpower, usb_switch_u9701l_pullud_lowpower, usb_switch_u9701l_drv_lowpower},
};
struct block_config cprm_u9701l_config[] = {
	[NORMAL] = {cprm_u9701l_func_normal, cprm_u9701l_pullud_normal, cprm_u9701l_drv_normal},
	[LOWPOWER] = {cprm_u9701l_func_lowpower, cprm_u9701l_pullud_lowpower, cprm_u9701l_drv_lowpower},
};


/******************pins ****************/

struct  iomux_pin *audio_es305_u9701l_pins[] = {
&gpio_127_cs, &gpio_128_cs, NULL,
};
struct  iomux_pin *spi1_u9701l_pins[] = {
&gpio_113_cs, &gpio_114_cs, &gpio_115_cs, &gpio_116_cs, NULL,
};
struct  iomux_pin *uart3_u9701l_pins[] = {
&gpio_154_cs, &gpio_155_cs, &gpio_160_cs, &gpio_161_cs, NULL,
};
struct  iomux_pin *emmc_u9701l_pins[] = {
&gpio_028_cs, &gpio_029_cs, &gpio_030_cs, &gpio_031_cs, &gpio_032_cs, &gpio_033_cs, &gpio_034_cs, &gpio_035_cs, &gpio_036_cs, &gpio_037_cs, NULL,
};

/******************IOMUX_BLOCK****************/

IOMUX_BLOCK(block_audio_es305_u9701l, "block_audio_es305_u9701l", NORMAL, audio_es305_u9701l_pins)
IOMUX_BLOCK(block_spi1_u9701l, "block_spi1_u9701l", NORMAL, spi1_u9701l_pins)
IOMUX_BLOCK(block_uart3_u9701l, "block_uart3_u9701l", NORMAL, uart3_u9701l_pins)
IOMUX_BLOCK(block_emmc_u9701l, "block_emmc_u9701l", NORMAL, emmc_u9701l_pins)

/******************normal func ****************/

enum lowlayer_func audio_es305_u9701l_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func spi1_u9701l_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func uart3_u9701l_func_normal[] = {FUNC2, FUNC2, FUNC2, FUNC2, -INVALID,};
enum lowlayer_func emmc_u9701l_func_normal[] = {FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, -INVALID,};

/******************lowpower func****************/

enum lowlayer_func audio_es305_u9701l_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func spi1_u9701l_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart3_u9701l_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func emmc_u9701l_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC0, FUNC0, -INVALID,};

/******************normal pullud****************/

enum pull_updown audio_es305_u9701l_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown spi1_u9701l_pullud_normal[] = {PULLUP, NOPULL, NOPULL, PULLDOWN, -INVALID,};
enum pull_updown uart3_u9701l_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown emmc_u9701l_pullud_normal[] = {PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, NOPULL, -INVALID,};

/******************lowpower pullud****************/

enum pull_updown audio_es305_u9701l_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown spi1_u9701l_pullud_lowpower[] = {PULLUP, NOPULL, NOPULL, PULLDOWN, -INVALID,};
enum pull_updown uart3_u9701l_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown emmc_u9701l_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};

/******************normal drv****************/

enum drive_strength audio_es305_u9701l_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength spi1_u9701l_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength uart3_u9701l_drv_normal[] = {LEVEL2, RESERVE, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength emmc_u9701l_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};

/******************lowpower drv****************/

enum drive_strength audio_es305_u9701l_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength spi1_u9701l_drv_lowpower[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength uart3_u9701l_drv_lowpower[] = {LEVEL2, RESERVE, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength emmc_u9701l_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};

/******************config****************/

struct block_config audio_es305_u9701l_config[] = {
	[NORMAL] = {audio_es305_u9701l_func_normal, audio_es305_u9701l_pullud_normal, audio_es305_u9701l_drv_normal},
	[LOWPOWER] = {audio_es305_u9701l_func_lowpower, audio_es305_u9701l_pullud_lowpower, audio_es305_u9701l_drv_lowpower},
};
struct block_config spi1_u9701l_config[] = {
	[NORMAL] = {spi1_u9701l_func_normal, spi1_u9701l_pullud_normal, spi1_u9701l_drv_normal},
	[LOWPOWER] = {spi1_u9701l_func_lowpower, spi1_u9701l_pullud_lowpower, spi1_u9701l_drv_lowpower},
};
struct block_config uart3_u9701l_config[] = {
	[NORMAL] = {uart3_u9701l_func_normal, uart3_u9701l_pullud_normal, uart3_u9701l_drv_normal},
	[LOWPOWER] = {uart3_u9701l_func_lowpower, uart3_u9701l_pullud_lowpower, uart3_u9701l_drv_lowpower},
};
struct block_config emmc_u9701l_config[] = {
	[NORMAL] = {emmc_u9701l_func_normal, emmc_u9701l_pullud_normal, emmc_u9701l_drv_normal},
	[LOWPOWER] = {emmc_u9701l_func_lowpower, emmc_u9701l_pullud_lowpower, emmc_u9701l_drv_lowpower},
};

struct block_table block_config_phone_u9701l[] = {
     BLOCK_CONFIG("block_i2c0", &block_i2c0_u9701l, i2c0_u9701l_config)
     BLOCK_CONFIG("block_i2c1", &block_i2c1_u9701l, i2c1_u9701l_config)
     BLOCK_CONFIG("block_i2c2", &block_i2c2_u9701l, i2c2_u9701l_config)
     BLOCK_CONFIG("block_i2c3", &block_i2c3_u9701l, i2c3_u9701l_config)
     BLOCK_CONFIG("block_spi0", &block_spi0_u9701l, spi0_u9701l_config)
     BLOCK_CONFIG("block_spi0_cs", &block_spi0_cs_u9701l, spi0_cs_u9701l_config)
     BLOCK_CONFIG("block_uart0", &block_uart0_u9701l, uart0_u9701l_config)
     BLOCK_CONFIG("block_uart1", &block_uart1_u9701l, uart1_u9701l_config)
     BLOCK_CONFIG("block_uart2", &block_uart2_u9701l, uart2_u9701l_config)
     BLOCK_CONFIG("block_uart4", &block_uart4_u9701l, uart4_u9701l_config)
     BLOCK_CONFIG("block_kpc", &block_kpc_u9701l, kpc_u9701l_config)
     BLOCK_CONFIG("block_sd", &block_sd_u9701l, sd_u9701l_config)
     BLOCK_CONFIG("block_nand", &block_nand_u9701l, nand_u9701l_config)
     BLOCK_CONFIG("block_sdio", &block_sdio_u9701l, sdio_u9701l_config)
     BLOCK_CONFIG("block_btpm", &block_btpm_u9701l, btpm_u9701l_config)
     BLOCK_CONFIG("block_btpwr", &block_btpwr_u9701l, btpwr_u9701l_config)
     BLOCK_CONFIG("block_gps_boardcom", &block_gps_boardcom_u9701l, gps_boardcom_u9701l_config)
     BLOCK_CONFIG("block_ts", &block_ts_u9701l, ts_u9701l_config)
     BLOCK_CONFIG("block_lcd", &block_lcd_u9701l, lcd_u9701l_config)
     BLOCK_CONFIG("block_pwm", &block_pwm_u9701l, pwm_u9701l_config)
     BLOCK_CONFIG("block_hdmi", &block_hdmi_u9701l, hdmi_u9701l_config)
     BLOCK_CONFIG("block_wifi", &block_wifi_u9701l, wifi_u9701l_config)
     BLOCK_CONFIG("block_isp_dvp", &block_isp_dvp_u9701l, isp_dvp_u9701l_config)
     BLOCK_CONFIG("block_isp_i2c", &block_isp_i2c_u9701l, isp_i2c_u9701l_config)
     BLOCK_CONFIG("block_isp_reset", &block_isp_reset_u9701l, isp_reset_u9701l_config)
     BLOCK_CONFIG("block_isp", &block_isp_u9701l, isp_u9701l_config)
     BLOCK_CONFIG("block_isp_flash", &block_isp_flash_u9701l, isp_flash_u9701l_config)
     BLOCK_CONFIG("block_charger", &block_charger_u9701l, charger_u9701l_config)
     BLOCK_CONFIG("block_gsensor", &block_gsensor_u9701l, gsensor_u9701l_config)
     BLOCK_CONFIG("block_audio_spk", &block_audio_spk_u9701l, audio_spk_u9701l_config)
     BLOCK_CONFIG("block_audio_eph", &block_audio_eph_u9701l, audio_eph_u9701l_config)
     BLOCK_CONFIG("block_modem", &block_modem_u9701l, modem_u9701l_config)
     BLOCK_CONFIG("block_vbusdrv", &block_vbusdrv_u9701l, vbusdrv_u9701l_config)
     BLOCK_CONFIG("block_gps_spi", &block_gps_spi_u9701l, gps_spi_u9701l_config)
     BLOCK_CONFIG("block_modem_switch", &block_modem_switch_u9701l, modem_switch_u9701l_config)
     BLOCK_CONFIG("block_mcamdvdd", &block_mcamdvdd_u9701l, mcamdvdd_u9701l_config)
     BLOCK_CONFIG("block_isdb", &block_isdb_u9701l, isdb_u9701l_config)
     BLOCK_CONFIG("block_gyroscope", &block_gyroscope_u9701l, gyroscope_u9701l_config)
     BLOCK_CONFIG("block_touchkey", &block_touchkey_u9701l, touchkey_u9701l_config)
     BLOCK_CONFIG("block_lsensor", &block_lsensor_u9701l, lsensor_u9701l_config)
     BLOCK_CONFIG("block_compass", &block_compass_u9701l, compass_u9701l_config)
     BLOCK_CONFIG("block_touchscreen", &block_touchscreen_u9701l, touchscreen_u9701l_config)
     BLOCK_CONFIG("block_thermometer", &block_thermometer_u9701l, thermometer_u9701l_config)
     BLOCK_CONFIG("block_mhl", &block_mhl_u9701l, mhl_u9701l_config)
     BLOCK_CONFIG("block_felica", &block_felica_u9701l, felica_u9701l_config)
     BLOCK_CONFIG("block_irda", &block_irda_u9701l, irda_u9701l_config)
     BLOCK_CONFIG("block_usb_switch", &block_usb_switch_u9701l, usb_switch_u9701l_config)
     BLOCK_CONFIG("block_cprm", &block_cprm_u9701l, cprm_u9701l_config)
     BLOCK_CONFIG("block_audio_es305", &block_audio_es305_u9701l, audio_es305_u9701l_config)
     BLOCK_CONFIG("block_spi1", &block_spi1_u9701l, spi1_u9701l_config)
     BLOCK_CONFIG("block_uart3", &block_uart3_u9701l, uart3_u9701l_config)
     BLOCK_CONFIG("block_emmc", &block_emmc_u9701l, emmc_u9701l_config)
     {NULL, NULL, NULL},
};


/******************pins ****************/

struct  iomux_pin *i2c0_g710c_pins[] = {
&gpio_084_cs, &gpio_085_cs, NULL,
};
struct  iomux_pin *i2c1_g710c_pins[] = {
&gpio_086_cs, &gpio_087_cs, NULL,
};
struct  iomux_pin *i2c2_g710c_pins[] = {
&gpio_063_cs, &gpio_064_cs, NULL,
};
struct  iomux_pin *i2c3_g710c_pins[] = {
&gpio_057_cs, &gpio_058_cs, NULL,
};
struct  iomux_pin *spi0_g710c_pins[] = {
&gpio_107_cs, &gpio_108_cs, NULL,
};
struct  iomux_pin *spi0_cs_g710c_pins[] = {
&gpio_109_cs, &gpio_110_cs, &gpio_111_cs, &gpio_112_cs, NULL,
};
struct  iomux_pin *uart0_g710c_pins[] = {
&gpio_119_cs, &gpio_120_cs, NULL,
};
struct  iomux_pin *uart1_g710c_pins[] = {
&gpio_121_cs, &gpio_122_cs, &gpio_123_cs, &gpio_124_cs, NULL,
};
struct  iomux_pin *uart2_g710c_pins[] = {
&gpio_127_cs, &gpio_128_cs, NULL,
};
struct  iomux_pin *uart4_g710c_pins[] = {
&gpio_162_cs, &gpio_163_cs, &gpio_164_cs, &gpio_165_cs, NULL,
};
struct  iomux_pin *kpc_g710c_pins[] = {
&gpio_137_cs, &gpio_138_cs, NULL,
};
struct  iomux_pin *sd_g710c_pins[] = {
&gpio_088_cs, &gpio_089_cs, &gpio_090_cs, &gpio_091_cs, &gpio_092_cs, &gpio_093_cs, NULL,
};
struct  iomux_pin *nand_g710c_pins[] = {
&gpio_010_cs, &gpio_011_cs, &gpio_012_cs, &gpio_013_cs, &gpio_014_cs, &gpio_015_cs, &gpio_016_cs, &gpio_017_cs, &gpio_018_cs, &gpio_019_cs, &gpio_020_cs, &gpio_021_cs, &gpio_022_cs, &gpio_023_cs, &gpio_024_cs, &gpio_025_cs, &gpio_026_cs, &gpio_028_cs, &gpio_029_cs, &gpio_030_cs, &gpio_031_cs, &gpio_032_cs, &gpio_033_cs, &gpio_034_cs, &gpio_035_cs, NULL,
};
struct  iomux_pin *sdio_g710c_pins[] = {
&gpio_100_cs, &gpio_101_cs, &gpio_102_cs, &gpio_103_cs, &gpio_104_cs, &gpio_105_cs, NULL,
};
struct  iomux_pin *btpm_g710c_pins[] = {
&gpio_166_cs, &gpio_167_cs, NULL,
};
struct  iomux_pin *btpwr_g710c_pins[] = {
&gpio_168_cs, &gpio_169_cs, NULL,
};
struct  iomux_pin *gps_boardcom_g710c_pins[] = {
NULL,
};
struct  iomux_pin *ts_g710c_pins[] = {
&gpio_156_cs, &gpio_157_cs, NULL,
};
struct  iomux_pin *lcd_g710c_pins[] = {
&gpio_003_cs, &gpio_072_cs, &gpio_129_cs, &gpio_130_cs, &gpio_171_cs, NULL,
};
struct  iomux_pin *pwm_g710c_pins[] = {
NULL,
};
struct  iomux_pin *hdmi_g710c_pins[] = {
&gpio_038_cs, &gpio_039_cs, &gpio_040_cs, &gpio_041_cs, NULL,
};
struct  iomux_pin *wifi_g710c_pins[] = {
&gpio_002_cs, &gpio_004_cs, NULL,
};
struct  iomux_pin *isp_dvp_g710c_pins[] = {
&gpio_043_cs, &gpio_044_cs, &gpio_045_cs, &gpio_046_cs, &gpio_047_cs, &gpio_048_cs, &gpio_049_cs, &gpio_054_cs, NULL,
};
struct  iomux_pin *isp_i2c_g710c_pins[] = {
&gpio_055_cs, &gpio_056_cs, NULL,
};
struct  iomux_pin *isp_reset_g710c_pins[] = {
&gpio_059_cs, &gpio_060_cs, NULL,
};
struct  iomux_pin *isp_g710c_pins[] = {
&gpio_067_cs, &gpio_068_cs, &gpio_069_cs, &gpio_070_cs, &gpio_071_cs, &gpio_075_cs, NULL,
};
struct  iomux_pin *isp_flash_g710c_pins[] = {
&gpio_065_cs, &gpio_066_cs, &gpio_076_cs, NULL,
};
struct  iomux_pin *charger_g710c_pins[] = {
&gpio_005_cs, &gpio_074_cs, NULL,
};
struct  iomux_pin *gsensor_g710c_pins[] = {
&gpio_051_cs, &gpio_148_cs, NULL,
};
struct  iomux_pin *audio_spk_g710c_pins[] = {
&gpio_117_cs, &gpio_139_cs, NULL,
};
struct  iomux_pin *audio_eph_g710c_pins[] = {
&gpio_118_cs, NULL,
};
struct  iomux_pin *modem_g710c_pins[] = {
&gpio_094_cs, &gpio_095_cs, &gpio_096_cs, &gpio_097_cs, &gpio_098_cs, &gpio_113_cs, &gpio_114_cs, &gpio_115_cs, NULL,
};
struct  iomux_pin *vbusdrv_g710c_pins[] = {
&gpio_082_cs, NULL,
};
struct  iomux_pin *gps_spi_g710c_pins[] = {
&gpio_154_cs, &gpio_155_cs, &gpio_160_cs, &gpio_161_cs, NULL,
};
struct  iomux_pin *modem_switch_g710c_pins[] = {
&gpio_106_cs, NULL,
};
struct  iomux_pin *mcamdvdd_g710c_pins[] = {
&gpio_073_cs, NULL,
};
struct  iomux_pin *usb_switch_g710c_pins[] = {
&gpio_008_cs, &gpio_009_cs, &gpio_027_cs, &gpio_042_cs, &gpio_052_cs, &gpio_053_cs, &gpio_099_cs, &gpio_174_cs, NULL,
};
struct  iomux_pin *modem_qsc_g710c_pins[] = {
&gpio_006_cs, NULL,
};
struct  iomux_pin *sensor_gyr_g710c_pins[] = {
NULL,
};
struct  iomux_pin *headset_uart_g710c_pins[] = {
NULL,
};
struct  iomux_pin *mhl_g710c_pins[] = {
&gpio_080_cs, &gpio_081_cs, NULL,
};
struct  iomux_pin *sensor_com_g710c_pins[] = {
&gpio_125_cs, NULL,
};
struct  iomux_pin *sensor_pro_g710c_pins[] = {
&gpio_126_cs, NULL,
};
struct  iomux_pin *therm_g710c_pins[] = {
&gpio_132_cs, NULL,
};
struct  iomux_pin *es305_g710c_pins[] = {
&gpio_145_cs, &gpio_146_cs, NULL,
};
struct  iomux_pin *pmu_g710c_pins[] = {
&gpio_158_cs, &gpio_159_cs, NULL,
};
struct  iomux_pin *battery_g710c_pins[] = {
&gpio_170_cs, NULL,
};
struct  iomux_pin *camera_g710c_pins[] = {
&gpio_173_cs, NULL,
};

/******************IOMUX_BLOCK****************/

IOMUX_BLOCK(block_i2c0_g710c, "block_i2c0_g710c", NORMAL, i2c0_g710c_pins)
IOMUX_BLOCK(block_i2c1_g710c, "block_i2c1_g710c", NORMAL, i2c1_g710c_pins)
IOMUX_BLOCK(block_i2c2_g710c, "block_i2c2_g710c", NORMAL, i2c2_g710c_pins)
IOMUX_BLOCK(block_i2c3_g710c, "block_i2c3_g710c", NORMAL, i2c3_g710c_pins)
IOMUX_BLOCK(block_spi0_g710c, "block_spi0_g710c", NORMAL, spi0_g710c_pins)
IOMUX_BLOCK(block_spi0_cs_g710c, "block_spi0_cs_g710c", NORMAL, spi0_cs_g710c_pins)
IOMUX_BLOCK(block_uart0_g710c, "block_uart0_g710c", NORMAL, uart0_g710c_pins)
IOMUX_BLOCK(block_uart1_g710c, "block_uart1_g710c", NORMAL, uart1_g710c_pins)
IOMUX_BLOCK(block_uart2_g710c, "block_uart2_g710c", NORMAL, uart2_g710c_pins)
IOMUX_BLOCK(block_uart4_g710c, "block_uart4_g710c", NORMAL, uart4_g710c_pins)
IOMUX_BLOCK(block_kpc_g710c, "block_kpc_g710c", NORMAL, kpc_g710c_pins)
IOMUX_BLOCK(block_sd_g710c, "block_sd_g710c", NORMAL, sd_g710c_pins)
IOMUX_BLOCK(block_nand_g710c, "block_nand_g710c", NORMAL, nand_g710c_pins)
IOMUX_BLOCK(block_sdio_g710c, "block_sdio_g710c", NORMAL, sdio_g710c_pins)
IOMUX_BLOCK(block_btpm_g710c, "block_btpm_g710c", NORMAL, btpm_g710c_pins)
IOMUX_BLOCK(block_btpwr_g710c, "block_btpwr_g710c", NORMAL, btpwr_g710c_pins)
IOMUX_BLOCK(block_gps_boardcom_g710c, "block_gps_boardcom_g710c", NORMAL, gps_boardcom_g710c_pins)
IOMUX_BLOCK(block_ts_g710c, "block_ts_g710c", NORMAL, ts_g710c_pins)
IOMUX_BLOCK(block_lcd_g710c, "block_lcd_g710c", NORMAL, lcd_g710c_pins)
IOMUX_BLOCK(block_pwm_g710c, "block_pwm_g710c", NORMAL, pwm_g710c_pins)
IOMUX_BLOCK(block_hdmi_g710c, "block_hdmi_g710c", NORMAL, hdmi_g710c_pins)
IOMUX_BLOCK(block_wifi_g710c, "block_wifi_g710c", NORMAL, wifi_g710c_pins)
IOMUX_BLOCK(block_isp_dvp_g710c, "block_isp_dvp_g710c", NORMAL, isp_dvp_g710c_pins)
IOMUX_BLOCK(block_isp_i2c_g710c, "block_isp_i2c_g710c", NORMAL, isp_i2c_g710c_pins)
IOMUX_BLOCK(block_isp_reset_g710c, "block_isp_reset_g710c", NORMAL, isp_reset_g710c_pins)
IOMUX_BLOCK(block_isp_g710c, "block_isp_g710c", NORMAL, isp_g710c_pins)
IOMUX_BLOCK(block_isp_flash_g710c, "block_isp_flash_g710c", NORMAL, isp_flash_g710c_pins)
IOMUX_BLOCK(block_charger_g710c, "block_charger_g710c", NORMAL, charger_g710c_pins)
IOMUX_BLOCK(block_gsensor_g710c, "block_gsensor_g710c", NORMAL, gsensor_g710c_pins)
IOMUX_BLOCK(block_audio_spk_g710c, "block_audio_spk_g710c", NORMAL, audio_spk_g710c_pins)
IOMUX_BLOCK(block_audio_eph_g710c, "block_audio_eph_g710c", NORMAL, audio_eph_g710c_pins)
IOMUX_BLOCK(block_modem_g710c, "block_modem_g710c", NORMAL, modem_g710c_pins)
IOMUX_BLOCK(block_vbusdrv_g710c, "block_vbusdrv_g710c", NORMAL, vbusdrv_g710c_pins)
IOMUX_BLOCK(block_gps_spi_g710c, "block_gps_spi_g710c", NORMAL, gps_spi_g710c_pins)
IOMUX_BLOCK(block_modem_switch_g710c, "block_modem_switch_g710c", NORMAL, modem_switch_g710c_pins)
IOMUX_BLOCK(block_mcamdvdd_g710c, "block_mcamdvdd_g710c", NORMAL, mcamdvdd_g710c_pins)
IOMUX_BLOCK(block_usb_switch_g710c, "block_usb_switch_g710c", NORMAL, usb_switch_g710c_pins)
IOMUX_BLOCK(block_modem_qsc_g710c, "block_modem_qsc_g710c", NORMAL, modem_qsc_g710c_pins)
IOMUX_BLOCK(block_sensor_gyr_g710c, "block_sensor_gyr_g710c", NORMAL, sensor_gyr_g710c_pins)
IOMUX_BLOCK(block_headset_uart_g710c, "block_headset_uart_g710c", NORMAL, headset_uart_g710c_pins)
IOMUX_BLOCK(block_mhl_g710c, "block_mhl_g710c", NORMAL, mhl_g710c_pins)
IOMUX_BLOCK(block_sensor_com_g710c, "block_sensor_com_g710c", NORMAL, sensor_com_g710c_pins)
IOMUX_BLOCK(block_sensor_pro_g710c, "block_sensor_pro_g710c", NORMAL, sensor_pro_g710c_pins)
IOMUX_BLOCK(block_therm_g710c, "block_therm_g710c", NORMAL, therm_g710c_pins)
IOMUX_BLOCK(block_es305_g710c, "block_es305_g710c", NORMAL, es305_g710c_pins)
IOMUX_BLOCK(block_pmu_g710c, "block_pmu_g710c", NORMAL, pmu_g710c_pins)
IOMUX_BLOCK(block_battery_g710c, "block_battery_g710c", NORMAL, battery_g710c_pins)
IOMUX_BLOCK(block_camera_g710c, "block_camera_g710c", NORMAL, camera_g710c_pins)

/******************normal func ****************/

enum lowlayer_func i2c0_g710c_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func i2c1_g710c_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func i2c2_g710c_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func i2c3_g710c_func_normal[] = {FUNC2, FUNC2, -INVALID,};
enum lowlayer_func spi0_g710c_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func spi0_cs_g710c_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func uart0_g710c_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func uart1_g710c_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func uart2_g710c_func_normal[] = {FUNC2, FUNC2, -INVALID,};
enum lowlayer_func uart4_g710c_func_normal[] = {FUNC2, FUNC2, FUNC2, FUNC2, -INVALID,};
enum lowlayer_func kpc_g710c_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func sd_g710c_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func nand_g710c_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func sdio_g710c_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func btpm_g710c_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func btpwr_g710c_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func gps_boardcom_g710c_func_normal[] = {-INVALID,};
enum lowlayer_func ts_g710c_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func lcd_g710c_func_normal[] = {FUNC0, FUNC2, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func pwm_g710c_func_normal[] = {-INVALID,};
enum lowlayer_func hdmi_g710c_func_normal[] = {FUNC1, FUNC1, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func wifi_g710c_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_dvp_g710c_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_i2c_g710c_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_reset_g710c_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_g710c_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_flash_g710c_func_normal[] = {FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func charger_g710c_func_normal[] = {FUNC0, FUNC1, -INVALID,};
enum lowlayer_func gsensor_g710c_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func audio_spk_g710c_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func audio_eph_g710c_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func modem_g710c_func_normal[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func vbusdrv_g710c_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func gps_spi_g710c_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func modem_switch_g710c_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func mcamdvdd_g710c_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func usb_switch_g710c_func_normal[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC0, -INVALID,};
enum lowlayer_func modem_qsc_g710c_func_normal[] = {FUNC0, -INVALID,};
enum lowlayer_func sensor_gyr_g710c_func_normal[] = {-INVALID,};
enum lowlayer_func headset_uart_g710c_func_normal[] = {-INVALID,};
enum lowlayer_func mhl_g710c_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func sensor_com_g710c_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func sensor_pro_g710c_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func therm_g710c_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func es305_g710c_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func pmu_g710c_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func battery_g710c_func_normal[] = {FUNC0, -INVALID,};
enum lowlayer_func camera_g710c_func_normal[] = {FUNC0, -INVALID,};

/******************lowpower func****************/

enum lowlayer_func i2c0_g710c_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func i2c1_g710c_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func i2c2_g710c_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func i2c3_g710c_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func spi0_g710c_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func spi0_cs_g710c_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart0_g710c_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart1_g710c_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart2_g710c_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart4_g710c_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func kpc_g710c_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func sd_g710c_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func nand_g710c_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func sdio_g710c_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func btpm_g710c_func_lowpower[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func btpwr_g710c_func_lowpower[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func gps_boardcom_g710c_func_lowpower[] = {-INVALID,};
enum lowlayer_func ts_g710c_func_lowpower[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func lcd_g710c_func_lowpower[] = {FUNC0, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func pwm_g710c_func_lowpower[] = {-INVALID,};
enum lowlayer_func hdmi_g710c_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func wifi_g710c_func_lowpower[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_dvp_g710c_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func isp_i2c_g710c_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func isp_reset_g710c_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func isp_g710c_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC0, -INVALID,};
enum lowlayer_func isp_flash_g710c_func_lowpower[] = {FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func charger_g710c_func_lowpower[] = {FUNC0, FUNC1, -INVALID,};
enum lowlayer_func gsensor_g710c_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func audio_spk_g710c_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func audio_eph_g710c_func_lowpower[] = {FUNC1, -INVALID,};
enum lowlayer_func modem_g710c_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func vbusdrv_g710c_func_lowpower[] = {FUNC0, -INVALID,};
enum lowlayer_func gps_spi_g710c_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func modem_switch_g710c_func_lowpower[] = {FUNC1, -INVALID,};
enum lowlayer_func mcamdvdd_g710c_func_lowpower[] = {FUNC1, -INVALID,};
enum lowlayer_func usb_switch_g710c_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC0, -INVALID,};
enum lowlayer_func modem_qsc_g710c_func_lowpower[] = {FUNC0, -INVALID,};
enum lowlayer_func sensor_gyr_g710c_func_lowpower[] = {-INVALID,};
enum lowlayer_func headset_uart_g710c_func_lowpower[] = {-INVALID,};
enum lowlayer_func mhl_g710c_func_lowpower[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func sensor_com_g710c_func_lowpower[] = {FUNC1, -INVALID,};
enum lowlayer_func sensor_pro_g710c_func_lowpower[] = {FUNC1, -INVALID,};
enum lowlayer_func therm_g710c_func_lowpower[] = {FUNC1, -INVALID,};
enum lowlayer_func es305_g710c_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func pmu_g710c_func_lowpower[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func battery_g710c_func_lowpower[] = {FUNC0, -INVALID,};
enum lowlayer_func camera_g710c_func_lowpower[] = {FUNC0, -INVALID,};

/******************normal pullud****************/

enum pull_updown i2c0_g710c_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c1_g710c_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c2_g710c_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c3_g710c_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown spi0_g710c_pullud_normal[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown spi0_cs_g710c_pullud_normal[] = {PULLDOWN, PULLDOWN, NOPULL, NOPULL, -INVALID,};
enum pull_updown uart0_g710c_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown uart1_g710c_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown uart2_g710c_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown uart4_g710c_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown kpc_g710c_pullud_normal[] = {PULLUP, PULLUP, -INVALID,};
enum pull_updown sd_g710c_pullud_normal[] = {NOPULL, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, -INVALID,};
enum pull_updown nand_g710c_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown sdio_g710c_pullud_normal[] = {NOPULL, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, -INVALID,};
enum pull_updown btpm_g710c_pullud_normal[] = {PULLUP, NOPULL, -INVALID,};
enum pull_updown btpwr_g710c_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown gps_boardcom_g710c_pullud_normal[] = {-INVALID,};
enum pull_updown ts_g710c_pullud_normal[] = {NOPULL, PULLUP, -INVALID,};
enum pull_updown lcd_g710c_pullud_normal[] = {NOPULL, PULLDOWN, PULLUP, PULLUP, NOPULL, -INVALID,};
enum pull_updown pwm_g710c_pullud_normal[] = {-INVALID,};
enum pull_updown hdmi_g710c_pullud_normal[] = {PULLDOWN, PULLDOWN, NOPULL, NOPULL, -INVALID,};
enum pull_updown wifi_g710c_pullud_normal[] = {NOPULL, PULLDOWN, -INVALID,};
enum pull_updown isp_dvp_g710c_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_i2c_g710c_pullud_normal[] = {PULLUP, PULLUP, -INVALID,};
enum pull_updown isp_reset_g710c_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_g710c_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_flash_g710c_pullud_normal[] = {NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown charger_g710c_pullud_normal[] = {PULLUP, NOPULL, -INVALID,};
enum pull_updown gsensor_g710c_pullud_normal[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown audio_spk_g710c_pullud_normal[] = {NOPULL, PULLUP, -INVALID,};
enum pull_updown audio_eph_g710c_pullud_normal[] = {NOPULL, -INVALID,};
enum pull_updown modem_g710c_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown vbusdrv_g710c_pullud_normal[] = {NOPULL, -INVALID,};
enum pull_updown gps_spi_g710c_pullud_normal[] = {NOPULL, NOPULL, NOPULL, PULLDOWN, -INVALID,};
enum pull_updown modem_switch_g710c_pullud_normal[] = {NOPULL, -INVALID,};
enum pull_updown mcamdvdd_g710c_pullud_normal[] = {NOPULL, -INVALID,};
enum pull_updown usb_switch_g710c_pullud_normal[] = {NOPULL, NOPULL, PULLUP, NOPULL, PULLDOWN, PULLDOWN, NOPULL, NOPULL, -INVALID,};
enum pull_updown modem_qsc_g710c_pullud_normal[] = {NOPULL, -INVALID,};
enum pull_updown sensor_gyr_g710c_pullud_normal[] = {-INVALID,};
enum pull_updown headset_uart_g710c_pullud_normal[] = {-INVALID,};
enum pull_updown mhl_g710c_pullud_normal[] = {PULLUP, PULLDOWN, -INVALID,};
enum pull_updown sensor_com_g710c_pullud_normal[] = {PULLDOWN, -INVALID,};
enum pull_updown sensor_pro_g710c_pullud_normal[] = {PULLUP, -INVALID,};
enum pull_updown therm_g710c_pullud_normal[] = {NOPULL, -INVALID,};
enum pull_updown es305_g710c_pullud_normal[] = {NOPULL, PULLDOWN, -INVALID,};
enum pull_updown pmu_g710c_pullud_normal[] = {NOPULL, PULLUP, -INVALID,};
enum pull_updown battery_g710c_pullud_normal[] = {PULLUP, -INVALID,};
enum pull_updown camera_g710c_pullud_normal[] = {PULLDOWN, -INVALID,};

/******************lowpower pullud****************/

enum pull_updown i2c0_g710c_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c1_g710c_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c2_g710c_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c3_g710c_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown spi0_g710c_pullud_lowpower[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown spi0_cs_g710c_pullud_lowpower[] = {PULLDOWN, NOPULL, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown uart0_g710c_pullud_lowpower[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown uart1_g710c_pullud_lowpower[] = {NOPULL, PULLUP, NOPULL, PULLDOWN, -INVALID,};
enum pull_updown uart2_g710c_pullud_lowpower[] = {NOPULL, PULLDOWN, -INVALID,};
enum pull_updown uart4_g710c_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown kpc_g710c_pullud_lowpower[] = {PULLUP, PULLUP, -INVALID,};
enum pull_updown sd_g710c_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown nand_g710c_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, NOPULL, NOPULL, NOPULL, PULLDOWN, NOPULL, NOPULL, NOPULL, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown sdio_g710c_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown btpm_g710c_pullud_lowpower[] = {PULLUP, NOPULL, -INVALID,};
enum pull_updown btpwr_g710c_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown gps_boardcom_g710c_pullud_lowpower[] = {-INVALID,};
enum pull_updown ts_g710c_pullud_lowpower[] = {NOPULL, PULLUP, -INVALID,};
enum pull_updown lcd_g710c_pullud_lowpower[] = {NOPULL, PULLDOWN, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown pwm_g710c_pullud_lowpower[] = {-INVALID,};
enum pull_updown hdmi_g710c_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown wifi_g710c_pullud_lowpower[] = {NOPULL, PULLDOWN, -INVALID,};
enum pull_updown isp_dvp_g710c_pullud_lowpower[] = {NOPULL, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown isp_i2c_g710c_pullud_lowpower[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown isp_reset_g710c_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_g710c_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_flash_g710c_pullud_lowpower[] = {NOPULL, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown charger_g710c_pullud_lowpower[] = {PULLUP, NOPULL, -INVALID,};
enum pull_updown gsensor_g710c_pullud_lowpower[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown audio_spk_g710c_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown audio_eph_g710c_pullud_lowpower[] = {PULLDOWN, -INVALID,};
enum pull_updown modem_g710c_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, PULLDOWN, -INVALID,};
enum pull_updown vbusdrv_g710c_pullud_lowpower[] = {PULLDOWN, -INVALID,};
enum pull_updown gps_spi_g710c_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown modem_switch_g710c_pullud_lowpower[] = {NOPULL, -INVALID,};
enum pull_updown mcamdvdd_g710c_pullud_lowpower[] = {NOPULL, -INVALID,};
enum pull_updown usb_switch_g710c_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, NOPULL, PULLDOWN, PULLDOWN, PULLDOWN, NOPULL, -INVALID,};
enum pull_updown modem_qsc_g710c_pullud_lowpower[] = {NOPULL, -INVALID,};
enum pull_updown sensor_gyr_g710c_pullud_lowpower[] = {-INVALID,};
enum pull_updown headset_uart_g710c_pullud_lowpower[] = {-INVALID,};
enum pull_updown mhl_g710c_pullud_lowpower[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown sensor_com_g710c_pullud_lowpower[] = {PULLDOWN, -INVALID,};
enum pull_updown sensor_pro_g710c_pullud_lowpower[] = {PULLUP, -INVALID,};
enum pull_updown therm_g710c_pullud_lowpower[] = {PULLDOWN, -INVALID,};
enum pull_updown es305_g710c_pullud_lowpower[] = {NOPULL, PULLDOWN, -INVALID,};
enum pull_updown pmu_g710c_pullud_lowpower[] = {NOPULL, PULLUP, -INVALID,};
enum pull_updown battery_g710c_pullud_lowpower[] = {PULLUP, -INVALID,};
enum pull_updown camera_g710c_pullud_lowpower[] = {PULLDOWN, -INVALID,};

/******************normal drv****************/

enum drive_strength i2c0_g710c_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c1_g710c_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c2_g710c_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c3_g710c_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength spi0_g710c_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength spi0_cs_g710c_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength uart0_g710c_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength uart1_g710c_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength uart2_g710c_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength uart4_g710c_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength kpc_g710c_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength sd_g710c_drv_normal[] = {LEVEL2, LEVEL3, LEVEL3, LEVEL3, LEVEL3, LEVEL3, -INVALID,};
enum drive_strength nand_g710c_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, RESERVE, RESERVE, RESERVE, RESERVE, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength sdio_g710c_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength btpm_g710c_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength btpwr_g710c_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength gps_boardcom_g710c_drv_normal[] = {-INVALID,};
enum drive_strength ts_g710c_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength lcd_g710c_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength pwm_g710c_drv_normal[] = {-INVALID,};
enum drive_strength hdmi_g710c_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength wifi_g710c_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_dvp_g710c_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_i2c_g710c_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_reset_g710c_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_g710c_drv_normal[] = {LEVEL0, LEVEL0, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_flash_g710c_drv_normal[] = {RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength charger_g710c_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength gsensor_g710c_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength audio_spk_g710c_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength audio_eph_g710c_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength modem_g710c_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength vbusdrv_g710c_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength gps_spi_g710c_drv_normal[] = {LEVEL2, RESERVE, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength modem_switch_g710c_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength mcamdvdd_g710c_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength usb_switch_g710c_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength modem_qsc_g710c_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength sensor_gyr_g710c_drv_normal[] = {-INVALID,};
enum drive_strength headset_uart_g710c_drv_normal[] = {-INVALID,};
enum drive_strength mhl_g710c_drv_normal[] = {RESERVE, LEVEL0, -INVALID,};
enum drive_strength sensor_com_g710c_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength sensor_pro_g710c_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength therm_g710c_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength es305_g710c_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength pmu_g710c_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength battery_g710c_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength camera_g710c_drv_normal[] = {RESERVE, -INVALID,};

/******************lowpower drv****************/

enum drive_strength i2c0_g710c_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c1_g710c_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c2_g710c_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c3_g710c_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength spi0_g710c_drv_lowpower[] = {LEVEL0, LEVEL0, -INVALID,};
enum drive_strength spi0_cs_g710c_drv_lowpower[] = {LEVEL0, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength uart0_g710c_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength uart1_g710c_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength uart2_g710c_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength uart4_g710c_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength kpc_g710c_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength sd_g710c_drv_lowpower[] = {LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, -INVALID,};
enum drive_strength nand_g710c_drv_lowpower[] = {LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, RESERVE, LEVEL0, LEVEL2, LEVEL2, LEVEL2, LEVEL0, LEVEL2, LEVEL2, LEVEL2, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, -INVALID,};
enum drive_strength sdio_g710c_drv_lowpower[] = {LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, -INVALID,};
enum drive_strength btpm_g710c_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength btpwr_g710c_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength gps_boardcom_g710c_drv_lowpower[] = {-INVALID,};
enum drive_strength ts_g710c_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength lcd_g710c_drv_lowpower[] = {RESERVE, RESERVE, LEVEL0, LEVEL0, RESERVE, -INVALID,};
enum drive_strength pwm_g710c_drv_lowpower[] = {-INVALID,};
enum drive_strength hdmi_g710c_drv_lowpower[] = {LEVEL0, LEVEL0, LEVEL0, LEVEL0, -INVALID,};
enum drive_strength wifi_g710c_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_dvp_g710c_drv_lowpower[] = {LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, -INVALID,};
enum drive_strength isp_i2c_g710c_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_reset_g710c_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_g710c_drv_lowpower[] = {LEVEL0, LEVEL0, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_flash_g710c_drv_lowpower[] = {RESERVE, LEVEL0, LEVEL0, -INVALID,};
enum drive_strength charger_g710c_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength gsensor_g710c_drv_lowpower[] = {LEVEL0, RESERVE, -INVALID,};
enum drive_strength audio_spk_g710c_drv_lowpower[] = {LEVEL0, RESERVE, -INVALID,};
enum drive_strength audio_eph_g710c_drv_lowpower[] = {LEVEL0, -INVALID,};
enum drive_strength modem_g710c_drv_lowpower[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL0, -INVALID,};
enum drive_strength vbusdrv_g710c_drv_lowpower[] = {LEVEL0, -INVALID,};
enum drive_strength gps_spi_g710c_drv_lowpower[] = {RESERVE, RESERVE, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength modem_switch_g710c_drv_lowpower[] = {RESERVE, -INVALID,};
enum drive_strength mcamdvdd_g710c_drv_lowpower[] = {RESERVE, -INVALID,};
enum drive_strength usb_switch_g710c_drv_lowpower[] = {LEVEL2, LEVEL2, LEVEL2, RESERVE, LEVEL0, LEVEL0, RESERVE, RESERVE, -INVALID,};
enum drive_strength modem_qsc_g710c_drv_lowpower[] = {RESERVE, -INVALID,};
enum drive_strength sensor_gyr_g710c_drv_lowpower[] = {-INVALID,};
enum drive_strength headset_uart_g710c_drv_lowpower[] = {-INVALID,};
enum drive_strength mhl_g710c_drv_lowpower[] = {LEVEL0, LEVEL0, -INVALID,};
enum drive_strength sensor_com_g710c_drv_lowpower[] = {RESERVE, -INVALID,};
enum drive_strength sensor_pro_g710c_drv_lowpower[] = {RESERVE, -INVALID,};
enum drive_strength therm_g710c_drv_lowpower[] = {LEVEL0, -INVALID,};
enum drive_strength es305_g710c_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength pmu_g710c_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength battery_g710c_drv_lowpower[] = {RESERVE, -INVALID,};
enum drive_strength camera_g710c_drv_lowpower[] = {LEVEL0, -INVALID,};

/******************config****************/

struct block_config i2c0_g710c_config[] = {
	[NORMAL] = {i2c0_g710c_func_normal, i2c0_g710c_pullud_normal, i2c0_g710c_drv_normal},
	[LOWPOWER] = {i2c0_g710c_func_lowpower, i2c0_g710c_pullud_lowpower, i2c0_g710c_drv_lowpower},
};
struct block_config i2c1_g710c_config[] = {
	[NORMAL] = {i2c1_g710c_func_normal, i2c1_g710c_pullud_normal, i2c1_g710c_drv_normal},
	[LOWPOWER] = {i2c1_g710c_func_lowpower, i2c1_g710c_pullud_lowpower, i2c1_g710c_drv_lowpower},
};
struct block_config i2c2_g710c_config[] = {
	[NORMAL] = {i2c2_g710c_func_normal, i2c2_g710c_pullud_normal, i2c2_g710c_drv_normal},
	[LOWPOWER] = {i2c2_g710c_func_lowpower, i2c2_g710c_pullud_lowpower, i2c2_g710c_drv_lowpower},
};
struct block_config i2c3_g710c_config[] = {
	[NORMAL] = {i2c3_g710c_func_normal, i2c3_g710c_pullud_normal, i2c3_g710c_drv_normal},
	[LOWPOWER] = {i2c3_g710c_func_lowpower, i2c3_g710c_pullud_lowpower, i2c3_g710c_drv_lowpower},
};
struct block_config spi0_g710c_config[] = {
	[NORMAL] = {spi0_g710c_func_normal, spi0_g710c_pullud_normal, spi0_g710c_drv_normal},
	[LOWPOWER] = {spi0_g710c_func_lowpower, spi0_g710c_pullud_lowpower, spi0_g710c_drv_lowpower},
};
struct block_config spi0_cs_g710c_config[] = {
	[NORMAL] = {spi0_cs_g710c_func_normal, spi0_cs_g710c_pullud_normal, spi0_cs_g710c_drv_normal},
	[LOWPOWER] = {spi0_cs_g710c_func_lowpower, spi0_cs_g710c_pullud_lowpower, spi0_cs_g710c_drv_lowpower},
};
struct block_config uart0_g710c_config[] = {
	[NORMAL] = {uart0_g710c_func_normal, uart0_g710c_pullud_normal, uart0_g710c_drv_normal},
	[LOWPOWER] = {uart0_g710c_func_lowpower, uart0_g710c_pullud_lowpower, uart0_g710c_drv_lowpower},
};
struct block_config uart1_g710c_config[] = {
	[NORMAL] = {uart1_g710c_func_normal, uart1_g710c_pullud_normal, uart1_g710c_drv_normal},
	[LOWPOWER] = {uart1_g710c_func_lowpower, uart1_g710c_pullud_lowpower, uart1_g710c_drv_lowpower},
};
struct block_config uart2_g710c_config[] = {
	[NORMAL] = {uart2_g710c_func_normal, uart2_g710c_pullud_normal, uart2_g710c_drv_normal},
	[LOWPOWER] = {uart2_g710c_func_lowpower, uart2_g710c_pullud_lowpower, uart2_g710c_drv_lowpower},
};
struct block_config uart4_g710c_config[] = {
	[NORMAL] = {uart4_g710c_func_normal, uart4_g710c_pullud_normal, uart4_g710c_drv_normal},
	[LOWPOWER] = {uart4_g710c_func_lowpower, uart4_g710c_pullud_lowpower, uart4_g710c_drv_lowpower},
};
struct block_config kpc_g710c_config[] = {
	[NORMAL] = {kpc_g710c_func_normal, kpc_g710c_pullud_normal, kpc_g710c_drv_normal},
	[LOWPOWER] = {kpc_g710c_func_lowpower, kpc_g710c_pullud_lowpower, kpc_g710c_drv_lowpower},
};
struct block_config sd_g710c_config[] = {
	[NORMAL] = {sd_g710c_func_normal, sd_g710c_pullud_normal, sd_g710c_drv_normal},
	[LOWPOWER] = {sd_g710c_func_lowpower, sd_g710c_pullud_lowpower, sd_g710c_drv_lowpower},
};
struct block_config nand_g710c_config[] = {
	[NORMAL] = {nand_g710c_func_normal, nand_g710c_pullud_normal, nand_g710c_drv_normal},
	[LOWPOWER] = {nand_g710c_func_lowpower, nand_g710c_pullud_lowpower, nand_g710c_drv_lowpower},
};
struct block_config sdio_g710c_config[] = {
	[NORMAL] = {sdio_g710c_func_normal, sdio_g710c_pullud_normal, sdio_g710c_drv_normal},
	[LOWPOWER] = {sdio_g710c_func_lowpower, sdio_g710c_pullud_lowpower, sdio_g710c_drv_lowpower},
};
struct block_config btpm_g710c_config[] = {
	[NORMAL] = {btpm_g710c_func_normal, btpm_g710c_pullud_normal, btpm_g710c_drv_normal},
	[LOWPOWER] = {btpm_g710c_func_lowpower, btpm_g710c_pullud_lowpower, btpm_g710c_drv_lowpower},
};
struct block_config btpwr_g710c_config[] = {
	[NORMAL] = {btpwr_g710c_func_normal, btpwr_g710c_pullud_normal, btpwr_g710c_drv_normal},
	[LOWPOWER] = {btpwr_g710c_func_lowpower, btpwr_g710c_pullud_lowpower, btpwr_g710c_drv_lowpower},
};
struct block_config gps_boardcom_g710c_config[] = {
	[NORMAL] = {gps_boardcom_g710c_func_normal, gps_boardcom_g710c_pullud_normal, gps_boardcom_g710c_drv_normal},
	[LOWPOWER] = {gps_boardcom_g710c_func_lowpower, gps_boardcom_g710c_pullud_lowpower, gps_boardcom_g710c_drv_lowpower},
};
struct block_config ts_g710c_config[] = {
	[NORMAL] = {ts_g710c_func_normal, ts_g710c_pullud_normal, ts_g710c_drv_normal},
	[LOWPOWER] = {ts_g710c_func_lowpower, ts_g710c_pullud_lowpower, ts_g710c_drv_lowpower},
};
struct block_config lcd_g710c_config[] = {
	[NORMAL] = {lcd_g710c_func_normal, lcd_g710c_pullud_normal, lcd_g710c_drv_normal},
	[LOWPOWER] = {lcd_g710c_func_lowpower, lcd_g710c_pullud_lowpower, lcd_g710c_drv_lowpower},
};
struct block_config pwm_g710c_config[] = {
	[NORMAL] = {pwm_g710c_func_normal, pwm_g710c_pullud_normal, pwm_g710c_drv_normal},
	[LOWPOWER] = {pwm_g710c_func_lowpower, pwm_g710c_pullud_lowpower, pwm_g710c_drv_lowpower},
};
struct block_config hdmi_g710c_config[] = {
	[NORMAL] = {hdmi_g710c_func_normal, hdmi_g710c_pullud_normal, hdmi_g710c_drv_normal},
	[LOWPOWER] = {hdmi_g710c_func_lowpower, hdmi_g710c_pullud_lowpower, hdmi_g710c_drv_lowpower},
};
struct block_config wifi_g710c_config[] = {
	[NORMAL] = {wifi_g710c_func_normal, wifi_g710c_pullud_normal, wifi_g710c_drv_normal},
	[LOWPOWER] = {wifi_g710c_func_lowpower, wifi_g710c_pullud_lowpower, wifi_g710c_drv_lowpower},
};
struct block_config isp_dvp_g710c_config[] = {
	[NORMAL] = {isp_dvp_g710c_func_normal, isp_dvp_g710c_pullud_normal, isp_dvp_g710c_drv_normal},
	[LOWPOWER] = {isp_dvp_g710c_func_lowpower, isp_dvp_g710c_pullud_lowpower, isp_dvp_g710c_drv_lowpower},
};
struct block_config isp_i2c_g710c_config[] = {
	[NORMAL] = {isp_i2c_g710c_func_normal, isp_i2c_g710c_pullud_normal, isp_i2c_g710c_drv_normal},
	[LOWPOWER] = {isp_i2c_g710c_func_lowpower, isp_i2c_g710c_pullud_lowpower, isp_i2c_g710c_drv_lowpower},
};
struct block_config isp_reset_g710c_config[] = {
	[NORMAL] = {isp_reset_g710c_func_normal, isp_reset_g710c_pullud_normal, isp_reset_g710c_drv_normal},
	[LOWPOWER] = {isp_reset_g710c_func_lowpower, isp_reset_g710c_pullud_lowpower, isp_reset_g710c_drv_lowpower},
};
struct block_config isp_g710c_config[] = {
	[NORMAL] = {isp_g710c_func_normal, isp_g710c_pullud_normal, isp_g710c_drv_normal},
	[LOWPOWER] = {isp_g710c_func_lowpower, isp_g710c_pullud_lowpower, isp_g710c_drv_lowpower},
};
struct block_config isp_flash_g710c_config[] = {
	[NORMAL] = {isp_flash_g710c_func_normal, isp_flash_g710c_pullud_normal, isp_flash_g710c_drv_normal},
	[LOWPOWER] = {isp_flash_g710c_func_lowpower, isp_flash_g710c_pullud_lowpower, isp_flash_g710c_drv_lowpower},
};
struct block_config charger_g710c_config[] = {
	[NORMAL] = {charger_g710c_func_normal, charger_g710c_pullud_normal, charger_g710c_drv_normal},
	[LOWPOWER] = {charger_g710c_func_lowpower, charger_g710c_pullud_lowpower, charger_g710c_drv_lowpower},
};
struct block_config gsensor_g710c_config[] = {
	[NORMAL] = {gsensor_g710c_func_normal, gsensor_g710c_pullud_normal, gsensor_g710c_drv_normal},
	[LOWPOWER] = {gsensor_g710c_func_lowpower, gsensor_g710c_pullud_lowpower, gsensor_g710c_drv_lowpower},
};
struct block_config audio_spk_g710c_config[] = {
	[NORMAL] = {audio_spk_g710c_func_normal, audio_spk_g710c_pullud_normal, audio_spk_g710c_drv_normal},
	[LOWPOWER] = {audio_spk_g710c_func_lowpower, audio_spk_g710c_pullud_lowpower, audio_spk_g710c_drv_lowpower},
};
struct block_config audio_eph_g710c_config[] = {
	[NORMAL] = {audio_eph_g710c_func_normal, audio_eph_g710c_pullud_normal, audio_eph_g710c_drv_normal},
	[LOWPOWER] = {audio_eph_g710c_func_lowpower, audio_eph_g710c_pullud_lowpower, audio_eph_g710c_drv_lowpower},
};
struct block_config modem_g710c_config[] = {
	[NORMAL] = {modem_g710c_func_normal, modem_g710c_pullud_normal, modem_g710c_drv_normal},
	[LOWPOWER] = {modem_g710c_func_lowpower, modem_g710c_pullud_lowpower, modem_g710c_drv_lowpower},
};
struct block_config vbusdrv_g710c_config[] = {
	[NORMAL] = {vbusdrv_g710c_func_normal, vbusdrv_g710c_pullud_normal, vbusdrv_g710c_drv_normal},
	[LOWPOWER] = {vbusdrv_g710c_func_lowpower, vbusdrv_g710c_pullud_lowpower, vbusdrv_g710c_drv_lowpower},
};
struct block_config gps_spi_g710c_config[] = {
	[NORMAL] = {gps_spi_g710c_func_normal, gps_spi_g710c_pullud_normal, gps_spi_g710c_drv_normal},
	[LOWPOWER] = {gps_spi_g710c_func_lowpower, gps_spi_g710c_pullud_lowpower, gps_spi_g710c_drv_lowpower},
};
struct block_config modem_switch_g710c_config[] = {
	[NORMAL] = {modem_switch_g710c_func_normal, modem_switch_g710c_pullud_normal, modem_switch_g710c_drv_normal},
	[LOWPOWER] = {modem_switch_g710c_func_lowpower, modem_switch_g710c_pullud_lowpower, modem_switch_g710c_drv_lowpower},
};
struct block_config mcamdvdd_g710c_config[] = {
	[NORMAL] = {mcamdvdd_g710c_func_normal, mcamdvdd_g710c_pullud_normal, mcamdvdd_g710c_drv_normal},
	[LOWPOWER] = {mcamdvdd_g710c_func_lowpower, mcamdvdd_g710c_pullud_lowpower, mcamdvdd_g710c_drv_lowpower},
};
struct block_config usb_switch_g710c_config[] = {
	[NORMAL] = {usb_switch_g710c_func_normal, usb_switch_g710c_pullud_normal, usb_switch_g710c_drv_normal},
	[LOWPOWER] = {usb_switch_g710c_func_lowpower, usb_switch_g710c_pullud_lowpower, usb_switch_g710c_drv_lowpower},
};
struct block_config modem_qsc_g710c_config[] = {
	[NORMAL] = {modem_qsc_g710c_func_normal, modem_qsc_g710c_pullud_normal, modem_qsc_g710c_drv_normal},
	[LOWPOWER] = {modem_qsc_g710c_func_lowpower, modem_qsc_g710c_pullud_lowpower, modem_qsc_g710c_drv_lowpower},
};
struct block_config sensor_gyr_g710c_config[] = {
	[NORMAL] = {sensor_gyr_g710c_func_normal, sensor_gyr_g710c_pullud_normal, sensor_gyr_g710c_drv_normal},
	[LOWPOWER] = {sensor_gyr_g710c_func_lowpower, sensor_gyr_g710c_pullud_lowpower, sensor_gyr_g710c_drv_lowpower},
};
struct block_config headset_uart_g710c_config[] = {
	[NORMAL] = {headset_uart_g710c_func_normal, headset_uart_g710c_pullud_normal, headset_uart_g710c_drv_normal},
	[LOWPOWER] = {headset_uart_g710c_func_lowpower, headset_uart_g710c_pullud_lowpower, headset_uart_g710c_drv_lowpower},
};
struct block_config mhl_g710c_config[] = {
	[NORMAL] = {mhl_g710c_func_normal, mhl_g710c_pullud_normal, mhl_g710c_drv_normal},
	[LOWPOWER] = {mhl_g710c_func_lowpower, mhl_g710c_pullud_lowpower, mhl_g710c_drv_lowpower},
};
struct block_config sensor_com_g710c_config[] = {
	[NORMAL] = {sensor_com_g710c_func_normal, sensor_com_g710c_pullud_normal, sensor_com_g710c_drv_normal},
	[LOWPOWER] = {sensor_com_g710c_func_lowpower, sensor_com_g710c_pullud_lowpower, sensor_com_g710c_drv_lowpower},
};
struct block_config sensor_pro_g710c_config[] = {
	[NORMAL] = {sensor_pro_g710c_func_normal, sensor_pro_g710c_pullud_normal, sensor_pro_g710c_drv_normal},
	[LOWPOWER] = {sensor_pro_g710c_func_lowpower, sensor_pro_g710c_pullud_lowpower, sensor_pro_g710c_drv_lowpower},
};
struct block_config therm_g710c_config[] = {
	[NORMAL] = {therm_g710c_func_normal, therm_g710c_pullud_normal, therm_g710c_drv_normal},
	[LOWPOWER] = {therm_g710c_func_lowpower, therm_g710c_pullud_lowpower, therm_g710c_drv_lowpower},
};
struct block_config es305_g710c_config[] = {
	[NORMAL] = {es305_g710c_func_normal, es305_g710c_pullud_normal, es305_g710c_drv_normal},
	[LOWPOWER] = {es305_g710c_func_lowpower, es305_g710c_pullud_lowpower, es305_g710c_drv_lowpower},
};
struct block_config pmu_g710c_config[] = {
	[NORMAL] = {pmu_g710c_func_normal, pmu_g710c_pullud_normal, pmu_g710c_drv_normal},
	[LOWPOWER] = {pmu_g710c_func_lowpower, pmu_g710c_pullud_lowpower, pmu_g710c_drv_lowpower},
};
struct block_config battery_g710c_config[] = {
	[NORMAL] = {battery_g710c_func_normal, battery_g710c_pullud_normal, battery_g710c_drv_normal},
	[LOWPOWER] = {battery_g710c_func_lowpower, battery_g710c_pullud_lowpower, battery_g710c_drv_lowpower},
};
struct block_config camera_g710c_config[] = {
	[NORMAL] = {camera_g710c_func_normal, camera_g710c_pullud_normal, camera_g710c_drv_normal},
	[LOWPOWER] = {camera_g710c_func_lowpower, camera_g710c_pullud_lowpower, camera_g710c_drv_lowpower},
};


/******************pins ****************/

struct  iomux_pin *audio_es305_g710c_pins[] = {
&gpio_127_cs, &gpio_128_cs, NULL,
};
struct  iomux_pin *spi1_g710c_pins[] = {
&gpio_113_cs, &gpio_114_cs, &gpio_115_cs, &gpio_116_cs, NULL,
};
struct  iomux_pin *uart3_g710c_pins[] = {
&gpio_154_cs, &gpio_155_cs, &gpio_160_cs, &gpio_161_cs, NULL,
};
struct  iomux_pin *emmc_g710c_pins[] = {
&gpio_028_cs, &gpio_029_cs, &gpio_030_cs, &gpio_031_cs, &gpio_032_cs, &gpio_033_cs, &gpio_034_cs, &gpio_035_cs, &gpio_036_cs, &gpio_037_cs, NULL,
};

/******************IOMUX_BLOCK****************/

IOMUX_BLOCK(block_audio_es305_g710c, "block_audio_es305_g710c", NORMAL, audio_es305_g710c_pins)
IOMUX_BLOCK(block_spi1_g710c, "block_spi1_g710c", NORMAL, spi1_g710c_pins)
IOMUX_BLOCK(block_uart3_g710c, "block_uart3_g710c", NORMAL, uart3_g710c_pins)
IOMUX_BLOCK(block_emmc_g710c, "block_emmc_g710c", NORMAL, emmc_g710c_pins)

/******************normal func ****************/

enum lowlayer_func audio_es305_g710c_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func spi1_g710c_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func uart3_g710c_func_normal[] = {FUNC2, FUNC2, FUNC2, FUNC2, -INVALID,};
enum lowlayer_func emmc_g710c_func_normal[] = {FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, -INVALID,};

/******************lowpower func****************/

enum lowlayer_func audio_es305_g710c_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func spi1_g710c_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart3_g710c_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func emmc_g710c_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC0, FUNC0, -INVALID,};

/******************normal pullud****************/

enum pull_updown audio_es305_g710c_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown spi1_g710c_pullud_normal[] = {PULLUP, NOPULL, NOPULL, PULLDOWN, -INVALID,};
enum pull_updown uart3_g710c_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown emmc_g710c_pullud_normal[] = {PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, NOPULL, -INVALID,};

/******************lowpower pullud****************/

enum pull_updown audio_es305_g710c_pullud_lowpower[] = {NOPULL, PULLDOWN, -INVALID,};
enum pull_updown spi1_g710c_pullud_lowpower[] = {NOPULL, NOPULL, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown uart3_g710c_pullud_lowpower[] = {PULLDOWN, PULLDOWN, NOPULL, NOPULL, -INVALID,};
enum pull_updown emmc_g710c_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};

/******************normal drv****************/

enum drive_strength audio_es305_g710c_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength spi1_g710c_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength uart3_g710c_drv_normal[] = {LEVEL2, RESERVE, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength emmc_g710c_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};

/******************lowpower drv****************/

enum drive_strength audio_es305_g710c_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength spi1_g710c_drv_lowpower[] = {LEVEL2, LEVEL2, LEVEL0, LEVEL0, -INVALID,};
enum drive_strength uart3_g710c_drv_lowpower[] = {LEVEL2, RESERVE, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength emmc_g710c_drv_lowpower[] = {LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, -INVALID,};

/******************config****************/

struct block_config audio_es305_g710c_config[] = {
	[NORMAL] = {audio_es305_g710c_func_normal, audio_es305_g710c_pullud_normal, audio_es305_g710c_drv_normal},
	[LOWPOWER] = {audio_es305_g710c_func_lowpower, audio_es305_g710c_pullud_lowpower, audio_es305_g710c_drv_lowpower},
};
struct block_config spi1_g710c_config[] = {
	[NORMAL] = {spi1_g710c_func_normal, spi1_g710c_pullud_normal, spi1_g710c_drv_normal},
	[LOWPOWER] = {spi1_g710c_func_lowpower, spi1_g710c_pullud_lowpower, spi1_g710c_drv_lowpower},
};
struct block_config uart3_g710c_config[] = {
	[NORMAL] = {uart3_g710c_func_normal, uart3_g710c_pullud_normal, uart3_g710c_drv_normal},
	[LOWPOWER] = {uart3_g710c_func_lowpower, uart3_g710c_pullud_lowpower, uart3_g710c_drv_lowpower},
};
struct block_config emmc_g710c_config[] = {
	[NORMAL] = {emmc_g710c_func_normal, emmc_g710c_pullud_normal, emmc_g710c_drv_normal},
	[LOWPOWER] = {emmc_g710c_func_lowpower, emmc_g710c_pullud_lowpower, emmc_g710c_drv_lowpower},
};

struct block_table block_config_phone_g710c[] = {
     BLOCK_CONFIG("block_i2c0", &block_i2c0_g710c, i2c0_g710c_config)
     BLOCK_CONFIG("block_i2c1", &block_i2c1_g710c, i2c1_g710c_config)
     BLOCK_CONFIG("block_i2c2", &block_i2c2_g710c, i2c2_g710c_config)
     BLOCK_CONFIG("block_i2c3", &block_i2c3_g710c, i2c3_g710c_config)
     BLOCK_CONFIG("block_spi0", &block_spi0_g710c, spi0_g710c_config)
     BLOCK_CONFIG("block_spi0_cs", &block_spi0_cs_g710c, spi0_cs_g710c_config)
     BLOCK_CONFIG("block_uart0", &block_uart0_g710c, uart0_g710c_config)
     BLOCK_CONFIG("block_uart1", &block_uart1_g710c, uart1_g710c_config)
     BLOCK_CONFIG("block_uart2", &block_uart2_g710c, uart2_g710c_config)
     BLOCK_CONFIG("block_uart4", &block_uart4_g710c, uart4_g710c_config)
     BLOCK_CONFIG("block_kpc", &block_kpc_g710c, kpc_g710c_config)
     BLOCK_CONFIG("block_sd", &block_sd_g710c, sd_g710c_config)
     BLOCK_CONFIG("block_nand", &block_nand_g710c, nand_g710c_config)
     BLOCK_CONFIG("block_sdio", &block_sdio_g710c, sdio_g710c_config)
     BLOCK_CONFIG("block_btpm", &block_btpm_g710c, btpm_g710c_config)
     BLOCK_CONFIG("block_btpwr", &block_btpwr_g710c, btpwr_g710c_config)
     BLOCK_CONFIG("block_gps_boardcom", &block_gps_boardcom_g710c, gps_boardcom_g710c_config)
     BLOCK_CONFIG("block_ts", &block_ts_g710c, ts_g710c_config)
     BLOCK_CONFIG("block_lcd", &block_lcd_g710c, lcd_g710c_config)
     BLOCK_CONFIG("block_pwm", &block_pwm_g710c, pwm_g710c_config)
     BLOCK_CONFIG("block_hdmi", &block_hdmi_g710c, hdmi_g710c_config)
     BLOCK_CONFIG("block_wifi", &block_wifi_g710c, wifi_g710c_config)
     BLOCK_CONFIG("block_isp_dvp", &block_isp_dvp_g710c, isp_dvp_g710c_config)
     BLOCK_CONFIG("block_isp_i2c", &block_isp_i2c_g710c, isp_i2c_g710c_config)
     BLOCK_CONFIG("block_isp_reset", &block_isp_reset_g710c, isp_reset_g710c_config)
     BLOCK_CONFIG("block_isp", &block_isp_g710c, isp_g710c_config)
     BLOCK_CONFIG("block_isp_flash", &block_isp_flash_g710c, isp_flash_g710c_config)
     BLOCK_CONFIG("block_charger", &block_charger_g710c, charger_g710c_config)
     BLOCK_CONFIG("block_gsensor", &block_gsensor_g710c, gsensor_g710c_config)
     BLOCK_CONFIG("block_audio_spk", &block_audio_spk_g710c, audio_spk_g710c_config)
     BLOCK_CONFIG("block_audio_eph", &block_audio_eph_g710c, audio_eph_g710c_config)
     BLOCK_CONFIG("block_modem", &block_modem_g710c, modem_g710c_config)
     BLOCK_CONFIG("block_vbusdrv", &block_vbusdrv_g710c, vbusdrv_g710c_config)
     BLOCK_CONFIG("block_gps_spi", &block_gps_spi_g710c, gps_spi_g710c_config)
     BLOCK_CONFIG("block_modem_switch", &block_modem_switch_g710c, modem_switch_g710c_config)
     BLOCK_CONFIG("block_mcamdvdd", &block_mcamdvdd_g710c, mcamdvdd_g710c_config)
     BLOCK_CONFIG("block_usb_switch", &block_usb_switch_g710c, usb_switch_g710c_config)
     BLOCK_CONFIG("block_modem_qsc", &block_modem_qsc_g710c, modem_qsc_g710c_config)
     BLOCK_CONFIG("block_sensor_gyr", &block_sensor_gyr_g710c, sensor_gyr_g710c_config)
     BLOCK_CONFIG("block_headset_uart", &block_headset_uart_g710c, headset_uart_g710c_config)
     BLOCK_CONFIG("block_mhl", &block_mhl_g710c, mhl_g710c_config)
     BLOCK_CONFIG("block_sensor_com", &block_sensor_com_g710c, sensor_com_g710c_config)
     BLOCK_CONFIG("block_sensor_pro", &block_sensor_pro_g710c, sensor_pro_g710c_config)
     BLOCK_CONFIG("block_therm", &block_therm_g710c, therm_g710c_config)
     BLOCK_CONFIG("block_es305", &block_es305_g710c, es305_g710c_config)
     BLOCK_CONFIG("block_pmu", &block_pmu_g710c, pmu_g710c_config)
     BLOCK_CONFIG("block_battery", &block_battery_g710c, battery_g710c_config)
     BLOCK_CONFIG("block_camera", &block_camera_g710c, camera_g710c_config)
     BLOCK_CONFIG("block_audio_es305", &block_audio_es305_g710c, audio_es305_g710c_config)
     BLOCK_CONFIG("block_spi1", &block_spi1_g710c, spi1_g710c_config)
     BLOCK_CONFIG("block_uart3", &block_uart3_g710c, uart3_g710c_config)
     BLOCK_CONFIG("block_emmc", &block_emmc_g710c, emmc_g710c_config)
     {NULL, NULL, NULL},
};


/******************pins ****************/

struct  iomux_pin *i2c0_g710c_vb_pins[] = {
&gpio_084_cs, &gpio_085_cs, NULL,
};
struct  iomux_pin *i2c1_g710c_vb_pins[] = {
&gpio_086_cs, &gpio_087_cs, NULL,
};
struct  iomux_pin *i2c2_g710c_vb_pins[] = {
&gpio_063_cs, &gpio_064_cs, NULL,
};
struct  iomux_pin *i2c3_g710c_vb_pins[] = {
&gpio_057_cs, &gpio_058_cs, NULL,
};
struct  iomux_pin *spi0_g710c_vb_pins[] = {
&gpio_107_cs, &gpio_108_cs, NULL,
};
struct  iomux_pin *spi0_cs_g710c_vb_pins[] = {
&gpio_109_cs, &gpio_110_cs, &gpio_111_cs, &gpio_112_cs, NULL,
};
struct  iomux_pin *uart0_g710c_vb_pins[] = {
&gpio_119_cs, &gpio_120_cs, NULL,
};
struct  iomux_pin *uart1_g710c_vb_pins[] = {
&gpio_121_cs, &gpio_122_cs, &gpio_123_cs, &gpio_124_cs, NULL,
};
struct  iomux_pin *uart2_g710c_vb_pins[] = {
&gpio_127_cs, &gpio_128_cs, NULL,
};
struct  iomux_pin *uart4_g710c_vb_pins[] = {
&gpio_162_cs, &gpio_163_cs, &gpio_164_cs, &gpio_165_cs, NULL,
};
struct  iomux_pin *kpc_g710c_vb_pins[] = {
&gpio_137_cs, &gpio_138_cs, NULL,
};
struct  iomux_pin *sd_g710c_vb_pins[] = {
&gpio_088_cs, &gpio_089_cs, &gpio_090_cs, &gpio_091_cs, &gpio_092_cs, &gpio_093_cs, NULL,
};
struct  iomux_pin *nand_g710c_vb_pins[] = {
&gpio_010_cs, &gpio_011_cs, &gpio_012_cs, &gpio_013_cs, &gpio_014_cs, &gpio_015_cs, &gpio_016_cs, &gpio_017_cs, &gpio_018_cs, &gpio_019_cs, &gpio_020_cs, &gpio_021_cs, &gpio_022_cs, &gpio_023_cs, &gpio_024_cs, &gpio_025_cs, &gpio_026_cs, &gpio_028_cs, &gpio_029_cs, &gpio_030_cs, &gpio_031_cs, &gpio_032_cs, &gpio_033_cs, &gpio_034_cs, &gpio_035_cs, NULL,
};
struct  iomux_pin *sdio_g710c_vb_pins[] = {
&gpio_100_cs, &gpio_101_cs, &gpio_102_cs, &gpio_103_cs, &gpio_104_cs, &gpio_105_cs, NULL,
};
struct  iomux_pin *btpm_g710c_vb_pins[] = {
&gpio_166_cs, &gpio_167_cs, NULL,
};
struct  iomux_pin *btpwr_g710c_vb_pins[] = {
&gpio_168_cs, &gpio_169_cs, NULL,
};
struct  iomux_pin *gps_boardcom_g710c_vb_pins[] = {
NULL,
};
struct  iomux_pin *ts_g710c_vb_pins[] = {
&gpio_156_cs, &gpio_157_cs, NULL,
};
struct  iomux_pin *lcd_g710c_vb_pins[] = {
&gpio_003_cs, &gpio_072_cs, &gpio_129_cs, &gpio_130_cs, &gpio_171_cs, NULL,
};
struct  iomux_pin *pwm_g710c_vb_pins[] = {
NULL,
};
struct  iomux_pin *hdmi_g710c_vb_pins[] = {
&gpio_038_cs, &gpio_039_cs, &gpio_040_cs, &gpio_041_cs, NULL,
};
struct  iomux_pin *wifi_g710c_vb_pins[] = {
&gpio_002_cs, &gpio_004_cs, NULL,
};
struct  iomux_pin *isp_dvp_g710c_vb_pins[] = {
&gpio_043_cs, &gpio_044_cs, &gpio_045_cs, &gpio_046_cs, &gpio_047_cs, &gpio_048_cs, &gpio_049_cs, &gpio_054_cs, NULL,
};
struct  iomux_pin *isp_i2c_g710c_vb_pins[] = {
&gpio_055_cs, &gpio_056_cs, NULL,
};
struct  iomux_pin *isp_reset_g710c_vb_pins[] = {
&gpio_059_cs, &gpio_060_cs, NULL,
};
struct  iomux_pin *isp_g710c_vb_pins[] = {
&gpio_067_cs, &gpio_068_cs, &gpio_069_cs, &gpio_070_cs, &gpio_071_cs, &gpio_075_cs, NULL,
};
struct  iomux_pin *isp_flash_g710c_vb_pins[] = {
&gpio_065_cs, &gpio_066_cs, &gpio_076_cs, NULL,
};
struct  iomux_pin *charger_g710c_vb_pins[] = {
&gpio_005_cs, &gpio_074_cs, NULL,
};
struct  iomux_pin *gsensor_g710c_vb_pins[] = {
&gpio_051_cs, &gpio_148_cs, NULL,
};
struct  iomux_pin *audio_spk_g710c_vb_pins[] = {
&gpio_117_cs, &gpio_139_cs, NULL,
};
struct  iomux_pin *audio_eph_g710c_vb_pins[] = {
&gpio_118_cs, NULL,
};
struct  iomux_pin *modem_g710c_vb_pins[] = {
&gpio_094_cs, &gpio_095_cs, &gpio_096_cs, &gpio_097_cs, &gpio_098_cs, &gpio_113_cs, &gpio_114_cs, &gpio_115_cs, NULL,
};
struct  iomux_pin *vbusdrv_g710c_vb_pins[] = {
&gpio_082_cs, NULL,
};
struct  iomux_pin *gps_spi_g710c_vb_pins[] = {
&gpio_154_cs, &gpio_155_cs, &gpio_160_cs, &gpio_161_cs, NULL,
};
struct  iomux_pin *modem_switch_g710c_vb_pins[] = {
&gpio_106_cs, NULL,
};
struct  iomux_pin *mcamdvdd_g710c_vb_pins[] = {
&gpio_073_cs, NULL,
};
struct  iomux_pin *usb_switch_g710c_vb_pins[] = {
&gpio_008_cs, &gpio_009_cs, &gpio_027_cs, &gpio_042_cs, &gpio_052_cs, &gpio_053_cs, &gpio_099_cs, &gpio_174_cs, NULL,
};
struct  iomux_pin *modem_qsc_g710c_vb_pins[] = {
&gpio_006_cs, NULL,
};
struct  iomux_pin *sensor_gyr_g710c_vb_pins[] = {
NULL,
};
struct  iomux_pin *headset_uart_g710c_vb_pins[] = {
NULL,
};
struct  iomux_pin *mhl_g710c_vb_pins[] = {
&gpio_080_cs, &gpio_081_cs, NULL,
};
struct  iomux_pin *sensor_com_g710c_vb_pins[] = {
&gpio_125_cs, NULL,
};
struct  iomux_pin *sensor_pro_g710c_vb_pins[] = {
&gpio_126_cs, NULL,
};
struct  iomux_pin *therm_g710c_vb_pins[] = {
&gpio_132_cs, NULL,
};
struct  iomux_pin *es305_g710c_vb_pins[] = {
&gpio_145_cs, &gpio_146_cs, NULL,
};
struct  iomux_pin *pmu_g710c_vb_pins[] = {
&gpio_158_cs, &gpio_159_cs, NULL,
};
struct  iomux_pin *battery_g710c_vb_pins[] = {
&gpio_170_cs, NULL,
};
struct  iomux_pin *camera_g710c_vb_pins[] = {
&gpio_173_cs, NULL,
};

/******************IOMUX_BLOCK****************/

IOMUX_BLOCK(block_i2c0_g710c_vb, "block_i2c0_g710c_vb", NORMAL, i2c0_g710c_vb_pins)
IOMUX_BLOCK(block_i2c1_g710c_vb, "block_i2c1_g710c_vb", NORMAL, i2c1_g710c_vb_pins)
IOMUX_BLOCK(block_i2c2_g710c_vb, "block_i2c2_g710c_vb", NORMAL, i2c2_g710c_vb_pins)
IOMUX_BLOCK(block_i2c3_g710c_vb, "block_i2c3_g710c_vb", NORMAL, i2c3_g710c_vb_pins)
IOMUX_BLOCK(block_spi0_g710c_vb, "block_spi0_g710c_vb", NORMAL, spi0_g710c_vb_pins)
IOMUX_BLOCK(block_spi0_cs_g710c_vb, "block_spi0_cs_g710c_vb", NORMAL, spi0_cs_g710c_vb_pins)
IOMUX_BLOCK(block_uart0_g710c_vb, "block_uart0_g710c_vb", NORMAL, uart0_g710c_vb_pins)
IOMUX_BLOCK(block_uart1_g710c_vb, "block_uart1_g710c_vb", NORMAL, uart1_g710c_vb_pins)
IOMUX_BLOCK(block_uart2_g710c_vb, "block_uart2_g710c_vb", NORMAL, uart2_g710c_vb_pins)
IOMUX_BLOCK(block_uart4_g710c_vb, "block_uart4_g710c_vb", NORMAL, uart4_g710c_vb_pins)
IOMUX_BLOCK(block_kpc_g710c_vb, "block_kpc_g710c_vb", NORMAL, kpc_g710c_vb_pins)
IOMUX_BLOCK(block_sd_g710c_vb, "block_sd_g710c_vb", NORMAL, sd_g710c_vb_pins)
IOMUX_BLOCK(block_nand_g710c_vb, "block_nand_g710c_vb", NORMAL, nand_g710c_vb_pins)
IOMUX_BLOCK(block_sdio_g710c_vb, "block_sdio_g710c_vb", NORMAL, sdio_g710c_vb_pins)
IOMUX_BLOCK(block_btpm_g710c_vb, "block_btpm_g710c_vb", NORMAL, btpm_g710c_vb_pins)
IOMUX_BLOCK(block_btpwr_g710c_vb, "block_btpwr_g710c_vb", NORMAL, btpwr_g710c_vb_pins)
IOMUX_BLOCK(block_gps_boardcom_g710c_vb, "block_gps_boardcom_g710c_vb", NORMAL, gps_boardcom_g710c_vb_pins)
IOMUX_BLOCK(block_ts_g710c_vb, "block_ts_g710c_vb", NORMAL, ts_g710c_vb_pins)
IOMUX_BLOCK(block_lcd_g710c_vb, "block_lcd_g710c_vb", NORMAL, lcd_g710c_vb_pins)
IOMUX_BLOCK(block_pwm_g710c_vb, "block_pwm_g710c_vb", NORMAL, pwm_g710c_vb_pins)
IOMUX_BLOCK(block_hdmi_g710c_vb, "block_hdmi_g710c_vb", NORMAL, hdmi_g710c_vb_pins)
IOMUX_BLOCK(block_wifi_g710c_vb, "block_wifi_g710c_vb", NORMAL, wifi_g710c_vb_pins)
IOMUX_BLOCK(block_isp_dvp_g710c_vb, "block_isp_dvp_g710c_vb", NORMAL, isp_dvp_g710c_vb_pins)
IOMUX_BLOCK(block_isp_i2c_g710c_vb, "block_isp_i2c_g710c_vb", NORMAL, isp_i2c_g710c_vb_pins)
IOMUX_BLOCK(block_isp_reset_g710c_vb, "block_isp_reset_g710c_vb", NORMAL, isp_reset_g710c_vb_pins)
IOMUX_BLOCK(block_isp_g710c_vb, "block_isp_g710c_vb", NORMAL, isp_g710c_vb_pins)
IOMUX_BLOCK(block_isp_flash_g710c_vb, "block_isp_flash_g710c_vb", NORMAL, isp_flash_g710c_vb_pins)
IOMUX_BLOCK(block_charger_g710c_vb, "block_charger_g710c_vb", NORMAL, charger_g710c_vb_pins)
IOMUX_BLOCK(block_gsensor_g710c_vb, "block_gsensor_g710c_vb", NORMAL, gsensor_g710c_vb_pins)
IOMUX_BLOCK(block_audio_spk_g710c_vb, "block_audio_spk_g710c_vb", NORMAL, audio_spk_g710c_vb_pins)
IOMUX_BLOCK(block_audio_eph_g710c_vb, "block_audio_eph_g710c_vb", NORMAL, audio_eph_g710c_vb_pins)
IOMUX_BLOCK(block_modem_g710c_vb, "block_modem_g710c_vb", NORMAL, modem_g710c_vb_pins)
IOMUX_BLOCK(block_vbusdrv_g710c_vb, "block_vbusdrv_g710c_vb", NORMAL, vbusdrv_g710c_vb_pins)
IOMUX_BLOCK(block_gps_spi_g710c_vb, "block_gps_spi_g710c_vb", NORMAL, gps_spi_g710c_vb_pins)
IOMUX_BLOCK(block_modem_switch_g710c_vb, "block_modem_switch_g710c_vb", NORMAL, modem_switch_g710c_vb_pins)
IOMUX_BLOCK(block_mcamdvdd_g710c_vb, "block_mcamdvdd_g710c_vb", NORMAL, mcamdvdd_g710c_vb_pins)
IOMUX_BLOCK(block_usb_switch_g710c_vb, "block_usb_switch_g710c_vb", NORMAL, usb_switch_g710c_vb_pins)
IOMUX_BLOCK(block_modem_qsc_g710c_vb, "block_modem_qsc_g710c_vb", NORMAL, modem_qsc_g710c_vb_pins)
IOMUX_BLOCK(block_sensor_gyr_g710c_vb, "block_sensor_gyr_g710c_vb", NORMAL, sensor_gyr_g710c_vb_pins)
IOMUX_BLOCK(block_headset_uart_g710c_vb, "block_headset_uart_g710c_vb", NORMAL, headset_uart_g710c_vb_pins)
IOMUX_BLOCK(block_mhl_g710c_vb, "block_mhl_g710c_vb", NORMAL, mhl_g710c_vb_pins)
IOMUX_BLOCK(block_sensor_com_g710c_vb, "block_sensor_com_g710c_vb", NORMAL, sensor_com_g710c_vb_pins)
IOMUX_BLOCK(block_sensor_pro_g710c_vb, "block_sensor_pro_g710c_vb", NORMAL, sensor_pro_g710c_vb_pins)
IOMUX_BLOCK(block_therm_g710c_vb, "block_therm_g710c_vb", NORMAL, therm_g710c_vb_pins)
IOMUX_BLOCK(block_es305_g710c_vb, "block_es305_g710c_vb", NORMAL, es305_g710c_vb_pins)
IOMUX_BLOCK(block_pmu_g710c_vb, "block_pmu_g710c_vb", NORMAL, pmu_g710c_vb_pins)
IOMUX_BLOCK(block_battery_g710c_vb, "block_battery_g710c_vb", NORMAL, battery_g710c_vb_pins)
IOMUX_BLOCK(block_camera_g710c_vb, "block_camera_g710c_vb", NORMAL, camera_g710c_vb_pins)

/******************normal func ****************/

enum lowlayer_func i2c0_g710c_vb_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func i2c1_g710c_vb_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func i2c2_g710c_vb_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func i2c3_g710c_vb_func_normal[] = {FUNC2, FUNC2, -INVALID,};
enum lowlayer_func spi0_g710c_vb_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func spi0_cs_g710c_vb_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func uart0_g710c_vb_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func uart1_g710c_vb_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func uart2_g710c_vb_func_normal[] = {FUNC2, FUNC2, -INVALID,};
enum lowlayer_func uart4_g710c_vb_func_normal[] = {FUNC2, FUNC2, FUNC2, FUNC2, -INVALID,};
enum lowlayer_func kpc_g710c_vb_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func sd_g710c_vb_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func nand_g710c_vb_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func sdio_g710c_vb_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func btpm_g710c_vb_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func btpwr_g710c_vb_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func gps_boardcom_g710c_vb_func_normal[] = {-INVALID,};
enum lowlayer_func ts_g710c_vb_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func lcd_g710c_vb_func_normal[] = {FUNC0, FUNC2, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func pwm_g710c_vb_func_normal[] = {-INVALID,};
enum lowlayer_func hdmi_g710c_vb_func_normal[] = {FUNC1, FUNC1, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func wifi_g710c_vb_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_dvp_g710c_vb_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_i2c_g710c_vb_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_reset_g710c_vb_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_g710c_vb_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_flash_g710c_vb_func_normal[] = {FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func charger_g710c_vb_func_normal[] = {FUNC0, FUNC1, -INVALID,};
enum lowlayer_func gsensor_g710c_vb_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func audio_spk_g710c_vb_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func audio_eph_g710c_vb_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func modem_g710c_vb_func_normal[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func vbusdrv_g710c_vb_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func gps_spi_g710c_vb_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func modem_switch_g710c_vb_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func mcamdvdd_g710c_vb_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func usb_switch_g710c_vb_func_normal[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC0, -INVALID,};
enum lowlayer_func modem_qsc_g710c_vb_func_normal[] = {FUNC0, -INVALID,};
enum lowlayer_func sensor_gyr_g710c_vb_func_normal[] = {-INVALID,};
enum lowlayer_func headset_uart_g710c_vb_func_normal[] = {-INVALID,};
enum lowlayer_func mhl_g710c_vb_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func sensor_com_g710c_vb_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func sensor_pro_g710c_vb_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func therm_g710c_vb_func_normal[] = {FUNC1, -INVALID,};
enum lowlayer_func es305_g710c_vb_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func pmu_g710c_vb_func_normal[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func battery_g710c_vb_func_normal[] = {FUNC0, -INVALID,};
enum lowlayer_func camera_g710c_vb_func_normal[] = {FUNC0, -INVALID,};

/******************lowpower func****************/

enum lowlayer_func i2c0_g710c_vb_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func i2c1_g710c_vb_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func i2c2_g710c_vb_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func i2c3_g710c_vb_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func spi0_g710c_vb_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func spi0_cs_g710c_vb_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart0_g710c_vb_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart1_g710c_vb_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart2_g710c_vb_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart4_g710c_vb_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func kpc_g710c_vb_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func sd_g710c_vb_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func nand_g710c_vb_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func sdio_g710c_vb_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func btpm_g710c_vb_func_lowpower[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func btpwr_g710c_vb_func_lowpower[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func gps_boardcom_g710c_vb_func_lowpower[] = {-INVALID,};
enum lowlayer_func ts_g710c_vb_func_lowpower[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func lcd_g710c_vb_func_lowpower[] = {FUNC0, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func pwm_g710c_vb_func_lowpower[] = {-INVALID,};
enum lowlayer_func hdmi_g710c_vb_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func wifi_g710c_vb_func_lowpower[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func isp_dvp_g710c_vb_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func isp_i2c_g710c_vb_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func isp_reset_g710c_vb_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func isp_g710c_vb_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC0, -INVALID,};
enum lowlayer_func isp_flash_g710c_vb_func_lowpower[] = {FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func charger_g710c_vb_func_lowpower[] = {FUNC0, FUNC1, -INVALID,};
enum lowlayer_func gsensor_g710c_vb_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func audio_spk_g710c_vb_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func audio_eph_g710c_vb_func_lowpower[] = {FUNC1, -INVALID,};
enum lowlayer_func modem_g710c_vb_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func vbusdrv_g710c_vb_func_lowpower[] = {FUNC0, -INVALID,};
enum lowlayer_func gps_spi_g710c_vb_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func modem_switch_g710c_vb_func_lowpower[] = {FUNC1, -INVALID,};
enum lowlayer_func mcamdvdd_g710c_vb_func_lowpower[] = {FUNC1, -INVALID,};
enum lowlayer_func usb_switch_g710c_vb_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC0, -INVALID,};
enum lowlayer_func modem_qsc_g710c_vb_func_lowpower[] = {FUNC0, -INVALID,};
enum lowlayer_func sensor_gyr_g710c_vb_func_lowpower[] = {-INVALID,};
enum lowlayer_func headset_uart_g710c_vb_func_lowpower[] = {-INVALID,};
enum lowlayer_func mhl_g710c_vb_func_lowpower[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func sensor_com_g710c_vb_func_lowpower[] = {FUNC1, -INVALID,};
enum lowlayer_func sensor_pro_g710c_vb_func_lowpower[] = {FUNC1, -INVALID,};
enum lowlayer_func therm_g710c_vb_func_lowpower[] = {FUNC1, -INVALID,};
enum lowlayer_func es305_g710c_vb_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func pmu_g710c_vb_func_lowpower[] = {FUNC0, FUNC0, -INVALID,};
enum lowlayer_func battery_g710c_vb_func_lowpower[] = {FUNC0, -INVALID,};
enum lowlayer_func camera_g710c_vb_func_lowpower[] = {FUNC0, -INVALID,};

/******************normal pullud****************/

enum pull_updown i2c0_g710c_vb_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c1_g710c_vb_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c2_g710c_vb_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c3_g710c_vb_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown spi0_g710c_vb_pullud_normal[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown spi0_cs_g710c_vb_pullud_normal[] = {PULLDOWN, PULLDOWN, NOPULL, NOPULL, -INVALID,};
enum pull_updown uart0_g710c_vb_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown uart1_g710c_vb_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown uart2_g710c_vb_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown uart4_g710c_vb_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown kpc_g710c_vb_pullud_normal[] = {PULLUP, PULLUP, -INVALID,};
enum pull_updown sd_g710c_vb_pullud_normal[] = {NOPULL, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, -INVALID,};
enum pull_updown nand_g710c_vb_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown sdio_g710c_vb_pullud_normal[] = {NOPULL, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, -INVALID,};
enum pull_updown btpm_g710c_vb_pullud_normal[] = {PULLUP, NOPULL, -INVALID,};
enum pull_updown btpwr_g710c_vb_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown gps_boardcom_g710c_vb_pullud_normal[] = {-INVALID,};
enum pull_updown ts_g710c_vb_pullud_normal[] = {NOPULL, PULLUP, -INVALID,};
enum pull_updown lcd_g710c_vb_pullud_normal[] = {NOPULL, PULLDOWN, PULLUP, PULLUP, NOPULL, -INVALID,};
enum pull_updown pwm_g710c_vb_pullud_normal[] = {-INVALID,};
enum pull_updown hdmi_g710c_vb_pullud_normal[] = {PULLDOWN, PULLDOWN, NOPULL, NOPULL, -INVALID,};
enum pull_updown wifi_g710c_vb_pullud_normal[] = {NOPULL, PULLDOWN, -INVALID,};
enum pull_updown isp_dvp_g710c_vb_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_i2c_g710c_vb_pullud_normal[] = {PULLUP, PULLUP, -INVALID,};
enum pull_updown isp_reset_g710c_vb_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_g710c_vb_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_flash_g710c_vb_pullud_normal[] = {NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown charger_g710c_vb_pullud_normal[] = {PULLUP, NOPULL, -INVALID,};
enum pull_updown gsensor_g710c_vb_pullud_normal[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown audio_spk_g710c_vb_pullud_normal[] = {NOPULL, PULLUP, -INVALID,};
enum pull_updown audio_eph_g710c_vb_pullud_normal[] = {NOPULL, -INVALID,};
enum pull_updown modem_g710c_vb_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown vbusdrv_g710c_vb_pullud_normal[] = {NOPULL, -INVALID,};
enum pull_updown gps_spi_g710c_vb_pullud_normal[] = {NOPULL, NOPULL, NOPULL, PULLDOWN, -INVALID,};
enum pull_updown modem_switch_g710c_vb_pullud_normal[] = {NOPULL, -INVALID,};
enum pull_updown mcamdvdd_g710c_vb_pullud_normal[] = {NOPULL, -INVALID,};
enum pull_updown usb_switch_g710c_vb_pullud_normal[] = {NOPULL, NOPULL, PULLUP, NOPULL, PULLDOWN, PULLDOWN, NOPULL, NOPULL, -INVALID,};
enum pull_updown modem_qsc_g710c_vb_pullud_normal[] = {NOPULL, -INVALID,};
enum pull_updown sensor_gyr_g710c_vb_pullud_normal[] = {-INVALID,};
enum pull_updown headset_uart_g710c_vb_pullud_normal[] = {-INVALID,};
enum pull_updown mhl_g710c_vb_pullud_normal[] = {PULLUP, PULLDOWN, -INVALID,};
enum pull_updown sensor_com_g710c_vb_pullud_normal[] = {PULLDOWN, -INVALID,};
enum pull_updown sensor_pro_g710c_vb_pullud_normal[] = {PULLUP, -INVALID,};
enum pull_updown therm_g710c_vb_pullud_normal[] = {NOPULL, -INVALID,};
enum pull_updown es305_g710c_vb_pullud_normal[] = {NOPULL, PULLDOWN, -INVALID,};
enum pull_updown pmu_g710c_vb_pullud_normal[] = {NOPULL, PULLUP, -INVALID,};
enum pull_updown battery_g710c_vb_pullud_normal[] = {PULLUP, -INVALID,};
enum pull_updown camera_g710c_vb_pullud_normal[] = {PULLDOWN, -INVALID,};

/******************lowpower pullud****************/

enum pull_updown i2c0_g710c_vb_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c1_g710c_vb_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c2_g710c_vb_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown i2c3_g710c_vb_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown spi0_g710c_vb_pullud_lowpower[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown spi0_cs_g710c_vb_pullud_lowpower[] = {PULLDOWN, NOPULL, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown uart0_g710c_vb_pullud_lowpower[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown uart1_g710c_vb_pullud_lowpower[] = {NOPULL, PULLUP, NOPULL, PULLDOWN, -INVALID,};
enum pull_updown uart2_g710c_vb_pullud_lowpower[] = {NOPULL, PULLDOWN, -INVALID,};
enum pull_updown uart4_g710c_vb_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown kpc_g710c_vb_pullud_lowpower[] = {PULLUP, PULLUP, -INVALID,};
enum pull_updown sd_g710c_vb_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown nand_g710c_vb_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, NOPULL, NOPULL, NOPULL, PULLDOWN, NOPULL, NOPULL, NOPULL, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown sdio_g710c_vb_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown btpm_g710c_vb_pullud_lowpower[] = {PULLUP, NOPULL, -INVALID,};
enum pull_updown btpwr_g710c_vb_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown gps_boardcom_g710c_vb_pullud_lowpower[] = {-INVALID,};
enum pull_updown ts_g710c_vb_pullud_lowpower[] = {NOPULL, PULLUP, -INVALID,};
enum pull_updown lcd_g710c_vb_pullud_lowpower[] = {NOPULL, PULLDOWN, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown pwm_g710c_vb_pullud_lowpower[] = {-INVALID,};
enum pull_updown hdmi_g710c_vb_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown wifi_g710c_vb_pullud_lowpower[] = {NOPULL, PULLDOWN, -INVALID,};
enum pull_updown isp_dvp_g710c_vb_pullud_lowpower[] = {NOPULL, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown isp_i2c_g710c_vb_pullud_lowpower[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown isp_reset_g710c_vb_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_g710c_vb_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown isp_flash_g710c_vb_pullud_lowpower[] = {NOPULL, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown charger_g710c_vb_pullud_lowpower[] = {PULLUP, NOPULL, -INVALID,};
enum pull_updown gsensor_g710c_vb_pullud_lowpower[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown audio_spk_g710c_vb_pullud_lowpower[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown audio_eph_g710c_vb_pullud_lowpower[] = {PULLDOWN, -INVALID,};
enum pull_updown modem_g710c_vb_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, NOPULL, PULLDOWN, -INVALID,};
enum pull_updown vbusdrv_g710c_vb_pullud_lowpower[] = {PULLDOWN, -INVALID,};
enum pull_updown gps_spi_g710c_vb_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown modem_switch_g710c_vb_pullud_lowpower[] = {NOPULL, -INVALID,};
enum pull_updown mcamdvdd_g710c_vb_pullud_lowpower[] = {NOPULL, -INVALID,};
enum pull_updown usb_switch_g710c_vb_pullud_lowpower[] = {NOPULL, NOPULL, NOPULL, NOPULL, PULLDOWN, PULLDOWN, PULLDOWN, NOPULL, -INVALID,};
enum pull_updown modem_qsc_g710c_vb_pullud_lowpower[] = {NOPULL, -INVALID,};
enum pull_updown sensor_gyr_g710c_vb_pullud_lowpower[] = {-INVALID,};
enum pull_updown headset_uart_g710c_vb_pullud_lowpower[] = {-INVALID,};
enum pull_updown mhl_g710c_vb_pullud_lowpower[] = {PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown sensor_com_g710c_vb_pullud_lowpower[] = {PULLDOWN, -INVALID,};
enum pull_updown sensor_pro_g710c_vb_pullud_lowpower[] = {PULLUP, -INVALID,};
enum pull_updown therm_g710c_vb_pullud_lowpower[] = {PULLDOWN, -INVALID,};
enum pull_updown es305_g710c_vb_pullud_lowpower[] = {NOPULL, PULLDOWN, -INVALID,};
enum pull_updown pmu_g710c_vb_pullud_lowpower[] = {NOPULL, PULLUP, -INVALID,};
enum pull_updown battery_g710c_vb_pullud_lowpower[] = {PULLUP, -INVALID,};
enum pull_updown camera_g710c_vb_pullud_lowpower[] = {PULLDOWN, -INVALID,};

/******************normal drv****************/

enum drive_strength i2c0_g710c_vb_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c1_g710c_vb_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c2_g710c_vb_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c3_g710c_vb_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength spi0_g710c_vb_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength spi0_cs_g710c_vb_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength uart0_g710c_vb_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength uart1_g710c_vb_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength uart2_g710c_vb_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength uart4_g710c_vb_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength kpc_g710c_vb_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength sd_g710c_vb_drv_normal[] = {LEVEL2, LEVEL3, LEVEL3, LEVEL3, LEVEL3, LEVEL3, -INVALID,};
enum drive_strength nand_g710c_vb_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, RESERVE, RESERVE, RESERVE, RESERVE, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength sdio_g710c_vb_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength btpm_g710c_vb_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength btpwr_g710c_vb_drv_normal[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength gps_boardcom_g710c_vb_drv_normal[] = {-INVALID,};
enum drive_strength ts_g710c_vb_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength lcd_g710c_vb_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength pwm_g710c_vb_drv_normal[] = {-INVALID,};
enum drive_strength hdmi_g710c_vb_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength wifi_g710c_vb_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_dvp_g710c_vb_drv_normal[] = {RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_i2c_g710c_vb_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_reset_g710c_vb_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_g710c_vb_drv_normal[] = {LEVEL0, LEVEL0, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_flash_g710c_vb_drv_normal[] = {RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength charger_g710c_vb_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength gsensor_g710c_vb_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength audio_spk_g710c_vb_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength audio_eph_g710c_vb_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength modem_g710c_vb_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength vbusdrv_g710c_vb_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength gps_spi_g710c_vb_drv_normal[] = {LEVEL2, RESERVE, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength modem_switch_g710c_vb_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength mcamdvdd_g710c_vb_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength usb_switch_g710c_vb_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, RESERVE, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength modem_qsc_g710c_vb_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength sensor_gyr_g710c_vb_drv_normal[] = {-INVALID,};
enum drive_strength headset_uart_g710c_vb_drv_normal[] = {-INVALID,};
enum drive_strength mhl_g710c_vb_drv_normal[] = {RESERVE, LEVEL0, -INVALID,};
enum drive_strength sensor_com_g710c_vb_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength sensor_pro_g710c_vb_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength therm_g710c_vb_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength es305_g710c_vb_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength pmu_g710c_vb_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength battery_g710c_vb_drv_normal[] = {RESERVE, -INVALID,};
enum drive_strength camera_g710c_vb_drv_normal[] = {RESERVE, -INVALID,};

/******************lowpower drv****************/

enum drive_strength i2c0_g710c_vb_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c1_g710c_vb_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c2_g710c_vb_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength i2c3_g710c_vb_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength spi0_g710c_vb_drv_lowpower[] = {LEVEL0, LEVEL0, -INVALID,};
enum drive_strength spi0_cs_g710c_vb_drv_lowpower[] = {LEVEL0, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength uart0_g710c_vb_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength uart1_g710c_vb_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength uart2_g710c_vb_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength uart4_g710c_vb_drv_lowpower[] = {RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength kpc_g710c_vb_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength sd_g710c_vb_drv_lowpower[] = {LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, -INVALID,};
enum drive_strength nand_g710c_vb_drv_lowpower[] = {LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, RESERVE, LEVEL0, LEVEL2, LEVEL2, LEVEL2, LEVEL0, LEVEL2, LEVEL2, LEVEL2, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, -INVALID,};
enum drive_strength sdio_g710c_vb_drv_lowpower[] = {LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, -INVALID,};
enum drive_strength btpm_g710c_vb_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength btpwr_g710c_vb_drv_lowpower[] = {LEVEL2, LEVEL2, -INVALID,};
enum drive_strength gps_boardcom_g710c_vb_drv_lowpower[] = {-INVALID,};
enum drive_strength ts_g710c_vb_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength lcd_g710c_vb_drv_lowpower[] = {RESERVE, RESERVE, LEVEL0, LEVEL0, RESERVE, -INVALID,};
enum drive_strength pwm_g710c_vb_drv_lowpower[] = {-INVALID,};
enum drive_strength hdmi_g710c_vb_drv_lowpower[] = {LEVEL0, LEVEL0, LEVEL0, LEVEL0, -INVALID,};
enum drive_strength wifi_g710c_vb_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_dvp_g710c_vb_drv_lowpower[] = {LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, -INVALID,};
enum drive_strength isp_i2c_g710c_vb_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_reset_g710c_vb_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_g710c_vb_drv_lowpower[] = {LEVEL0, LEVEL0, RESERVE, RESERVE, RESERVE, RESERVE, -INVALID,};
enum drive_strength isp_flash_g710c_vb_drv_lowpower[] = {RESERVE, LEVEL0, LEVEL0, -INVALID,};
enum drive_strength charger_g710c_vb_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength gsensor_g710c_vb_drv_lowpower[] = {LEVEL0, RESERVE, -INVALID,};
enum drive_strength audio_spk_g710c_vb_drv_lowpower[] = {LEVEL0, RESERVE, -INVALID,};
enum drive_strength audio_eph_g710c_vb_drv_lowpower[] = {LEVEL0, -INVALID,};
enum drive_strength modem_g710c_vb_drv_lowpower[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL0, -INVALID,};
enum drive_strength vbusdrv_g710c_vb_drv_lowpower[] = {LEVEL0, -INVALID,};
enum drive_strength gps_spi_g710c_vb_drv_lowpower[] = {RESERVE, RESERVE, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength modem_switch_g710c_vb_drv_lowpower[] = {RESERVE, -INVALID,};
enum drive_strength mcamdvdd_g710c_vb_drv_lowpower[] = {RESERVE, -INVALID,};
enum drive_strength usb_switch_g710c_vb_drv_lowpower[] = {LEVEL2, LEVEL2, LEVEL2, RESERVE, LEVEL0, LEVEL0, RESERVE, RESERVE, -INVALID,};
enum drive_strength modem_qsc_g710c_vb_drv_lowpower[] = {RESERVE, -INVALID,};
enum drive_strength sensor_gyr_g710c_vb_drv_lowpower[] = {-INVALID,};
enum drive_strength headset_uart_g710c_vb_drv_lowpower[] = {-INVALID,};
enum drive_strength mhl_g710c_vb_drv_lowpower[] = {LEVEL0, LEVEL0, -INVALID,};
enum drive_strength sensor_com_g710c_vb_drv_lowpower[] = {RESERVE, -INVALID,};
enum drive_strength sensor_pro_g710c_vb_drv_lowpower[] = {RESERVE, -INVALID,};
enum drive_strength therm_g710c_vb_drv_lowpower[] = {LEVEL0, -INVALID,};
enum drive_strength es305_g710c_vb_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength pmu_g710c_vb_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength battery_g710c_vb_drv_lowpower[] = {RESERVE, -INVALID,};
enum drive_strength camera_g710c_vb_drv_lowpower[] = {LEVEL0, -INVALID,};

/******************config****************/

struct block_config i2c0_g710c_vb_config[] = {
	[NORMAL] = {i2c0_g710c_vb_func_normal, i2c0_g710c_vb_pullud_normal, i2c0_g710c_vb_drv_normal},
	[LOWPOWER] = {i2c0_g710c_vb_func_lowpower, i2c0_g710c_vb_pullud_lowpower, i2c0_g710c_vb_drv_lowpower},
};
struct block_config i2c1_g710c_vb_config[] = {
	[NORMAL] = {i2c1_g710c_vb_func_normal, i2c1_g710c_vb_pullud_normal, i2c1_g710c_vb_drv_normal},
	[LOWPOWER] = {i2c1_g710c_vb_func_lowpower, i2c1_g710c_vb_pullud_lowpower, i2c1_g710c_vb_drv_lowpower},
};
struct block_config i2c2_g710c_vb_config[] = {
	[NORMAL] = {i2c2_g710c_vb_func_normal, i2c2_g710c_vb_pullud_normal, i2c2_g710c_vb_drv_normal},
	[LOWPOWER] = {i2c2_g710c_vb_func_lowpower, i2c2_g710c_vb_pullud_lowpower, i2c2_g710c_vb_drv_lowpower},
};
struct block_config i2c3_g710c_vb_config[] = {
	[NORMAL] = {i2c3_g710c_vb_func_normal, i2c3_g710c_vb_pullud_normal, i2c3_g710c_vb_drv_normal},
	[LOWPOWER] = {i2c3_g710c_vb_func_lowpower, i2c3_g710c_vb_pullud_lowpower, i2c3_g710c_vb_drv_lowpower},
};
struct block_config spi0_g710c_vb_config[] = {
	[NORMAL] = {spi0_g710c_vb_func_normal, spi0_g710c_vb_pullud_normal, spi0_g710c_vb_drv_normal},
	[LOWPOWER] = {spi0_g710c_vb_func_lowpower, spi0_g710c_vb_pullud_lowpower, spi0_g710c_vb_drv_lowpower},
};
struct block_config spi0_cs_g710c_vb_config[] = {
	[NORMAL] = {spi0_cs_g710c_vb_func_normal, spi0_cs_g710c_vb_pullud_normal, spi0_cs_g710c_vb_drv_normal},
	[LOWPOWER] = {spi0_cs_g710c_vb_func_lowpower, spi0_cs_g710c_vb_pullud_lowpower, spi0_cs_g710c_vb_drv_lowpower},
};
struct block_config uart0_g710c_vb_config[] = {
	[NORMAL] = {uart0_g710c_vb_func_normal, uart0_g710c_vb_pullud_normal, uart0_g710c_vb_drv_normal},
	[LOWPOWER] = {uart0_g710c_vb_func_lowpower, uart0_g710c_vb_pullud_lowpower, uart0_g710c_vb_drv_lowpower},
};
struct block_config uart1_g710c_vb_config[] = {
	[NORMAL] = {uart1_g710c_vb_func_normal, uart1_g710c_vb_pullud_normal, uart1_g710c_vb_drv_normal},
	[LOWPOWER] = {uart1_g710c_vb_func_lowpower, uart1_g710c_vb_pullud_lowpower, uart1_g710c_vb_drv_lowpower},
};
struct block_config uart2_g710c_vb_config[] = {
	[NORMAL] = {uart2_g710c_vb_func_normal, uart2_g710c_vb_pullud_normal, uart2_g710c_vb_drv_normal},
	[LOWPOWER] = {uart2_g710c_vb_func_lowpower, uart2_g710c_vb_pullud_lowpower, uart2_g710c_vb_drv_lowpower},
};
struct block_config uart4_g710c_vb_config[] = {
	[NORMAL] = {uart4_g710c_vb_func_normal, uart4_g710c_vb_pullud_normal, uart4_g710c_vb_drv_normal},
	[LOWPOWER] = {uart4_g710c_vb_func_lowpower, uart4_g710c_vb_pullud_lowpower, uart4_g710c_vb_drv_lowpower},
};
struct block_config kpc_g710c_vb_config[] = {
	[NORMAL] = {kpc_g710c_vb_func_normal, kpc_g710c_vb_pullud_normal, kpc_g710c_vb_drv_normal},
	[LOWPOWER] = {kpc_g710c_vb_func_lowpower, kpc_g710c_vb_pullud_lowpower, kpc_g710c_vb_drv_lowpower},
};
struct block_config sd_g710c_vb_config[] = {
	[NORMAL] = {sd_g710c_vb_func_normal, sd_g710c_vb_pullud_normal, sd_g710c_vb_drv_normal},
	[LOWPOWER] = {sd_g710c_vb_func_lowpower, sd_g710c_vb_pullud_lowpower, sd_g710c_vb_drv_lowpower},
};
struct block_config nand_g710c_vb_config[] = {
	[NORMAL] = {nand_g710c_vb_func_normal, nand_g710c_vb_pullud_normal, nand_g710c_vb_drv_normal},
	[LOWPOWER] = {nand_g710c_vb_func_lowpower, nand_g710c_vb_pullud_lowpower, nand_g710c_vb_drv_lowpower},
};
struct block_config sdio_g710c_vb_config[] = {
	[NORMAL] = {sdio_g710c_vb_func_normal, sdio_g710c_vb_pullud_normal, sdio_g710c_vb_drv_normal},
	[LOWPOWER] = {sdio_g710c_vb_func_lowpower, sdio_g710c_vb_pullud_lowpower, sdio_g710c_vb_drv_lowpower},
};
struct block_config btpm_g710c_vb_config[] = {
	[NORMAL] = {btpm_g710c_vb_func_normal, btpm_g710c_vb_pullud_normal, btpm_g710c_vb_drv_normal},
	[LOWPOWER] = {btpm_g710c_vb_func_lowpower, btpm_g710c_vb_pullud_lowpower, btpm_g710c_vb_drv_lowpower},
};
struct block_config btpwr_g710c_vb_config[] = {
	[NORMAL] = {btpwr_g710c_vb_func_normal, btpwr_g710c_vb_pullud_normal, btpwr_g710c_vb_drv_normal},
	[LOWPOWER] = {btpwr_g710c_vb_func_lowpower, btpwr_g710c_vb_pullud_lowpower, btpwr_g710c_vb_drv_lowpower},
};
struct block_config gps_boardcom_g710c_vb_config[] = {
	[NORMAL] = {gps_boardcom_g710c_vb_func_normal, gps_boardcom_g710c_vb_pullud_normal, gps_boardcom_g710c_vb_drv_normal},
	[LOWPOWER] = {gps_boardcom_g710c_vb_func_lowpower, gps_boardcom_g710c_vb_pullud_lowpower, gps_boardcom_g710c_vb_drv_lowpower},
};
struct block_config ts_g710c_vb_config[] = {
	[NORMAL] = {ts_g710c_vb_func_normal, ts_g710c_vb_pullud_normal, ts_g710c_vb_drv_normal},
	[LOWPOWER] = {ts_g710c_vb_func_lowpower, ts_g710c_vb_pullud_lowpower, ts_g710c_vb_drv_lowpower},
};
struct block_config lcd_g710c_vb_config[] = {
	[NORMAL] = {lcd_g710c_vb_func_normal, lcd_g710c_vb_pullud_normal, lcd_g710c_vb_drv_normal},
	[LOWPOWER] = {lcd_g710c_vb_func_lowpower, lcd_g710c_vb_pullud_lowpower, lcd_g710c_vb_drv_lowpower},
};
struct block_config pwm_g710c_vb_config[] = {
	[NORMAL] = {pwm_g710c_vb_func_normal, pwm_g710c_vb_pullud_normal, pwm_g710c_vb_drv_normal},
	[LOWPOWER] = {pwm_g710c_vb_func_lowpower, pwm_g710c_vb_pullud_lowpower, pwm_g710c_vb_drv_lowpower},
};
struct block_config hdmi_g710c_vb_config[] = {
	[NORMAL] = {hdmi_g710c_vb_func_normal, hdmi_g710c_vb_pullud_normal, hdmi_g710c_vb_drv_normal},
	[LOWPOWER] = {hdmi_g710c_vb_func_lowpower, hdmi_g710c_vb_pullud_lowpower, hdmi_g710c_vb_drv_lowpower},
};
struct block_config wifi_g710c_vb_config[] = {
	[NORMAL] = {wifi_g710c_vb_func_normal, wifi_g710c_vb_pullud_normal, wifi_g710c_vb_drv_normal},
	[LOWPOWER] = {wifi_g710c_vb_func_lowpower, wifi_g710c_vb_pullud_lowpower, wifi_g710c_vb_drv_lowpower},
};
struct block_config isp_dvp_g710c_vb_config[] = {
	[NORMAL] = {isp_dvp_g710c_vb_func_normal, isp_dvp_g710c_vb_pullud_normal, isp_dvp_g710c_vb_drv_normal},
	[LOWPOWER] = {isp_dvp_g710c_vb_func_lowpower, isp_dvp_g710c_vb_pullud_lowpower, isp_dvp_g710c_vb_drv_lowpower},
};
struct block_config isp_i2c_g710c_vb_config[] = {
	[NORMAL] = {isp_i2c_g710c_vb_func_normal, isp_i2c_g710c_vb_pullud_normal, isp_i2c_g710c_vb_drv_normal},
	[LOWPOWER] = {isp_i2c_g710c_vb_func_lowpower, isp_i2c_g710c_vb_pullud_lowpower, isp_i2c_g710c_vb_drv_lowpower},
};
struct block_config isp_reset_g710c_vb_config[] = {
	[NORMAL] = {isp_reset_g710c_vb_func_normal, isp_reset_g710c_vb_pullud_normal, isp_reset_g710c_vb_drv_normal},
	[LOWPOWER] = {isp_reset_g710c_vb_func_lowpower, isp_reset_g710c_vb_pullud_lowpower, isp_reset_g710c_vb_drv_lowpower},
};
struct block_config isp_g710c_vb_config[] = {
	[NORMAL] = {isp_g710c_vb_func_normal, isp_g710c_vb_pullud_normal, isp_g710c_vb_drv_normal},
	[LOWPOWER] = {isp_g710c_vb_func_lowpower, isp_g710c_vb_pullud_lowpower, isp_g710c_vb_drv_lowpower},
};
struct block_config isp_flash_g710c_vb_config[] = {
	[NORMAL] = {isp_flash_g710c_vb_func_normal, isp_flash_g710c_vb_pullud_normal, isp_flash_g710c_vb_drv_normal},
	[LOWPOWER] = {isp_flash_g710c_vb_func_lowpower, isp_flash_g710c_vb_pullud_lowpower, isp_flash_g710c_vb_drv_lowpower},
};
struct block_config charger_g710c_vb_config[] = {
	[NORMAL] = {charger_g710c_vb_func_normal, charger_g710c_vb_pullud_normal, charger_g710c_vb_drv_normal},
	[LOWPOWER] = {charger_g710c_vb_func_lowpower, charger_g710c_vb_pullud_lowpower, charger_g710c_vb_drv_lowpower},
};
struct block_config gsensor_g710c_vb_config[] = {
	[NORMAL] = {gsensor_g710c_vb_func_normal, gsensor_g710c_vb_pullud_normal, gsensor_g710c_vb_drv_normal},
	[LOWPOWER] = {gsensor_g710c_vb_func_lowpower, gsensor_g710c_vb_pullud_lowpower, gsensor_g710c_vb_drv_lowpower},
};
struct block_config audio_spk_g710c_vb_config[] = {
	[NORMAL] = {audio_spk_g710c_vb_func_normal, audio_spk_g710c_vb_pullud_normal, audio_spk_g710c_vb_drv_normal},
	[LOWPOWER] = {audio_spk_g710c_vb_func_lowpower, audio_spk_g710c_vb_pullud_lowpower, audio_spk_g710c_vb_drv_lowpower},
};
struct block_config audio_eph_g710c_vb_config[] = {
	[NORMAL] = {audio_eph_g710c_vb_func_normal, audio_eph_g710c_vb_pullud_normal, audio_eph_g710c_vb_drv_normal},
	[LOWPOWER] = {audio_eph_g710c_vb_func_lowpower, audio_eph_g710c_vb_pullud_lowpower, audio_eph_g710c_vb_drv_lowpower},
};
struct block_config modem_g710c_vb_config[] = {
	[NORMAL] = {modem_g710c_vb_func_normal, modem_g710c_vb_pullud_normal, modem_g710c_vb_drv_normal},
	[LOWPOWER] = {modem_g710c_vb_func_lowpower, modem_g710c_vb_pullud_lowpower, modem_g710c_vb_drv_lowpower},
};
struct block_config vbusdrv_g710c_vb_config[] = {
	[NORMAL] = {vbusdrv_g710c_vb_func_normal, vbusdrv_g710c_vb_pullud_normal, vbusdrv_g710c_vb_drv_normal},
	[LOWPOWER] = {vbusdrv_g710c_vb_func_lowpower, vbusdrv_g710c_vb_pullud_lowpower, vbusdrv_g710c_vb_drv_lowpower},
};
struct block_config gps_spi_g710c_vb_config[] = {
	[NORMAL] = {gps_spi_g710c_vb_func_normal, gps_spi_g710c_vb_pullud_normal, gps_spi_g710c_vb_drv_normal},
	[LOWPOWER] = {gps_spi_g710c_vb_func_lowpower, gps_spi_g710c_vb_pullud_lowpower, gps_spi_g710c_vb_drv_lowpower},
};
struct block_config modem_switch_g710c_vb_config[] = {
	[NORMAL] = {modem_switch_g710c_vb_func_normal, modem_switch_g710c_vb_pullud_normal, modem_switch_g710c_vb_drv_normal},
	[LOWPOWER] = {modem_switch_g710c_vb_func_lowpower, modem_switch_g710c_vb_pullud_lowpower, modem_switch_g710c_vb_drv_lowpower},
};
struct block_config mcamdvdd_g710c_vb_config[] = {
	[NORMAL] = {mcamdvdd_g710c_vb_func_normal, mcamdvdd_g710c_vb_pullud_normal, mcamdvdd_g710c_vb_drv_normal},
	[LOWPOWER] = {mcamdvdd_g710c_vb_func_lowpower, mcamdvdd_g710c_vb_pullud_lowpower, mcamdvdd_g710c_vb_drv_lowpower},
};
struct block_config usb_switch_g710c_vb_config[] = {
	[NORMAL] = {usb_switch_g710c_vb_func_normal, usb_switch_g710c_vb_pullud_normal, usb_switch_g710c_vb_drv_normal},
	[LOWPOWER] = {usb_switch_g710c_vb_func_lowpower, usb_switch_g710c_vb_pullud_lowpower, usb_switch_g710c_vb_drv_lowpower},
};
struct block_config modem_qsc_g710c_vb_config[] = {
	[NORMAL] = {modem_qsc_g710c_vb_func_normal, modem_qsc_g710c_vb_pullud_normal, modem_qsc_g710c_vb_drv_normal},
	[LOWPOWER] = {modem_qsc_g710c_vb_func_lowpower, modem_qsc_g710c_vb_pullud_lowpower, modem_qsc_g710c_vb_drv_lowpower},
};
struct block_config sensor_gyr_g710c_vb_config[] = {
	[NORMAL] = {sensor_gyr_g710c_vb_func_normal, sensor_gyr_g710c_vb_pullud_normal, sensor_gyr_g710c_vb_drv_normal},
	[LOWPOWER] = {sensor_gyr_g710c_vb_func_lowpower, sensor_gyr_g710c_vb_pullud_lowpower, sensor_gyr_g710c_vb_drv_lowpower},
};
struct block_config headset_uart_g710c_vb_config[] = {
	[NORMAL] = {headset_uart_g710c_vb_func_normal, headset_uart_g710c_vb_pullud_normal, headset_uart_g710c_vb_drv_normal},
	[LOWPOWER] = {headset_uart_g710c_vb_func_lowpower, headset_uart_g710c_vb_pullud_lowpower, headset_uart_g710c_vb_drv_lowpower},
};
struct block_config mhl_g710c_vb_config[] = {
	[NORMAL] = {mhl_g710c_vb_func_normal, mhl_g710c_vb_pullud_normal, mhl_g710c_vb_drv_normal},
	[LOWPOWER] = {mhl_g710c_vb_func_lowpower, mhl_g710c_vb_pullud_lowpower, mhl_g710c_vb_drv_lowpower},
};
struct block_config sensor_com_g710c_vb_config[] = {
	[NORMAL] = {sensor_com_g710c_vb_func_normal, sensor_com_g710c_vb_pullud_normal, sensor_com_g710c_vb_drv_normal},
	[LOWPOWER] = {sensor_com_g710c_vb_func_lowpower, sensor_com_g710c_vb_pullud_lowpower, sensor_com_g710c_vb_drv_lowpower},
};
struct block_config sensor_pro_g710c_vb_config[] = {
	[NORMAL] = {sensor_pro_g710c_vb_func_normal, sensor_pro_g710c_vb_pullud_normal, sensor_pro_g710c_vb_drv_normal},
	[LOWPOWER] = {sensor_pro_g710c_vb_func_lowpower, sensor_pro_g710c_vb_pullud_lowpower, sensor_pro_g710c_vb_drv_lowpower},
};
struct block_config therm_g710c_vb_config[] = {
	[NORMAL] = {therm_g710c_vb_func_normal, therm_g710c_vb_pullud_normal, therm_g710c_vb_drv_normal},
	[LOWPOWER] = {therm_g710c_vb_func_lowpower, therm_g710c_vb_pullud_lowpower, therm_g710c_vb_drv_lowpower},
};
struct block_config es305_g710c_vb_config[] = {
	[NORMAL] = {es305_g710c_vb_func_normal, es305_g710c_vb_pullud_normal, es305_g710c_vb_drv_normal},
	[LOWPOWER] = {es305_g710c_vb_func_lowpower, es305_g710c_vb_pullud_lowpower, es305_g710c_vb_drv_lowpower},
};
struct block_config pmu_g710c_vb_config[] = {
	[NORMAL] = {pmu_g710c_vb_func_normal, pmu_g710c_vb_pullud_normal, pmu_g710c_vb_drv_normal},
	[LOWPOWER] = {pmu_g710c_vb_func_lowpower, pmu_g710c_vb_pullud_lowpower, pmu_g710c_vb_drv_lowpower},
};
struct block_config battery_g710c_vb_config[] = {
	[NORMAL] = {battery_g710c_vb_func_normal, battery_g710c_vb_pullud_normal, battery_g710c_vb_drv_normal},
	[LOWPOWER] = {battery_g710c_vb_func_lowpower, battery_g710c_vb_pullud_lowpower, battery_g710c_vb_drv_lowpower},
};
struct block_config camera_g710c_vb_config[] = {
	[NORMAL] = {camera_g710c_vb_func_normal, camera_g710c_vb_pullud_normal, camera_g710c_vb_drv_normal},
	[LOWPOWER] = {camera_g710c_vb_func_lowpower, camera_g710c_vb_pullud_lowpower, camera_g710c_vb_drv_lowpower},
};


/******************pins ****************/

struct  iomux_pin *audio_es305_g710c_vb_pins[] = {
&gpio_127_cs, &gpio_128_cs, NULL,
};
struct  iomux_pin *spi1_g710c_vb_pins[] = {
&gpio_113_cs, &gpio_114_cs, &gpio_115_cs, &gpio_116_cs, NULL,
};
struct  iomux_pin *uart3_g710c_vb_pins[] = {
&gpio_154_cs, &gpio_155_cs, &gpio_160_cs, &gpio_161_cs, NULL,
};
struct  iomux_pin *emmc_g710c_vb_pins[] = {
&gpio_028_cs, &gpio_029_cs, &gpio_030_cs, &gpio_031_cs, &gpio_032_cs, &gpio_033_cs, &gpio_034_cs, &gpio_035_cs, &gpio_036_cs, &gpio_037_cs, NULL,
};

/******************IOMUX_BLOCK****************/

IOMUX_BLOCK(block_audio_es305_g710c_vb, "block_audio_es305_g710c_vb", NORMAL, audio_es305_g710c_vb_pins)
IOMUX_BLOCK(block_spi1_g710c_vb, "block_spi1_g710c_vb", NORMAL, spi1_g710c_vb_pins)
IOMUX_BLOCK(block_uart3_g710c_vb, "block_uart3_g710c_vb", NORMAL, uart3_g710c_vb_pins)
IOMUX_BLOCK(block_emmc_g710c_vb, "block_emmc_g710c_vb", NORMAL, emmc_g710c_vb_pins)

/******************normal func ****************/

enum lowlayer_func audio_es305_g710c_vb_func_normal[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func spi1_g710c_vb_func_normal[] = {FUNC0, FUNC0, FUNC0, FUNC0, -INVALID,};
enum lowlayer_func uart3_g710c_vb_func_normal[] = {FUNC2, FUNC2, FUNC2, FUNC2, -INVALID,};
enum lowlayer_func emmc_g710c_vb_func_normal[] = {FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, FUNC2, -INVALID,};

/******************lowpower func****************/

enum lowlayer_func audio_es305_g710c_vb_func_lowpower[] = {FUNC1, FUNC1, -INVALID,};
enum lowlayer_func spi1_g710c_vb_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func uart3_g710c_vb_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, -INVALID,};
enum lowlayer_func emmc_g710c_vb_func_lowpower[] = {FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC1, FUNC0, FUNC0, -INVALID,};

/******************normal pullud****************/

enum pull_updown audio_es305_g710c_vb_pullud_normal[] = {NOPULL, NOPULL, -INVALID,};
enum pull_updown spi1_g710c_vb_pullud_normal[] = {PULLUP, NOPULL, NOPULL, PULLDOWN, -INVALID,};
enum pull_updown uart3_g710c_vb_pullud_normal[] = {NOPULL, NOPULL, NOPULL, NOPULL, -INVALID,};
enum pull_updown emmc_g710c_vb_pullud_normal[] = {PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, PULLUP, NOPULL, -INVALID,};

/******************lowpower pullud****************/

enum pull_updown audio_es305_g710c_vb_pullud_lowpower[] = {NOPULL, PULLDOWN, -INVALID,};
enum pull_updown spi1_g710c_vb_pullud_lowpower[] = {NOPULL, NOPULL, PULLDOWN, PULLDOWN, -INVALID,};
enum pull_updown uart3_g710c_vb_pullud_lowpower[] = {PULLDOWN, PULLDOWN, NOPULL, NOPULL, -INVALID,};
enum pull_updown emmc_g710c_vb_pullud_lowpower[] = {PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, PULLDOWN, -INVALID,};

/******************normal drv****************/

enum drive_strength audio_es305_g710c_vb_drv_normal[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength spi1_g710c_vb_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength uart3_g710c_vb_drv_normal[] = {LEVEL2, RESERVE, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength emmc_g710c_vb_drv_normal[] = {LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, LEVEL2, -INVALID,};

/******************lowpower drv****************/

enum drive_strength audio_es305_g710c_vb_drv_lowpower[] = {RESERVE, RESERVE, -INVALID,};
enum drive_strength spi1_g710c_vb_drv_lowpower[] = {LEVEL2, LEVEL2, LEVEL0, LEVEL0, -INVALID,};
enum drive_strength uart3_g710c_vb_drv_lowpower[] = {LEVEL2, RESERVE, LEVEL2, LEVEL2, -INVALID,};
enum drive_strength emmc_g710c_vb_drv_lowpower[] = {LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, LEVEL0, -INVALID,};

/******************config****************/

struct block_config audio_es305_g710c_vb_config[] = {
	[NORMAL] = {audio_es305_g710c_vb_func_normal, audio_es305_g710c_vb_pullud_normal, audio_es305_g710c_vb_drv_normal},
	[LOWPOWER] = {audio_es305_g710c_vb_func_lowpower, audio_es305_g710c_vb_pullud_lowpower, audio_es305_g710c_vb_drv_lowpower},
};
struct block_config spi1_g710c_vb_config[] = {
	[NORMAL] = {spi1_g710c_vb_func_normal, spi1_g710c_vb_pullud_normal, spi1_g710c_vb_drv_normal},
	[LOWPOWER] = {spi1_g710c_vb_func_lowpower, spi1_g710c_vb_pullud_lowpower, spi1_g710c_vb_drv_lowpower},
};
struct block_config uart3_g710c_vb_config[] = {
	[NORMAL] = {uart3_g710c_vb_func_normal, uart3_g710c_vb_pullud_normal, uart3_g710c_vb_drv_normal},
	[LOWPOWER] = {uart3_g710c_vb_func_lowpower, uart3_g710c_vb_pullud_lowpower, uart3_g710c_vb_drv_lowpower},
};
struct block_config emmc_g710c_vb_config[] = {
	[NORMAL] = {emmc_g710c_vb_func_normal, emmc_g710c_vb_pullud_normal, emmc_g710c_vb_drv_normal},
	[LOWPOWER] = {emmc_g710c_vb_func_lowpower, emmc_g710c_vb_pullud_lowpower, emmc_g710c_vb_drv_lowpower},
};

struct block_table block_config_phone_g710c_vb[] = {
     BLOCK_CONFIG("block_i2c0", &block_i2c0_g710c_vb, i2c0_g710c_vb_config)
     BLOCK_CONFIG("block_i2c1", &block_i2c1_g710c_vb, i2c1_g710c_vb_config)
     BLOCK_CONFIG("block_i2c2", &block_i2c2_g710c_vb, i2c2_g710c_vb_config)
     BLOCK_CONFIG("block_i2c3", &block_i2c3_g710c_vb, i2c3_g710c_vb_config)
     BLOCK_CONFIG("block_spi0", &block_spi0_g710c_vb, spi0_g710c_vb_config)
     BLOCK_CONFIG("block_spi0_cs", &block_spi0_cs_g710c_vb, spi0_cs_g710c_vb_config)
     BLOCK_CONFIG("block_uart0", &block_uart0_g710c_vb, uart0_g710c_vb_config)
     BLOCK_CONFIG("block_uart1", &block_uart1_g710c_vb, uart1_g710c_vb_config)
     BLOCK_CONFIG("block_uart2", &block_uart2_g710c_vb, uart2_g710c_vb_config)
     BLOCK_CONFIG("block_uart4", &block_uart4_g710c_vb, uart4_g710c_vb_config)
     BLOCK_CONFIG("block_kpc", &block_kpc_g710c_vb, kpc_g710c_vb_config)
     BLOCK_CONFIG("block_sd", &block_sd_g710c_vb, sd_g710c_vb_config)
     BLOCK_CONFIG("block_nand", &block_nand_g710c_vb, nand_g710c_vb_config)
     BLOCK_CONFIG("block_sdio", &block_sdio_g710c_vb, sdio_g710c_vb_config)
     BLOCK_CONFIG("block_btpm", &block_btpm_g710c_vb, btpm_g710c_vb_config)
     BLOCK_CONFIG("block_btpwr", &block_btpwr_g710c_vb, btpwr_g710c_vb_config)
     BLOCK_CONFIG("block_gps_boardcom", &block_gps_boardcom_g710c_vb, gps_boardcom_g710c_vb_config)
     BLOCK_CONFIG("block_ts", &block_ts_g710c_vb, ts_g710c_vb_config)
     BLOCK_CONFIG("block_lcd", &block_lcd_g710c_vb, lcd_g710c_vb_config)
     BLOCK_CONFIG("block_pwm", &block_pwm_g710c_vb, pwm_g710c_vb_config)
     BLOCK_CONFIG("block_hdmi", &block_hdmi_g710c_vb, hdmi_g710c_vb_config)
     BLOCK_CONFIG("block_wifi", &block_wifi_g710c_vb, wifi_g710c_vb_config)
     BLOCK_CONFIG("block_isp_dvp", &block_isp_dvp_g710c_vb, isp_dvp_g710c_vb_config)
     BLOCK_CONFIG("block_isp_i2c", &block_isp_i2c_g710c_vb, isp_i2c_g710c_vb_config)
     BLOCK_CONFIG("block_isp_reset", &block_isp_reset_g710c_vb, isp_reset_g710c_vb_config)
     BLOCK_CONFIG("block_isp", &block_isp_g710c_vb, isp_g710c_vb_config)
     BLOCK_CONFIG("block_isp_flash", &block_isp_flash_g710c_vb, isp_flash_g710c_vb_config)
     BLOCK_CONFIG("block_charger", &block_charger_g710c_vb, charger_g710c_vb_config)
     BLOCK_CONFIG("block_gsensor", &block_gsensor_g710c_vb, gsensor_g710c_vb_config)
     BLOCK_CONFIG("block_audio_spk", &block_audio_spk_g710c_vb, audio_spk_g710c_vb_config)
     BLOCK_CONFIG("block_audio_eph", &block_audio_eph_g710c_vb, audio_eph_g710c_vb_config)
     BLOCK_CONFIG("block_modem", &block_modem_g710c_vb, modem_g710c_vb_config)
     BLOCK_CONFIG("block_vbusdrv", &block_vbusdrv_g710c_vb, vbusdrv_g710c_vb_config)
     BLOCK_CONFIG("block_gps_spi", &block_gps_spi_g710c_vb, gps_spi_g710c_vb_config)
     BLOCK_CONFIG("block_modem_switch", &block_modem_switch_g710c_vb, modem_switch_g710c_vb_config)
     BLOCK_CONFIG("block_mcamdvdd", &block_mcamdvdd_g710c_vb, mcamdvdd_g710c_vb_config)
     BLOCK_CONFIG("block_usb_switch", &block_usb_switch_g710c_vb, usb_switch_g710c_vb_config)
     BLOCK_CONFIG("block_modem_qsc", &block_modem_qsc_g710c_vb, modem_qsc_g710c_vb_config)
     BLOCK_CONFIG("block_sensor_gyr", &block_sensor_gyr_g710c_vb, sensor_gyr_g710c_vb_config)
     BLOCK_CONFIG("block_headset_uart", &block_headset_uart_g710c_vb, headset_uart_g710c_vb_config)
     BLOCK_CONFIG("block_mhl", &block_mhl_g710c_vb, mhl_g710c_vb_config)
     BLOCK_CONFIG("block_sensor_com", &block_sensor_com_g710c_vb, sensor_com_g710c_vb_config)
     BLOCK_CONFIG("block_sensor_pro", &block_sensor_pro_g710c_vb, sensor_pro_g710c_vb_config)
     BLOCK_CONFIG("block_therm", &block_therm_g710c_vb, therm_g710c_vb_config)
     BLOCK_CONFIG("block_es305", &block_es305_g710c_vb, es305_g710c_vb_config)
     BLOCK_CONFIG("block_pmu", &block_pmu_g710c_vb, pmu_g710c_vb_config)
     BLOCK_CONFIG("block_battery", &block_battery_g710c_vb, battery_g710c_vb_config)
     BLOCK_CONFIG("block_camera", &block_camera_g710c_vb, camera_g710c_vb_config)
     BLOCK_CONFIG("block_audio_es305", &block_audio_es305_g710c_vb, audio_es305_g710c_vb_config)
     BLOCK_CONFIG("block_spi1", &block_spi1_g710c_vb, spi1_g710c_vb_config)
     BLOCK_CONFIG("block_uart3", &block_uart3_g710c_vb, uart3_g710c_vb_config)
     BLOCK_CONFIG("block_emmc", &block_emmc_g710c_vb, emmc_g710c_vb_config)
     {NULL, NULL, NULL},
};


struct block_table *block_config_tables[] = {
[E_IOMUX_PALTFORM_ES] = block_config_table_es,
[E_IOMUX_PALTFORM_CS] = block_config_table_cs,
[E_IOMUX_PHONE_ES] = block_config_phone_u9510_es,
[E_IOMUX_PHONE_CS] = block_config_phone_u9510_cs,
[E_IOMUX_PHONE_C9800D] = block_config_phone_c9800d,
[E_IOMUX_PHONE_U9700L] = block_config_phone_u9700l,
[E_IOMUX_PHONE_U9900] = block_config_phone_u9900,
[E_IOMUX_PHONE_U9701L] = block_config_phone_u9701l,
[E_IOMUX_PHONE_G710C] = block_config_phone_g710c,
[E_IOMUX_PHONE_G710C_VB] = block_config_phone_g710c_vb,
[E_IOMUX_MAX] = NULL,
};

#endif
#ifdef	CONFIG_LOWPM_DEBUG
#define LOW_POWER(imo, imv, ico, icv, gpiog, gpiob, gpiod, gpiov) \
{				\
	.uiomg_off = imo,  .iomg_val = imv,   \
	.uiocg_off = ico,  .iocg_val  = icv,   \
	.ugpiog    = gpiog, .ugpio_bit = gpiob, \
	.gpio_dir  = gpiod, .gpio_val  = gpiov, \
}

#define FUNC0 		0X0
#define FUNC1 		0X1
#define FUNC2 		0X2
#define FUNC3 		0X3
#define NOPULL	 	0X0
#define PULLUP 		0X1
#define PULLDOWN 	0X2
#define DO 			1
#define DI 			0
#define L 			0x0
#define H 			0x1
#define RESERVE 	-1
#define IO_LIST_LENGTH (sizeof(iocfg_lookups_es)/sizeof(iocfg_lookups_es[0]))

static struct iocfg_lp iocfg_lookups_es[] = {
	//#gpio_002
	LOW_POWER(0x00, FUNC0, 0x24, NOPULL, 0, 2, DO, L),
	//#gpio_003
	LOW_POWER(0x00, FUNC0, 0x28, NOPULL, 0, 3, DO, L),
	//#gpio_004
	LOW_POWER(0x00, FUNC0, 0x2C, PULLDOWN, 0, 4, DI, L),
	//#gpio_005
	LOW_POWER(0x00, FUNC0, 0x30, PULLUP, 0, 5, DI, L),
	//#gpio_006
	LOW_POWER(0x04, FUNC0, 0x34, NOPULL, 0, 6, DO, L),
	//#gpio_007
	LOW_POWER(0x08, FUNC0, 0x38, PULLDOWN, 0, 7, DI, L),
	//#gpio_008
	LOW_POWER(0x0C, FUNC1, 0x3C, PULLDOWN, 1, 0, DI, L),
	//#gpio_009
	LOW_POWER(0x0C, FUNC1, 0x40, PULLDOWN, 1, 1, DI, L),
	//#gpio_010
	LOW_POWER(0x0C, FUNC1, 0x44, PULLDOWN, 1, 2, DI, L),
	//#gpio_011
	LOW_POWER(0x0C, FUNC1, 0x48, PULLDOWN, 1, 3, DI, L),
	//#gpio_012
	LOW_POWER(0x0C, FUNC1, 0x4C, PULLDOWN, 1, 4, DI, L),
	//#gpio_013
	LOW_POWER(0x10, FUNC1, 0x50, PULLDOWN, 1, 5, DI, L),
	//#gpio_014
	LOW_POWER(0x14, FUNC1, 0x54, PULLDOWN, 1, 6, DI, L),
	//#gpio_015
	LOW_POWER(0x18, FUNC1, 0x58, PULLDOWN, 1, 7, DI, L),
	//#gpio_016
	LOW_POWER(0x1C, FUNC1, 0x5C, PULLDOWN, 2, 0, DI, L),
	//#gpio_017
	LOW_POWER(0x20, FUNC1, 0x60, PULLDOWN, 2, 1, DI, L),
	//#gpio_018
	LOW_POWER(0x20, FUNC1, 0x64, PULLDOWN, 2, 2, DI, L),
	//#gpio_019
	LOW_POWER(0x20, FUNC1, 0x68, PULLDOWN, 2, 3, DI, L),
	//#gpio_020
	LOW_POWER(0x0C, FUNC1, 0x6C, PULLDOWN, 2, 4, DI, L),
	//#gpio_021
	LOW_POWER(0x0C, FUNC1, 0x70, PULLDOWN, 2, 5, DI, L),
	//#gpio_022
	LOW_POWER(0x0C, FUNC1, 0x74, PULLDOWN, 2, 6, DI, L),
	//#gpio_023
	LOW_POWER(0x0C, FUNC1, 0x78, PULLDOWN, 2, 7, DI, L),
	//#gpio_024
	LOW_POWER(0x0C, FUNC1, 0x7C, PULLDOWN, 3, 0, DI, L),
	//#gpio_025
	LOW_POWER(0x0C, FUNC1, 0x80, PULLDOWN, 3, 1, DI, L),
	//#gpio_026
	LOW_POWER(0x0C, FUNC1, 0x84, PULLDOWN, 3, 2, DI, L),
	//#gpio_027
	LOW_POWER(0x0C, FUNC1, 0x88, PULLDOWN, 3, 3, DI, L),
	//#gpio_028
	LOW_POWER(0x2C, FUNC1, 0x8C, PULLDOWN, 3, 4, DI, L),
	//#gpio_029
	LOW_POWER(0x2C, FUNC1, 0x90, PULLDOWN, 3, 5, DI, L),
	//#gpio_030
	LOW_POWER(0x2C, FUNC1, 0x94, PULLDOWN, 3, 6, DI, L),
	//#gpio_031
	LOW_POWER(0x2C, FUNC1, 0x98, PULLDOWN, 3, 7, DI, L),
	//#gpio_032
	LOW_POWER(0x2C, FUNC1, 0x9C, PULLDOWN, 4, 0, DI, L),
	//#gpio_033
	LOW_POWER(0x2C, FUNC1, 0xA0, PULLDOWN, 4, 1, DI, L),
	//#gpio_034
	LOW_POWER(0x2C, FUNC1, 0xA4, PULLDOWN, 4, 2, DI, L),
	//#gpio_035
	LOW_POWER(0x2C, FUNC1, 0xA8, PULLDOWN, 4, 3, DI, L),
	//#gpio_036
	LOW_POWER(0x30, FUNC0, 0xAC, PULLDOWN, 4, 4, DI, L),
	//#gpio_037
	LOW_POWER(0x30, FUNC0, 0xB0, PULLDOWN, 4, 5, DI, L),
	//#gpio_038
	LOW_POWER(0x34, FUNC1, 0xB4, NOPULL, 4, 6, DI, L),
	//#gpio_039
	LOW_POWER(0x34, FUNC1, 0xB8, NOPULL, 4, 7, DI, L),
	//#gpio_040
	LOW_POWER(0x38, FUNC1, 0xBC, NOPULL, 5, 0, DI, L),
	//#gpio_041
	LOW_POWER(0x3C, FUNC1, 0xC0, PULLDOWN, 5, 1, DI, L),
	//#gpio_042
	LOW_POWER(0x40, FUNC1, 0xC4, PULLDOWN, 5, 2, DI, L),
	//#gpio_043
	LOW_POWER(0x40, FUNC1, 0xC8, PULLDOWN, 5, 3, DI, L),
	//#gpio_044
	LOW_POWER(0x40, FUNC1, 0xCC, PULLDOWN, 5, 4, DI, L),
	//#gpio_045
	LOW_POWER(0x40, FUNC1, 0xD0, PULLDOWN, 5, 5, DI, L),
	//#gpio_046
	LOW_POWER(0x40, FUNC1, 0xD4, PULLDOWN, 5, 6, DI, L),
	//#gpio_047
	LOW_POWER(0x40, FUNC1, 0xD8, PULLDOWN, 5, 7, DI, L),
	//#gpio_048
	LOW_POWER(0x40, FUNC1, 0xDC, PULLDOWN, 6, 0, DI, L),
	//#gpio_049
	LOW_POWER(0x40, FUNC1, 0xE0, PULLDOWN, 6, 1, DI, L),
	//#gpio_050
	LOW_POWER(0x44, FUNC1, 0xE4, PULLDOWN, 6, 2, DI, L),
	//#gpio_051
	LOW_POWER(0x44, FUNC1, 0xE8, PULLDOWN, 6, 3, DI, L),
	//#gpio_052
	LOW_POWER(0x48, FUNC1, 0xEC, PULLDOWN, 6, 4, DI, L),
	//#gpio_053
	LOW_POWER(0x48, FUNC1, 0xF0, PULLDOWN, 6, 5, DI, L),
	//#gpio_054
	LOW_POWER(0x48, FUNC1, 0xF4, PULLDOWN, 6, 6, DI, L),
	//#gpio_055
	LOW_POWER(0x4C, FUNC1, 0xF8, PULLDOWN, 6, 7, DI, L),
	//#gpio_056
	LOW_POWER(0x4C, FUNC1, 0xFC, PULLDOWN, 7, 0, DI, L),
	//#gpio_057
	LOW_POWER(0x50, FUNC1, 0x100, NOPULL, 7, 1, DI, L),
	//#gpio_058
	LOW_POWER(0x54, FUNC1, 0x104, NOPULL, 7, 2, DI, L),
	//#gpio_059
	LOW_POWER(0x58, FUNC1, 0x108, NOPULL, 7, 3, DO, L),
	//#gpio_060
	LOW_POWER(0x5C, FUNC1, 0x10C, NOPULL, 7, 4, DO, L),
	//#gpio_061
	LOW_POWER(0x60, FUNC1, 0x110, NOPULL, 7, 5, DO, H),
	//#gpio_062
	LOW_POWER(0x64, FUNC1, 0x114, NOPULL, 7, 6, DI, L),
	//#gpio_063
	LOW_POWER(0x68, FUNC1, 0x118, NOPULL, 7, 7, DI, L),
	//#gpio_064
	LOW_POWER(0x6C, FUNC1, 0x11C, NOPULL, 8, 0, DI, L),
	//#gpio_065
	LOW_POWER(0x70, FUNC1, 0x120, NOPULL, 8, 1, DO, L),
	//#gpio_066
	LOW_POWER(0x74, FUNC1, 0x124, NOPULL, 8, 2, DO, L),
	//#gpio_067
	LOW_POWER(0x78, FUNC1, 0x128, NOPULL, 8, 3, DO, L),
	//#gpio_068
	LOW_POWER(0x7C, FUNC1, 0x12C, NOPULL, 8, 4, DO, L),
	//#gpio_069
	LOW_POWER(0x80, FUNC1, 0x130, NOPULL, 8, 5, DO, L),
	//#gpio_070
	LOW_POWER(0x84, FUNC1, 0x134, NOPULL, 8, 6, DO, L),
	//#gpio_071
	LOW_POWER(0x88, FUNC1, 0x138, NOPULL, 8, 7, DO, L),
	//#gpio_072
	LOW_POWER(0x8C, FUNC1, 0x13C, NOPULL, 9, 0, DO, L),
	//#gpio_073
	LOW_POWER(0x90, FUNC1, 0x140, NOPULL, 9, 1, DO, L),
	//#gpio_074
	LOW_POWER(0x94, FUNC1, 0x144, NOPULL, 9, 2, DO, H),
	//#gpio_075
	LOW_POWER(0x98, FUNC0, 0x148, NOPULL, 9, 3, DO, L),
	//#gpio_076
	LOW_POWER(0x9C, FUNC1, 0x14C, NOPULL, 9, 4, DO, L),
	//#gpio_077
	LOW_POWER(0xA0, FUNC1, 0x150, PULLDOWN, 9, 5, DI, L),
	//#gpio_078
	LOW_POWER(0xA4, FUNC1, 0x154, NOPULL, 9, 6, DO, L),
	//#gpio_079
	LOW_POWER(0xAC, FUNC1, 0x168, NOPULL, 9, 7, DO, L),
	//#gpio_080
	LOW_POWER(0xAC, FUNC1, 0x16C, PULLUP, 10, 0, DI, L),
	//#gpio_081
	LOW_POWER(0xAC, FUNC1, 0x170, PULLDOWN, 10, 1, DO, H),
	//#gpio_082
	LOW_POWER(0xAC, FUNC0, 0x174, NOPULL, 10, 2, DO, L),
	//#gpio_083
	LOW_POWER(0xB0, FUNC1, 0x178, NOPULL, 10, 3, DI, L),
	//#gpio_084
	LOW_POWER(0xB4, FUNC1, 0x17C, NOPULL, 10, 4, DI, L),
	//#gpio_085
	LOW_POWER(0xB8, FUNC1, 0x180, NOPULL, 10, 5, DI, L),
	//#gpio_086
	LOW_POWER(0xB8, FUNC1, 0x184, NOPULL, 10, 6, DI, L),
	//#gpio_087
	LOW_POWER(0xB8, FUNC1, 0x188, NOPULL, 10, 7, DI, L),
	//#gpio_088
	LOW_POWER(0xBC, FUNC1, 0x18C, PULLDOWN, 11, 0, DI, L),
	//#gpio_089
	LOW_POWER(0xBC, FUNC1, 0x190, PULLDOWN, 11, 1, DI, L),
	//#gpio_090
	LOW_POWER(0xBC, FUNC1, 0x194, PULLDOWN, 11, 2, DI, L),
	//#gpio_091
	LOW_POWER(0xBC, FUNC1, 0x198, PULLDOWN, 11, 3, DI, L),
	//#gpio_092
	LOW_POWER(0xBC, FUNC1, 0x19C, PULLDOWN, 11, 4, DI, L),
	//#gpio_093
	LOW_POWER(0xC0, FUNC1, 0x1A0, PULLDOWN, 11, 5, DI, L),
	//#gpio_094
	LOW_POWER(0xC4, FUNC1, 0x1A4, NOPULL, 11, 6, DI, L),
	//#gpio_095
	LOW_POWER(0xC4, FUNC1, 0x1A8, NOPULL, 11, 7, DO, H),
	//#gpio_096
	LOW_POWER(0xC4, FUNC1, 0x1AC, NOPULL, 12, 0, DO, L),
	//#gpio_097
	LOW_POWER(0xC8, FUNC1, 0x1B0, NOPULL, 12, 1, DO, L),
	//#gpio_098
	LOW_POWER(0xC4, FUNC1, 0x1B4, PULLDOWN, 12, 2, DI, L),
	//#gpio_099
	LOW_POWER(0xC4, FUNC1, 0x1B8, PULLDOWN, 12, 3, DI, L),
	//#gpio_100
	LOW_POWER(0xCC, FUNC1, 0x1BC, PULLDOWN, 12, 4, DI, L),
	//#gpio_101
	LOW_POWER(0xCC, FUNC1, 0x1C0, PULLDOWN, 12, 5, DI, L),
	//#gpio_102
	LOW_POWER(0xCC, FUNC1, 0x1C4, PULLDOWN, 12, 6, DI, L),
	//#gpio_103
	LOW_POWER(0xD0, FUNC1, 0x1C8, PULLDOWN, 12, 7, DI, L),
	//#gpio_104
	LOW_POWER(0xCC, FUNC1, 0x1CC, PULLDOWN, 13, 0, DI, L),
	//#gpio_105
	LOW_POWER(0xCC, FUNC1, 0x1D0, PULLDOWN, 13, 1, DI, L),
	//#gpio_106
	LOW_POWER(0xD4, FUNC1, 0x1D4, PULLDOWN, 13, 2, DI, L),
	//#gpio_107
	LOW_POWER(0xD4, FUNC1, 0x1D8, PULLDOWN, 13, 3, DI, L),
	//#gpio_108
	LOW_POWER(0xD4, FUNC1, 0x1DC, PULLDOWN, 13, 4, DI, L),
	//#gpio_109
	LOW_POWER(0xD8, FUNC1, 0x1E0, PULLDOWN, 13, 5, DI, L),
	//#gpio_110
	LOW_POWER(0xDC, FUNC1, 0x1E4, PULLDOWN, 13, 6, DI, L),
	//#gpio_111
	LOW_POWER(0xE0, FUNC1, 0x1E8, NOPULL, 13, 7, DI, L),
	//#gpio_112
	LOW_POWER(0xE4, FUNC1, 0x1EC, NOPULL, 14, 0, DI, L),
	//#gpio_113
	LOW_POWER(0xE8, FUNC1, 0x1F0, PULLDOWN, 14, 1, DI, L),
	//#gpio_114
	LOW_POWER(0xE8, FUNC1, 0x1F4, NOPULL, 14, 2, DO, L),
	//#gpio_115
	LOW_POWER(0xE8, FUNC1, 0x1F8, NOPULL, 14, 3, DO, L),
	//#gpio_116
	LOW_POWER(0xEC, FUNC1, 0x1FC, PULLDOWN, 14, 4, DI, L),
	//#gpio_117
	LOW_POWER(0xF0, FUNC1, 0x200, NOPULL, 14, 5, DO, L),
	//#gpio_118
	LOW_POWER(0xF0, FUNC1, 0x204, NOPULL, 14, 6, DO, L),
	//#gpio_119
	LOW_POWER(0xF4, FUNC1, 0x208, PULLDOWN, 14, 7, DI, L),
	//#gpio_120
	LOW_POWER(0xF4, FUNC1, 0x20C, PULLDOWN, 15, 0, DI, L),
	//#gpio_121
	LOW_POWER(0xF8, FUNC1, 0x210, PULLDOWN, 15, 1, DI, L),
	//#gpio_122
	LOW_POWER(0xF8, FUNC1, 0x214, PULLDOWN, 15, 2, DI, L),
	//#gpio_123
	LOW_POWER(0xFC, FUNC1, 0x218, PULLDOWN, 15, 3, DI, L),
	//#gpio_124
	LOW_POWER(0xFC, FUNC1, 0x21C, PULLDOWN, 15, 4, DI, L),
	//#gpio_125
	LOW_POWER(0x100, FUNC1, 0x220, PULLDOWN, 15, 5, DI, L),
	//#gpio_126
	LOW_POWER(0x100, FUNC1, 0x224, RESERVE, 15, 6, DI, L),
	//#gpio_127
	LOW_POWER(0x104, FUNC1, 0x228, PULLDOWN, 15, 7, DO, L),
	//#gpio_128
	LOW_POWER(0x108, FUNC1, 0x22C, NOPULL, 16, 0, DI, H),
	//#gpio_129
	LOW_POWER(0x10C, FUNC1, 0x230, PULLDOWN, 16, 1, DI, L),
	//#gpio_130
	LOW_POWER(0x110, FUNC1, 0x234, PULLDOWN, 16, 2, DI, L),
	//#gpio_131
	LOW_POWER(0x114, FUNC1, 0x238, PULLDOWN, 16, 3, DI, L),
	//#gpio_132
	LOW_POWER(0x118, FUNC1, 0x23C, PULLDOWN, 16, 4, DI, L),
	//#gpio_133
	LOW_POWER(0x11C, FUNC1, 0x240, NOPULL, 16, 5, DO, L),
	//#gpio_134
	LOW_POWER(0x120, FUNC1, 0x244, NOPULL, 16, 6, DO, L),
	//#gpio_135
	LOW_POWER(0x124, FUNC1, 0x248, NOPULL, 16, 7, DI, L),
	//#gpio_136
	LOW_POWER(0x128, FUNC1, 0x24C, NOPULL, 17, 0, DI, L),
	//#gpio_137
	LOW_POWER(0x12C, FUNC1, 0x250, PULLDOWN, 17, 1, DI, L),
	//#gpio_138
	LOW_POWER(0x130, FUNC1, 0x254, PULLDOWN, 17, 2, DI, L),
	//#gpio_139
	LOW_POWER(0x134, FUNC1, 0x258, PULLDOWN, 17, 3, DI, L),
	//#gpio_140
	LOW_POWER(0x138, FUNC1, 0x25C, PULLDOWN, 17, 4, DI, L),
	//#gpio_141
	LOW_POWER(0x13C, FUNC1, 0x260, PULLDOWN, 17, 5, DI, L),
	//#gpio_142
	LOW_POWER(0x140, FUNC1, 0x264, PULLDOWN, 17, 6, DI, L),
	//#gpio_143
	LOW_POWER(0x144, FUNC1, 0x268, PULLUP, 17, 7, DI, L),
	//#gpio_144
	LOW_POWER(0x148, FUNC1, 0x26C, NOPULL, 18, 0, DO, H),
	//#gpio_145
	LOW_POWER(0x14C, FUNC1, 0x270, NOPULL, 18, 1, DO, H),
	//#gpio_146
	LOW_POWER(0x14C, FUNC1, 0x274, NOPULL, 18, 2, DI, L),
	//#gpio_147
	LOW_POWER(0x150, FUNC1, 0x278, PULLDOWN, 18, 3, DI, L),
	//#gpio_148
	LOW_POWER(0x150, FUNC1, 0x27C, PULLDOWN, 18, 4, DI, L),
	//#gpio_149
	LOW_POWER(0x154, FUNC1, 0x280, NOPULL, 18, 5, DO, L),
	//#gpio_150
	LOW_POWER(0x158, FUNC1, 0x284, PULLDOWN, 18, 6, DI, L),
	//#gpio_151
	LOW_POWER(0x15C, FUNC1, 0x288, NOPULL, 18, 7, DO, L),
	//#gpio_152
	LOW_POWER(0x15C, FUNC1, 0x28C, NOPULL, 19, 0, DO, L),
	//#gpio_153
	LOW_POWER(0x15C, FUNC1, 0x290, NOPULL, 19, 1, DO, H),
	//#gpio_154
	LOW_POWER(0x160, FUNC1, 0x294, PULLDOWN, 19, 2, DI, L),
	//#gpio_155
	LOW_POWER(0x160, FUNC1, 0x298, PULLDOWN, 19, 3, DI, L),
	//#gpio_156
	LOW_POWER(0x160, RESERVE, 0x0C, NOPULL, 19, 4, DO, H),
	//#gpio_157
	LOW_POWER(0x160, RESERVE, 0x10, PULLUP, 19, 5, DI, L),
	//#gpio_158
	LOW_POWER(0x160, RESERVE, 0x14, NOPULL, 19, 6, DO, H),
	//#gpio_159
	LOW_POWER(0x160, RESERVE, 0x18, PULLUP, 19, 7, DI, L),
	//#gpio_160
	LOW_POWER(0x164, FUNC1, 0x29C, PULLDOWN, 20, 0, DI, L),
	//#gpio_161
	LOW_POWER(0x164, FUNC1, 0x2A0, PULLDOWN, 20, 1, DI, L),
	//#gpio_162
	LOW_POWER(0x168, FUNC1, 0x2A4, NOPULL, 20, 2, DI, L),
	//#gpio_163
	LOW_POWER(0x168, FUNC1, 0x2A8, NOPULL, 20, 3, DI, L),
	//#gpio_164
	LOW_POWER(0x16C, FUNC1, 0x2AC, NOPULL, 20, 4, DI, L),
	//#gpio_165
	LOW_POWER(0x170, FUNC1, 0x2B0, NOPULL, 20, 5, DI, L),
	//#gpio_166
	LOW_POWER(0x174, FUNC1, 0x2B4, PULLDOWN, 20, 6, DI, L),
	//#gpio_167
	LOW_POWER(0x174, FUNC1, 0x2B8, NOPULL, 20, 7, DO, L),
	//#gpio_168
	LOW_POWER(0x174, FUNC1, 0x2BC, NOPULL, 21, 0, DO, L),
	//#gpio_169
	LOW_POWER(0x174, FUNC1, 0x2C0, NOPULL, 21, 1, DO, L),
	//#gpio_170
	LOW_POWER(0x174, FUNC1, 0x2C4, PULLDOWN, 21, 2, DI, L),
	//#gpio_171
	LOW_POWER(0x178, FUNC1, 0x2C8, NOPULL, 21, 3, DO, L),
	//#gpio_172
	LOW_POWER(0x17C, FUNC1, 0x2CC, NOPULL, 21, 4, DO, L),
	//#gpio_173
	LOW_POWER(0x17C, FUNC1, 0x2D0, NOPULL, 21, 5, DO, L),
	//#gpio_174
	LOW_POWER(0x17C, FUNC1, 0x2D4, NOPULL, 21, 6, DO, L),
	//#gpio_175
	LOW_POWER(0x180, FUNC1, 0x2D8, PULLDOWN, 21, 7, DI, L),
};

static struct iocfg_lp iocfg_lookups_cs[] = {
	//#gpio_002_cs
	LOW_POWER(0x00, FUNC0, 0x24, NOPULL, 0, 2, DO, L),
	//#gpio_003_cs
	LOW_POWER(0x00, FUNC0, 0x28, NOPULL, 0, 3, DO, L),
	//#gpio_004_cs
	LOW_POWER(0x00, FUNC0, 0x2C, PULLDOWN, 0, 4, DI, L),
	//#gpio_005_cs
	LOW_POWER(0x00, FUNC0, 0x30, PULLUP, 0, 5, DI, L),
	//#gpio_006_cs
	LOW_POWER(0x04, FUNC0, 0x34, NOPULL, 0, 6, DO, L),
	//#gpio_007_cs
	LOW_POWER(0x08, FUNC0, 0x38, PULLDOWN, 0, 7, DI, L),
	//#gpio_008_cs
	LOW_POWER(0x0C, FUNC1, 0x3C, PULLDOWN, 1, 0, DI, L),
	//#gpio_009_cs
	LOW_POWER(0x0C, FUNC1, 0x40, PULLDOWN, 1, 1, DI, L),
	//#gpio_010_cs
	LOW_POWER(0x0C, FUNC1, 0x44, PULLDOWN, 1, 2, DI, L),
	//#gpio_011_cs
	LOW_POWER(0x0C, FUNC1, 0x48, PULLDOWN, 1, 3, DI, L),
	//#gpio_012_cs
	LOW_POWER(0x0C, FUNC1, 0x4C, PULLDOWN, 1, 4, DI, L),
	//#gpio_013_cs
	LOW_POWER(0x10, FUNC1, 0x50, PULLDOWN, 1, 5, DI, L),
	//#gpio_014_cs
	LOW_POWER(0x14, FUNC1, 0x54, PULLDOWN, 1, 6, DI, L),
	//#gpio_015_cs
	LOW_POWER(0x18, FUNC1, 0x58, PULLDOWN, 1, 7, DI, L),
	//#gpio_016_cs
	LOW_POWER(0x1C, FUNC1, 0x5C, PULLDOWN, 2, 0, DI, L),
	//#gpio_017_cs
	LOW_POWER(0x20, FUNC1, 0x60, PULLDOWN, 2, 1, DI, L),
	//#gpio_018_cs
	LOW_POWER(0x20, FUNC1, 0x64, PULLDOWN, 2, 2, DI, L),
	//#gpio_019_cs
	LOW_POWER(0x20, FUNC1, 0x68, PULLDOWN, 2, 3, DI, L),
	//#gpio_020_cs
	LOW_POWER(0x0C, FUNC1, 0x6C, PULLDOWN, 2, 4, DI, L),
	//#gpio_021_cs
	LOW_POWER(0x0C, FUNC1, 0x70, PULLDOWN, 2, 5, DI, L),
	//#gpio_022_cs
	LOW_POWER(0x0C, FUNC1, 0x74, PULLDOWN, 2, 6, DI, L),
	//#gpio_023_cs
	LOW_POWER(0x0C, FUNC1, 0x78, PULLDOWN, 2, 7, DI, L),
	//#gpio_024_cs
	LOW_POWER(0x0C, FUNC1, 0x7C, PULLDOWN, 3, 0, DI, L),
	//#gpio_025_cs
	LOW_POWER(0x0C, FUNC1, 0x80, PULLDOWN, 3, 1, DI, L),
	//#gpio_026_cs
	LOW_POWER(0x0C, FUNC1, 0x84, PULLDOWN, 3, 2, DI, L),
	//#gpio_027_cs
	LOW_POWER(0x0C, FUNC1, 0x88, PULLDOWN, 3, 3, DI, L),
	//#gpio_028_cs
	LOW_POWER(0x2C, FUNC1, 0x8C, PULLDOWN, 3, 4, DI, L),
	//#gpio_029_cs
	LOW_POWER(0x2C, FUNC1, 0x90, PULLDOWN, 3, 5, DI, L),
	//#gpio_030_cs
	LOW_POWER(0x2C, FUNC1, 0x94, PULLDOWN, 3, 6, DI, L),
	//#gpio_031_cs
	LOW_POWER(0x2C, FUNC1, 0x98, PULLDOWN, 3, 7, DI, L),
	//#gpio_032_cs
	LOW_POWER(0x2C, FUNC1, 0x9C, PULLDOWN, 4, 0, DI, L),
	//#gpio_033_cs
	LOW_POWER(0x2C, FUNC1, 0xA0, PULLDOWN, 4, 1, DI, L),
	//#gpio_034_cs
	LOW_POWER(0x2C, FUNC1, 0xA4, PULLDOWN, 4, 2, DI, L),
	//#gpio_035_cs
	LOW_POWER(0x2C, FUNC1, 0xA8, PULLDOWN, 4, 3, DI, L),
	//#gpio_036_cs
	LOW_POWER(0x30, FUNC0, 0xAC, PULLDOWN, 4, 4, DI, L),
	//#gpio_037_cs
	LOW_POWER(0x30, FUNC0, 0xB0, PULLDOWN, 4, 5, DI, L),
	//#gpio_038_cs
	LOW_POWER(0x34, FUNC1, 0xB4, NOPULL, 4, 6, DI, L),
	//#gpio_039_cs
	LOW_POWER(0x34, FUNC1, 0xB8, NOPULL, 4, 7, DI, L),
	//#gpio_040_cs
	LOW_POWER(0x38, FUNC1, 0xBC, NOPULL, 5, 0, DI, L),
	//#gpio_041_cs
	LOW_POWER(0x3C, FUNC1, 0xC0, PULLDOWN, 5, 1, DI, L),
	//#gpio_042_cs
	LOW_POWER(0x40, FUNC1, 0xC4, PULLDOWN, 5, 2, DI, L),
	//#gpio_043_cs
	LOW_POWER(0x40, FUNC1, 0xC8, PULLDOWN, 5, 3, DI, L),
	//#gpio_044_cs
	LOW_POWER(0x40, FUNC1, 0xCC, PULLDOWN, 5, 4, DI, L),
	//#gpio_045_cs
	LOW_POWER(0x40, FUNC1, 0xD0, PULLDOWN, 5, 5, DI, L),
	//#gpio_046_cs
	LOW_POWER(0x40, FUNC1, 0xD4, PULLDOWN, 5, 6, DI, L),
	//#gpio_047_cs
	LOW_POWER(0x40, FUNC1, 0xD8, PULLDOWN, 5, 7, DI, L),
	//#gpio_048_cs
	LOW_POWER(0x40, FUNC1, 0xDC, PULLDOWN, 6, 0, DI, L),
	//#gpio_049_cs
	LOW_POWER(0x40, FUNC1, 0xE0, PULLDOWN, 6, 1, DI, L),
	//#gpio_050_cs
	LOW_POWER(0x44, FUNC1, 0xE4, PULLDOWN, 6, 2, DI, L),
	//#gpio_051_cs
	LOW_POWER(0x44, FUNC1, 0xE8, PULLDOWN, 6, 3, DI, L),
	//#gpio_052_cs
	LOW_POWER(0x48, FUNC1, 0xEC, PULLDOWN, 6, 4, DI, L),
	//#gpio_053_cs
	LOW_POWER(0x48, FUNC1, 0xF0, PULLDOWN, 6, 5, DI, L),
	//#gpio_054_cs
	LOW_POWER(0x48, FUNC1, 0xF4, PULLDOWN, 6, 6, DI, L),
	//#gpio_055_cs
	LOW_POWER(0x4C, FUNC1, 0xF8, PULLDOWN, 6, 7, DI, L),
	//#gpio_056_cs
	LOW_POWER(0x4C, FUNC1, 0xFC, PULLDOWN, 7, 0, DI, L),
	//#gpio_057_cs
	LOW_POWER(0x50, FUNC1, 0x100, NOPULL, 7, 1, DI, L),
	//#gpio_058_cs
	LOW_POWER(0x54, FUNC1, 0x104, NOPULL, 7, 2, DI, L),
	//#gpio_059_cs
	LOW_POWER(0x58, FUNC1, 0x108, NOPULL, 7, 3, DO, L),
	//#gpio_060_cs
	LOW_POWER(0x5C, FUNC1, 0x10C, NOPULL, 7, 4, DO, L),
	//#gpio_061_cs
	LOW_POWER(0x60, FUNC1, 0x110, NOPULL, 7, 5, DO, H),
	//#gpio_062_cs
	LOW_POWER(0x64, FUNC1, 0x114, NOPULL, 7, 6, DI, L),
	//#gpio_063_cs
	LOW_POWER(0x68, FUNC1, 0x118, NOPULL, 7, 7, DI, L),
	//#gpio_064_cs
	LOW_POWER(0x6C, FUNC1, 0x11C, NOPULL, 8, 0, DI, L),
	//#gpio_065_cs
	LOW_POWER(0x70, FUNC1, 0x120, NOPULL, 8, 1, DO, L),
	//#gpio_066_cs
	LOW_POWER(0x74, FUNC1, 0x124, NOPULL, 8, 2, DO, L),
	//#gpio_067_cs
	LOW_POWER(0x78, FUNC1, 0x128, NOPULL, 8, 3, DO, L),
	//#gpio_068_cs
	LOW_POWER(0x7C, FUNC1, 0x12C, NOPULL, 8, 4, DO, L),
	//#gpio_069_cs
	LOW_POWER(0x80, FUNC1, 0x130, NOPULL, 8, 5, DO, L),
	//#gpio_070_cs
	LOW_POWER(0x84, FUNC1, 0x134, NOPULL, 8, 6, DO, L),
	//#gpio_071_cs
	LOW_POWER(0x88, FUNC1, 0x138, NOPULL, 8, 7, DO, L),
	//#gpio_072_cs
	LOW_POWER(0x8C, FUNC1, 0x13C, NOPULL, 9, 0, DO, L),
	//#gpio_073_cs
	LOW_POWER(0x90, FUNC1, 0x140, NOPULL, 9, 1, DO, L),
	//#gpio_074_cs
	LOW_POWER(0x94, FUNC1, 0x144, NOPULL, 9, 2, DO, H),
	//#gpio_075_cs
	LOW_POWER(0x98, FUNC0, 0x148, NOPULL, 9, 3, DO, L),
	//#gpio_076_cs
	LOW_POWER(0x9C, FUNC1, 0x14C, NOPULL, 9, 4, DO, L),
	//#gpio_077_cs
	LOW_POWER(0xA0, FUNC1, 0x150, PULLDOWN, 9, 5, DI, L),
	//#gpio_078_cs
	LOW_POWER(0xA4, FUNC1, 0x154, NOPULL, 9, 6, DO, L),
	//#gpio_079_cs
	LOW_POWER(0xAC, FUNC1, 0x168, NOPULL, 9, 7, DO, L),
	//#gpio_080_cs
	LOW_POWER(0xAC, FUNC1, 0x16C, PULLUP, 10, 0, DI, L),
	//#gpio_081_cs
	LOW_POWER(0xAC, FUNC1, 0x170, PULLDOWN, 10, 1, DO, H),
	//#gpio_082_cs
	LOW_POWER(0xAC, FUNC0, 0x174, NOPULL, 10, 2, DO, L),
	//#gpio_083_cs
	LOW_POWER(0xB0, FUNC1, 0x178, NOPULL, 10, 3, DI, L),
	//#gpio_084_cs
	LOW_POWER(0xB4, FUNC1, 0x17C, NOPULL, 10, 4, DI, L),
	//#gpio_085_cs
	LOW_POWER(0xB8, FUNC1, 0x180, NOPULL, 10, 5, DI, L),
	//#gpio_086_cs
	LOW_POWER(0xB8, FUNC1, 0x184, NOPULL, 10, 6, DI, L),
	//#gpio_087_cs
	LOW_POWER(0xB8, FUNC1, 0x188, NOPULL, 10, 7, DI, L),
	//#gpio_088_cs
	LOW_POWER(0xBC, FUNC1, 0x18C, PULLDOWN, 11, 0, DI, L),
	//#gpio_089_cs
	LOW_POWER(0xBC, FUNC1, 0x190, PULLDOWN, 11, 1, DI, L),
	//#gpio_090_cs
	LOW_POWER(0xBC, FUNC1, 0x194, PULLDOWN, 11, 2, DI, L),
	//#gpio_091_cs
	LOW_POWER(0xBC, FUNC1, 0x198, PULLDOWN, 11, 3, DI, L),
	//#gpio_092_cs
	LOW_POWER(0xBC, FUNC1, 0x19C, PULLDOWN, 11, 4, DI, L),
	//#gpio_093_cs
	LOW_POWER(0xC0, FUNC1, 0x1A0, PULLDOWN, 11, 5, DI, L),
	//#gpio_094_cs
	LOW_POWER(0xC4, FUNC1, 0x1A4, NOPULL, 11, 6, DI, L),
	//#gpio_095_cs
	LOW_POWER(0xC4, FUNC1, 0x1A8, NOPULL, 11, 7, DO, H),
	//#gpio_096_cs
	LOW_POWER(0xC4, FUNC1, 0x1AC, NOPULL, 12, 0, DO, L),
	//#gpio_097_cs
	LOW_POWER(0xC8, FUNC1, 0x1B0, NOPULL, 12, 1, DO, L),
	//#gpio_098_cs
	LOW_POWER(0xC4, FUNC1, 0x1B4, PULLDOWN, 12, 2, DI, L),
	//#gpio_099_cs
	LOW_POWER(0xC4, FUNC1, 0x1B8, PULLDOWN, 12, 3, DI, L),
	//#gpio_100_cs
	LOW_POWER(0xCC, FUNC1, 0x1BC, PULLDOWN, 12, 4, DI, L),
	//#gpio_101_cs
	LOW_POWER(0xCC, FUNC1, 0x1C0, PULLDOWN, 12, 5, DI, L),
	//#gpio_102_cs
	LOW_POWER(0xCC, FUNC1, 0x1C4, PULLDOWN, 12, 6, DI, L),
	//#gpio_103_cs
	LOW_POWER(0xD0, FUNC1, 0x1C8, PULLDOWN, 12, 7, DI, L),
	//#gpio_104_cs
	LOW_POWER(0xCC, FUNC1, 0x1CC, PULLDOWN, 13, 0, DI, L),
	//#gpio_105_cs
	LOW_POWER(0xCC, FUNC1, 0x1D0, PULLDOWN, 13, 1, DI, L),
	//#gpio_106_cs
	LOW_POWER(0xD4, FUNC1, 0x1D4, PULLDOWN, 13, 2, DI, L),
	//#gpio_107_cs
	LOW_POWER(0xD4, FUNC1, 0x1D8, PULLDOWN, 13, 3, DI, L),
	//#gpio_108_cs
	LOW_POWER(0xD4, FUNC1, 0x1DC, PULLDOWN, 13, 4, DI, L),
	//#gpio_109_cs
	LOW_POWER(0xD8, FUNC1, 0x1E0, PULLDOWN, 13, 5, DI, L),
	//#gpio_110_cs
	LOW_POWER(0xDC, FUNC1, 0x1E4, PULLDOWN, 13, 6, DI, L),
	//#gpio_111_cs
	LOW_POWER(0xE0, FUNC1, 0x1E8, NOPULL, 13, 7, DI, L),
	//#gpio_112_cs
	LOW_POWER(0xE4, FUNC1, 0x1EC, NOPULL, 14, 0, DI, L),
	//#gpio_113_cs
	LOW_POWER(0xE8, FUNC1, 0x1F0, PULLDOWN, 14, 1, DI, L),
	//#gpio_114_cs
	LOW_POWER(0xE8, FUNC1, 0x1F4, NOPULL, 14, 2, DO, L),
	//#gpio_115_cs
	LOW_POWER(0xE8, FUNC1, 0x1F8, NOPULL, 14, 3, DO, L),
	//#gpio_116_cs
	LOW_POWER(0xEC, FUNC1, 0x1FC, PULLDOWN, 14, 4, DI, L),
	//#gpio_117_cs
	LOW_POWER(0xF0, FUNC1, 0x200, NOPULL, 14, 5, DO, L),
	//#gpio_118_cs
	LOW_POWER(0xF0, FUNC1, 0x204, NOPULL, 14, 6, DO, L),
	//#gpio_119_cs
	LOW_POWER(0xF4, FUNC1, 0x208, PULLDOWN, 14, 7, DI, L),
	//#gpio_120_cs
	LOW_POWER(0xF4, FUNC1, 0x20C, PULLDOWN, 15, 0, DI, L),
	//#gpio_121_cs
	LOW_POWER(0xF8, FUNC1, 0x210, PULLDOWN, 15, 1, DI, L),
	//#gpio_122_cs
	LOW_POWER(0xF8, FUNC1, 0x214, PULLDOWN, 15, 2, DI, L),
	//#gpio_123_cs
	LOW_POWER(0xFC, FUNC1, 0x218, PULLDOWN, 15, 3, DI, L),
	//#gpio_124_cs
	LOW_POWER(0xFC, FUNC1, 0x21C, PULLDOWN, 15, 4, DI, L),
	//#gpio_125_cs
	LOW_POWER(0x100, FUNC1, 0x220, PULLDOWN, 15, 5, DI, L),
	//#gpio_126_cs
	LOW_POWER(0x100, FUNC1, 0x224, RESERVE, 15, 6, DI, L),
	//#gpio_127_cs
	LOW_POWER(0x104, FUNC1, 0x228, PULLDOWN, 15, 7, DO, L),
	//#gpio_128_cs
	LOW_POWER(0x108, FUNC1, 0x22C, NOPULL, 16, 0, DI, H),
	//#gpio_129_cs
	LOW_POWER(0x10C, FUNC1, 0x230, PULLDOWN, 16, 1, DI, L),
	//#gpio_130_cs
	LOW_POWER(0x110, FUNC1, 0x234, PULLDOWN, 16, 2, DI, L),
	//#gpio_131_cs
	LOW_POWER(0x114, FUNC1, 0x238, PULLDOWN, 16, 3, DI, L),
	//#gpio_132_cs
	LOW_POWER(0x118, FUNC1, 0x23C, PULLDOWN, 16, 4, DI, L),
	//#gpio_133_cs
	LOW_POWER(0x11C, FUNC1, 0x240, NOPULL, 16, 5, DO, L),
	//#gpio_134_cs
	LOW_POWER(0x120, FUNC1, 0x244, NOPULL, 16, 6, DO, L),
	//#gpio_135_cs
	LOW_POWER(0x124, FUNC1, 0x248, NOPULL, 16, 7, DI, L),
	//#gpio_136_cs
	LOW_POWER(0x128, FUNC1, 0x24C, NOPULL, 17, 0, DI, L),
	//#gpio_137_cs
	LOW_POWER(0x12C, FUNC1, 0x250, PULLDOWN, 17, 1, DI, L),
	//#gpio_138_cs
	LOW_POWER(0x130, FUNC1, 0x254, PULLDOWN, 17, 2, DI, L),
	//#gpio_139_cs
	LOW_POWER(0x134, FUNC1, 0x258, PULLDOWN, 17, 3, DI, L),
	//#gpio_140_cs
	LOW_POWER(0x138, FUNC1, 0x25C, PULLDOWN, 17, 4, DI, L),
	//#gpio_141_cs
	LOW_POWER(0x13C, FUNC1, 0x260, PULLDOWN, 17, 5, DI, L),
	//#gpio_142_cs
	LOW_POWER(0x140, FUNC1, 0x264, PULLDOWN, 17, 6, DI, L),
	//#gpio_143_cs
	LOW_POWER(0x144, FUNC1, 0x268, PULLUP, 17, 7, DI, L),
	//#gpio_144_cs
	LOW_POWER(0x148, FUNC1, 0x26C, NOPULL, 18, 0, DO, H),
	//#gpio_145_cs
	LOW_POWER(0x14C, FUNC1, 0x270, NOPULL, 18, 1, DO, H),
	//#gpio_146_cs
	LOW_POWER(0x14C, FUNC1, 0x274, NOPULL, 18, 2, DI, L),
	//#gpio_147_cs
	LOW_POWER(0x150, FUNC1, 0x278, PULLDOWN, 18, 3, DI, L),
	//#gpio_148_cs
	LOW_POWER(0x150, FUNC1, 0x27C, PULLDOWN, 18, 4, DI, L),
	//#gpio_149_cs
	LOW_POWER(0x154, FUNC1, 0x280, NOPULL, 18, 5, DO, L),
	//#gpio_150_cs
	LOW_POWER(0x158, FUNC1, 0x284, PULLDOWN, 18, 6, DI, L),
	//#gpio_151_cs
	LOW_POWER(0x15C, FUNC1, 0x288, NOPULL, 18, 7, DO, L),
	//#gpio_152_cs
	LOW_POWER(0x15C, FUNC1, 0x28C, NOPULL, 19, 0, DO, L),
	//#gpio_153_cs
	LOW_POWER(0x15C, FUNC1, 0x290, NOPULL, 19, 1, DO, H),
	//#gpio_154_cs
	LOW_POWER(0x160, FUNC1, 0x294, PULLDOWN, 19, 2, DI, L),
	//#gpio_155_cs
	LOW_POWER(0x160, FUNC1, 0x298, PULLDOWN, 19, 3, DI, L),
	//#gpio_156_cs
	LOW_POWER(0x160, RESERVE, 0x0C, NOPULL, 19, 4, DO, H),
	//#gpio_157_cs
	LOW_POWER(0x160, RESERVE, 0x10, PULLUP, 19, 5, DI, L),
	//#gpio_158_cs
	LOW_POWER(0x160, RESERVE, 0x14, NOPULL, 19, 6, DO, H),
	//#gpio_159_cs
	LOW_POWER(0x160, RESERVE, 0x18, PULLUP, 19, 7, DI, L),
	//#gpio_160_cs
	LOW_POWER(0x164, FUNC1, 0x29C, PULLDOWN, 20, 0, DI, L),
	//#gpio_161_cs
	LOW_POWER(0x164, FUNC1, 0x2A0, PULLDOWN, 20, 1, DI, L),
	//#gpio_162_cs
	LOW_POWER(0x168, FUNC1, 0x2A4, NOPULL, 20, 2, DI, L),
	//#gpio_163_cs
	LOW_POWER(0x168, FUNC1, 0x2A8, NOPULL, 20, 3, DI, L),
	//#gpio_164_cs
	LOW_POWER(0x16C, FUNC1, 0x2AC, NOPULL, 20, 4, DI, L),
	//#gpio_165_cs
	LOW_POWER(0x170, FUNC1, 0x2B0, NOPULL, 20, 5, DI, L),
	//#gpio_166_cs
	LOW_POWER(0x174, FUNC1, 0x2B4, PULLDOWN, 20, 6, DI, L),
	//#gpio_167_cs
	LOW_POWER(0x174, FUNC1, 0x2B8, NOPULL, 20, 7, DO, L),
	//#gpio_168_cs
	LOW_POWER(0x174, FUNC1, 0x2BC, NOPULL, 21, 0, DO, L),
	//#gpio_169_cs
	LOW_POWER(0x174, FUNC1, 0x2C0, NOPULL, 21, 1, DO, L),
	//#gpio_170_cs
	LOW_POWER(0x174, FUNC1, 0x2C4, PULLDOWN, 21, 2, DI, L),
	//#gpio_171_cs
	LOW_POWER(0x178, FUNC1, 0x2C8, NOPULL, 21, 3, DO, L),
	//#gpio_172_cs
	LOW_POWER(0x17C, FUNC1, 0x2CC, NOPULL, 21, 4, DO, L),
	//#gpio_173_cs
	LOW_POWER(0x17C, FUNC1, 0x2D0, NOPULL, 21, 5, DO, L),
	//#gpio_174_cs
	LOW_POWER(0x17C, FUNC1, 0x2D4, NOPULL, 21, 6, DO, L),
	//#gpio_175_cs
	LOW_POWER(0x180, FUNC1, 0x2D8, PULLDOWN, 21, 7, DI, L),
};

static struct iocfg_lp iocfg_lookups_u9510_es[] = {
	//#gpio_002
	LOW_POWER(0x00, FUNC0, 0x24, NOPULL, 0, 2, DO, L),
	//#gpio_003
	LOW_POWER(0x00, FUNC0, 0x28, NOPULL, 0, 3, DO, L),
	//#gpio_004
	LOW_POWER(0x00, FUNC0, 0x2C, PULLDOWN, 0, 4, DI, L),
	//#gpio_005
	LOW_POWER(0x00, FUNC0, 0x30, PULLUP, 0, 5, DI, L),
	//#gpio_006
	LOW_POWER(0x04, FUNC0, 0x34, NOPULL, 0, 6, DO, L),
	//#gpio_007
	LOW_POWER(0x08, FUNC0, 0x38, PULLDOWN, 0, 7, DI, L),
	//#gpio_008
	LOW_POWER(0x0C, FUNC1, 0x3C, PULLDOWN, 1, 0, DI, L),
	//#gpio_009
	LOW_POWER(0x0C, FUNC1, 0x40, PULLDOWN, 1, 1, DI, L),
	//#gpio_010
	LOW_POWER(0x0C, FUNC1, 0x44, PULLDOWN, 1, 2, DI, L),
	//#gpio_011
	LOW_POWER(0x0C, FUNC1, 0x48, PULLDOWN, 1, 3, DI, L),
	//#gpio_012
	LOW_POWER(0x0C, FUNC1, 0x4C, PULLDOWN, 1, 4, DI, L),
	//#gpio_013
	LOW_POWER(0x10, FUNC1, 0x50, PULLDOWN, 1, 5, DI, L),
	//#gpio_014
	LOW_POWER(0x14, FUNC1, 0x54, PULLDOWN, 1, 6, DI, L),
	//#gpio_015
	LOW_POWER(0x18, FUNC1, 0x58, PULLDOWN, 1, 7, DI, L),
	//#gpio_016
	LOW_POWER(0x1C, FUNC1, 0x5C, PULLDOWN, 2, 0, DI, L),
	//#gpio_017
	LOW_POWER(0x20, FUNC1, 0x60, PULLDOWN, 2, 1, DI, L),
	//#gpio_018
	LOW_POWER(0x20, FUNC1, 0x64, PULLDOWN, 2, 2, DI, L),
	//#gpio_019
	LOW_POWER(0x20, FUNC1, 0x68, PULLDOWN, 2, 3, DI, L),
	//#gpio_020
	LOW_POWER(0x0C, FUNC1, 0x6C, PULLDOWN, 2, 4, DI, L),
	//#gpio_021
	LOW_POWER(0x0C, FUNC1, 0x70, PULLDOWN, 2, 5, DI, L),
	//#gpio_022
	LOW_POWER(0x0C, FUNC1, 0x74, PULLDOWN, 2, 6, DI, L),
	//#gpio_023
	LOW_POWER(0x0C, FUNC1, 0x78, PULLDOWN, 2, 7, DI, L),
	//#gpio_024
	LOW_POWER(0x0C, FUNC1, 0x7C, PULLDOWN, 3, 0, DI, L),
	//#gpio_025
	LOW_POWER(0x0C, FUNC1, 0x80, PULLDOWN, 3, 1, DI, L),
	//#gpio_026
	LOW_POWER(0x0C, FUNC1, 0x84, PULLDOWN, 3, 2, DI, L),
	//#gpio_027
	LOW_POWER(0x0C, FUNC1, 0x88, PULLDOWN, 3, 3, DI, L),
	//#gpio_028
	LOW_POWER(0x2C, FUNC1, 0x8C, PULLDOWN, 3, 4, DI, L),
	//#gpio_029
	LOW_POWER(0x2C, FUNC1, 0x90, PULLDOWN, 3, 5, DI, L),
	//#gpio_030
	LOW_POWER(0x2C, FUNC1, 0x94, PULLDOWN, 3, 6, DI, L),
	//#gpio_031
	LOW_POWER(0x2C, FUNC1, 0x98, PULLDOWN, 3, 7, DI, L),
	//#gpio_032
	LOW_POWER(0x2C, FUNC1, 0x9C, PULLDOWN, 4, 0, DI, L),
	//#gpio_033
	LOW_POWER(0x2C, FUNC1, 0xA0, PULLDOWN, 4, 1, DI, L),
	//#gpio_034
	LOW_POWER(0x2C, FUNC1, 0xA4, PULLDOWN, 4, 2, DI, L),
	//#gpio_035
	LOW_POWER(0x2C, FUNC1, 0xA8, PULLDOWN, 4, 3, DI, L),
	//#gpio_036
	LOW_POWER(0x30, FUNC0, 0xAC, PULLDOWN, 4, 4, DI, L),
	//#gpio_037
	LOW_POWER(0x30, FUNC0, 0xB0, PULLDOWN, 4, 5, DI, L),
	//#gpio_038
	LOW_POWER(0x34, FUNC1, 0xB4, NOPULL, 4, 6, DI, L),
	//#gpio_039
	LOW_POWER(0x34, FUNC1, 0xB8, NOPULL, 4, 7, DI, L),
	//#gpio_040
	LOW_POWER(0x38, FUNC1, 0xBC, PULLDOWN, 5, 0, DI, L),
	//#gpio_041
	LOW_POWER(0x3C, FUNC1, 0xC0, PULLUP, 5, 1, DI, L),
	//#gpio_042
	LOW_POWER(0x40, FUNC1, 0xC4, PULLDOWN, 5, 2, DI, L),
	//#gpio_043
	LOW_POWER(0x40, FUNC1, 0xC8, PULLDOWN, 5, 3, DI, L),
	//#gpio_044
	LOW_POWER(0x40, FUNC1, 0xCC, PULLDOWN, 5, 4, DI, L),
	//#gpio_045
	LOW_POWER(0x40, FUNC1, 0xD0, PULLDOWN, 5, 5, DI, L),
	//#gpio_046
	LOW_POWER(0x40, FUNC1, 0xD4, PULLDOWN, 5, 6, DI, L),
	//#gpio_047
	LOW_POWER(0x40, FUNC1, 0xD8, PULLDOWN, 5, 7, DI, L),
	//#gpio_048
	LOW_POWER(0x40, FUNC1, 0xDC, PULLDOWN, 6, 0, DI, L),
	//#gpio_049
	LOW_POWER(0x40, FUNC1, 0xE0, PULLDOWN, 6, 1, DI, L),
	//#gpio_050
	LOW_POWER(0x44, FUNC1, 0xE4, PULLDOWN, 6, 2, DI, L),
	//#gpio_051
	LOW_POWER(0x44, FUNC1, 0xE8, PULLDOWN, 6, 3, DI, L),
	//#gpio_052
	LOW_POWER(0x48, FUNC1, 0xEC, PULLDOWN, 6, 4, DI, L),
	//#gpio_053
	LOW_POWER(0x48, FUNC1, 0xF0, PULLDOWN, 6, 5, DI, L),
	//#gpio_054
	LOW_POWER(0x48, FUNC1, 0xF4, PULLDOWN, 6, 6, DI, L),
	//#gpio_055
	LOW_POWER(0x4C, FUNC1, 0xF8, PULLDOWN, 6, 7, DI, L),
	//#gpio_056
	LOW_POWER(0x4C, FUNC1, 0xFC, PULLDOWN, 7, 0, DI, L),
	//#gpio_057
	LOW_POWER(0x50, FUNC1, 0x100, NOPULL, 7, 1, DI, L),
	//#gpio_058
	LOW_POWER(0x54, FUNC1, 0x104, NOPULL, 7, 2, DI, L),
	//#gpio_059
	LOW_POWER(0x58, FUNC1, 0x108, NOPULL, 7, 3, DO, L),
	//#gpio_060
	LOW_POWER(0x5C, FUNC1, 0x10C, NOPULL, 7, 4, DO, L),
	//#gpio_061
	LOW_POWER(0x60, FUNC1, 0x110, NOPULL, 7, 5, DO, H),
	//#gpio_062
	LOW_POWER(0x64, FUNC1, 0x114, NOPULL, 7, 6, DI, L),
	//#gpio_063
	LOW_POWER(0x68, FUNC1, 0x118, NOPULL, 7, 7, DI, L),
	//#gpio_064
	LOW_POWER(0x6C, FUNC1, 0x11C, NOPULL, 8, 0, DI, L),
	//#gpio_065
	LOW_POWER(0x70, FUNC1, 0x120, NOPULL, 8, 1, DO, L),
	//#gpio_066
	LOW_POWER(0x74, FUNC1, 0x124, NOPULL, 8, 2, DO, L),
	//#gpio_067
	LOW_POWER(0x78, FUNC1, 0x128, NOPULL, 8, 3, DO, L),
	//#gpio_068
	LOW_POWER(0x7C, FUNC1, 0x12C, NOPULL, 8, 4, DO, L),
	//#gpio_069
	LOW_POWER(0x80, FUNC1, 0x130, NOPULL, 8, 5, DO, L),
	//#gpio_070
	LOW_POWER(0x84, FUNC1, 0x134, NOPULL, 8, 6, DO, L),
	//#gpio_071
	LOW_POWER(0x88, FUNC1, 0x138, NOPULL, 8, 7, DO, L),
	//#gpio_072
	LOW_POWER(0x8C, FUNC1, 0x13C, NOPULL, 9, 0, DO, L),
	//#gpio_073
	LOW_POWER(0x90, FUNC1, 0x140, NOPULL, 9, 1, DO, L),
	//#gpio_074
	LOW_POWER(0x94, FUNC1, 0x144, NOPULL, 9, 2, DO, H),
	//#gpio_075
	LOW_POWER(0x98, FUNC0, 0x148, NOPULL, 9, 3, DO, L),
	//#gpio_076
	LOW_POWER(0x9C, FUNC1, 0x14C, NOPULL, 9, 4, DO, L),
	//#gpio_077
	LOW_POWER(0xA0, FUNC1, 0x150, PULLDOWN, 9, 5, DI, L),
	//#gpio_078
	LOW_POWER(0xA4, FUNC1, 0x154, NOPULL, 9, 6, DO, L),
	//#gpio_079
	LOW_POWER(0xAC, FUNC1, 0x168, NOPULL, 9, 7, DO, L),
	//#gpio_080
	LOW_POWER(0xAC, FUNC1, 0x16C, PULLUP, 10, 0, DI, L),
	//#gpio_081
	LOW_POWER(0xAC, FUNC1, 0x170, PULLDOWN, 10, 1, DO, H),
	//#gpio_082
	LOW_POWER(0xAC, FUNC0, 0x174, NOPULL, 10, 2, DO, L),
	//#gpio_083
	LOW_POWER(0xB0, FUNC1, 0x178, NOPULL, 10, 3, DI, L),
	//#gpio_084
	LOW_POWER(0xB4, FUNC1, 0x17C, NOPULL, 10, 4, DI, L),
	//#gpio_085
	LOW_POWER(0xB8, FUNC1, 0x180, NOPULL, 10, 5, DI, L),
	//#gpio_086
	LOW_POWER(0xB8, FUNC1, 0x184, NOPULL, 10, 6, DI, L),
	//#gpio_087
	LOW_POWER(0xB8, FUNC1, 0x188, NOPULL, 10, 7, DI, L),
	//#gpio_088
	LOW_POWER(0xBC, FUNC1, 0x18C, PULLDOWN, 11, 0, DI, L),
	//#gpio_089
	LOW_POWER(0xBC, FUNC1, 0x190, PULLDOWN, 11, 1, DI, L),
	//#gpio_090
	LOW_POWER(0xBC, FUNC1, 0x194, PULLDOWN, 11, 2, DI, L),
	//#gpio_091
	LOW_POWER(0xBC, FUNC1, 0x198, PULLDOWN, 11, 3, DI, L),
	//#gpio_092
	LOW_POWER(0xBC, FUNC1, 0x19C, PULLDOWN, 11, 4, DI, L),
	//#gpio_093
	LOW_POWER(0xC0, FUNC1, 0x1A0, PULLDOWN, 11, 5, DI, L),
	//#gpio_094
	LOW_POWER(0xC4, FUNC1, 0x1A4, NOPULL, 11, 6, DI, L),
	//#gpio_095
	LOW_POWER(0xC4, FUNC1, 0x1A8, NOPULL, 11, 7, DO, H),
	//#gpio_096
	LOW_POWER(0xC4, FUNC1, 0x1AC, NOPULL, 12, 0, DO, L),
	//#gpio_097
	LOW_POWER(0xC8, FUNC1, 0x1B0, NOPULL, 12, 1, DO, L),
	//#gpio_098
	LOW_POWER(0xC4, FUNC1, 0x1B4, PULLDOWN, 12, 2, DI, L),
	//#gpio_099
	LOW_POWER(0xC4, FUNC1, 0x1B8, PULLDOWN, 12, 3, DI, L),
	//#gpio_100
	LOW_POWER(0xCC, FUNC1, 0x1BC, PULLDOWN, 12, 4, DI, L),
	//#gpio_101
	LOW_POWER(0xCC, FUNC1, 0x1C0, PULLDOWN, 12, 5, DI, L),
	//#gpio_102
	LOW_POWER(0xCC, FUNC1, 0x1C4, PULLDOWN, 12, 6, DI, L),
	//#gpio_103
	LOW_POWER(0xD0, FUNC1, 0x1C8, PULLDOWN, 12, 7, DI, L),
	//#gpio_104
	LOW_POWER(0xCC, FUNC1, 0x1CC, PULLDOWN, 13, 0, DI, L),
	//#gpio_105
	LOW_POWER(0xCC, FUNC1, 0x1D0, PULLDOWN, 13, 1, DI, L),
	//#gpio_106
	LOW_POWER(0xD4, FUNC1, 0x1D4, PULLDOWN, 13, 2, DI, L),
	//#gpio_107
	LOW_POWER(0xD4, FUNC1, 0x1D8, PULLDOWN, 13, 3, DI, L),
	//#gpio_108
	LOW_POWER(0xD4, FUNC1, 0x1DC, PULLDOWN, 13, 4, DI, L),
	//#gpio_109
	LOW_POWER(0xD8, FUNC1, 0x1E0, PULLDOWN, 13, 5, DI, L),
	//#gpio_110
	LOW_POWER(0xDC, FUNC1, 0x1E4, PULLDOWN, 13, 6, DI, L),
	//#gpio_111
	LOW_POWER(0xE0, FUNC1, 0x1E8, NOPULL, 13, 7, DI, L),
	//#gpio_112
	LOW_POWER(0xE4, FUNC1, 0x1EC, NOPULL, 14, 0, DI, L),
	//#gpio_113
	LOW_POWER(0xE8, FUNC1, 0x1F0, PULLDOWN, 14, 1, DI, L),
	//#gpio_114
	LOW_POWER(0xE8, FUNC1, 0x1F4, NOPULL, 14, 2, DO, L),
	//#gpio_115
	LOW_POWER(0xE8, FUNC1, 0x1F8, NOPULL, 14, 3, DO, L),
	//#gpio_116
	LOW_POWER(0xEC, FUNC1, 0x1FC, PULLDOWN, 14, 4, DI, L),
	//#gpio_117
	LOW_POWER(0xF0, FUNC1, 0x200, NOPULL, 14, 5, DO, L),
	//#gpio_118
	LOW_POWER(0xF0, FUNC1, 0x204, NOPULL, 14, 6, DO, L),
	//#gpio_119
	LOW_POWER(0xF4, FUNC1, 0x208, PULLDOWN, 14, 7, DI, L),
	//#gpio_120
	LOW_POWER(0xF4, FUNC1, 0x20C, PULLDOWN, 15, 0, DI, L),
	//#gpio_121
	LOW_POWER(0xF8, FUNC1, 0x210, PULLDOWN, 15, 1, DI, L),
	//#gpio_122
	LOW_POWER(0xF8, FUNC1, 0x214, PULLDOWN, 15, 2, DI, L),
	//#gpio_123
	LOW_POWER(0xFC, FUNC1, 0x218, PULLDOWN, 15, 3, DI, L),
	//#gpio_124
	LOW_POWER(0xFC, FUNC1, 0x21C, PULLDOWN, 15, 4, DI, L),
	//#gpio_125
	LOW_POWER(0x100, FUNC1, 0x220, PULLDOWN, 15, 5, DI, L),
	//#gpio_126
	LOW_POWER(0x100, FUNC1, 0x224, RESERVE, 15, 6, DI, L),
	//#gpio_127
	LOW_POWER(0x104, FUNC1, 0x228, PULLDOWN, 15, 7, DO, L),
	//#gpio_128
	LOW_POWER(0x108, FUNC1, 0x22C, NOPULL, 16, 0, DI, H),
	//#gpio_129
	LOW_POWER(0x10C, FUNC1, 0x230, PULLDOWN, 16, 1, DI, L),
	//#gpio_130
	LOW_POWER(0x110, FUNC1, 0x234, PULLDOWN, 16, 2, DI, L),
	//#gpio_131
	LOW_POWER(0x114, FUNC1, 0x238, PULLDOWN, 16, 3, DI, L),
	//#gpio_132
	LOW_POWER(0x118, FUNC1, 0x23C, PULLDOWN, 16, 4, DI, L),
	//#gpio_133
	LOW_POWER(0x11C, FUNC1, 0x240, NOPULL, 16, 5, DO, L),
	//#gpio_134
	LOW_POWER(0x120, FUNC1, 0x244, NOPULL, 16, 6, DO, L),
	//#gpio_135
	LOW_POWER(0x124, FUNC1, 0x248, NOPULL, 16, 7, DI, L),
	//#gpio_136
	LOW_POWER(0x128, FUNC1, 0x24C, NOPULL, 17, 0, DI, L),
	//#gpio_137
	LOW_POWER(0x12C, FUNC1, 0x250, PULLUP, 17, 1, DI, L),
	//#gpio_138
	LOW_POWER(0x130, FUNC1, 0x254, PULLDOWN, 17, 2, DI, L),
	//#gpio_139
	LOW_POWER(0x134, FUNC1, 0x258, PULLDOWN, 17, 3, DI, L),
	//#gpio_140
	LOW_POWER(0x138, FUNC1, 0x25C, PULLDOWN, 17, 4, DI, L),
	//#gpio_141
	LOW_POWER(0x13C, FUNC1, 0x260, PULLDOWN, 17, 5, DI, L),
	//#gpio_142
	LOW_POWER(0x140, FUNC1, 0x264, PULLDOWN, 17, 6, DI, L),
	//#gpio_143
	LOW_POWER(0x144, FUNC1, 0x268, PULLUP, 17, 7, DI, L),
	//#gpio_144
	LOW_POWER(0x148, FUNC1, 0x26C, NOPULL, 18, 0, DO, H),
	//#gpio_145
	LOW_POWER(0x14C, FUNC1, 0x270, NOPULL, 18, 1, DO, H),
	//#gpio_146
	LOW_POWER(0x14C, FUNC1, 0x274, NOPULL, 18, 2, DI, L),
	//#gpio_147
	LOW_POWER(0x150, FUNC1, 0x278, PULLDOWN, 18, 3, DI, L),
	//#gpio_148
	LOW_POWER(0x150, FUNC1, 0x27C, PULLDOWN, 18, 4, DI, L),
	//#gpio_149
	LOW_POWER(0x154, FUNC1, 0x280, NOPULL, 18, 5, DO, L),
	//#gpio_150
	LOW_POWER(0x158, FUNC1, 0x284, PULLDOWN, 18, 6, DI, L),
	//#gpio_151
	LOW_POWER(0x15C, FUNC1, 0x288, NOPULL, 18, 7, DO, L),
	//#gpio_152
	LOW_POWER(0x15C, FUNC1, 0x28C, NOPULL, 19, 0, DO, L),
	//#gpio_153
	LOW_POWER(0x15C, FUNC1, 0x290, NOPULL, 19, 1, DO, H),
	//#gpio_154
	LOW_POWER(0x160, FUNC1, 0x294, PULLDOWN, 19, 2, DI, L),
	//#gpio_155
	LOW_POWER(0x160, FUNC1, 0x298, PULLDOWN, 19, 3, DI, L),
	//#gpio_156
	LOW_POWER(0x160, RESERVE, 0x0C, NOPULL, 19, 4, DO, H),
	//#gpio_157
	LOW_POWER(0x160, RESERVE, 0x10, PULLUP, 19, 5, DI, L),
	//#gpio_158
	LOW_POWER(0x160, RESERVE, 0x14, NOPULL, 19, 6, DO, H),
	//#gpio_159
	LOW_POWER(0x160, RESERVE, 0x18, PULLUP, 19, 7, DI, L),
	//#gpio_160
	LOW_POWER(0x164, FUNC1, 0x29C, PULLDOWN, 20, 0, DI, L),
	//#gpio_161
	LOW_POWER(0x164, FUNC1, 0x2A0, PULLDOWN, 20, 1, DI, L),
	//#gpio_162
	LOW_POWER(0x168, FUNC1, 0x2A4, NOPULL, 20, 2, DI, L),
	//#gpio_163
	LOW_POWER(0x168, FUNC1, 0x2A8, NOPULL, 20, 3, DI, L),
	//#gpio_164
	LOW_POWER(0x16C, FUNC1, 0x2AC, NOPULL, 20, 4, DI, L),
	//#gpio_165
	LOW_POWER(0x170, FUNC1, 0x2B0, NOPULL, 20, 5, DI, L),
	//#gpio_166
	LOW_POWER(0x174, FUNC1, 0x2B4, PULLDOWN, 20, 6, DI, L),
	//#gpio_167
	LOW_POWER(0x174, FUNC1, 0x2B8, NOPULL, 20, 7, DO, L),
	//#gpio_168
	LOW_POWER(0x174, FUNC1, 0x2BC, NOPULL, 21, 0, DO, L),
	//#gpio_169
	LOW_POWER(0x174, FUNC1, 0x2C0, NOPULL, 21, 1, DO, L),
	//#gpio_170
	LOW_POWER(0x174, FUNC1, 0x2C4, PULLDOWN, 21, 2, DI, L),
	//#gpio_171
	LOW_POWER(0x178, FUNC1, 0x2C8, NOPULL, 21, 3, DO, L),
	//#gpio_172
	LOW_POWER(0x17C, FUNC1, 0x2CC, NOPULL, 21, 4, DO, L),
	//#gpio_173
	LOW_POWER(0x17C, FUNC1, 0x2D0, NOPULL, 21, 5, DO, L),
	//#gpio_174
	LOW_POWER(0x17C, FUNC1, 0x2D4, NOPULL, 21, 6, DO, L),
	//#gpio_175
	LOW_POWER(0x180, FUNC1, 0x2D8, PULLDOWN, 21, 7, DI, L),
};

static struct iocfg_lp iocfg_lookups_u9510_cs[] = {
	//#gpio_002_cs
	LOW_POWER(0x00, FUNC0, 0x24, NOPULL, 0, 2, DO, L),
	//#gpio_003_cs
	LOW_POWER(0x00, FUNC0, 0x28, NOPULL, 0, 3, DO, L),
	//#gpio_004_cs
	LOW_POWER(0x00, FUNC0, 0x2C, PULLDOWN, 0, 4, DI, L),
	//#gpio_005_cs
	LOW_POWER(0x00, FUNC0, 0x30, PULLUP, 0, 5, DI, L),
	//#gpio_006_cs
	LOW_POWER(0x04, FUNC0, 0x34, NOPULL, 0, 6, DO, L),
	//#gpio_007_cs
	LOW_POWER(0x08, FUNC0, 0x38, PULLDOWN, 0, 7, DI, L),
	//#gpio_008_cs
	LOW_POWER(0x0C, FUNC1, 0x3C, PULLDOWN, 1, 0, DI, L),
	//#gpio_009_cs
	LOW_POWER(0x0C, FUNC1, 0x40, PULLDOWN, 1, 1, DI, L),
	//#gpio_010_cs
	LOW_POWER(0x0C, FUNC1, 0x44, PULLDOWN, 1, 2, DI, L),
	//#gpio_011_cs
	LOW_POWER(0x0C, FUNC1, 0x48, PULLDOWN, 1, 3, DI, L),
	//#gpio_012_cs
	LOW_POWER(0x0C, FUNC1, 0x4C, PULLDOWN, 1, 4, DI, L),
	//#gpio_013_cs
	LOW_POWER(0x10, FUNC1, 0x50, PULLDOWN, 1, 5, DI, L),
	//#gpio_014_cs
	LOW_POWER(0x14, FUNC1, 0x54, PULLDOWN, 1, 6, DI, L),
	//#gpio_015_cs
	LOW_POWER(0x18, FUNC1, 0x58, PULLDOWN, 1, 7, DI, L),
	//#gpio_016_cs
	LOW_POWER(0x1C, FUNC1, 0x5C, PULLDOWN, 2, 0, DI, L),
	//#gpio_017_cs
	LOW_POWER(0x20, FUNC1, 0x60, PULLDOWN, 2, 1, DI, L),
	//#gpio_018_cs
	LOW_POWER(0x20, FUNC1, 0x64, PULLDOWN, 2, 2, DI, L),
	//#gpio_019_cs
	LOW_POWER(0x20, FUNC1, 0x68, PULLDOWN, 2, 3, DI, L),
	//#gpio_020_cs
	LOW_POWER(0x0C, FUNC1, 0x6C, PULLDOWN, 2, 4, DI, L),
	//#gpio_021_cs
	LOW_POWER(0x0C, FUNC1, 0x70, PULLDOWN, 2, 5, DI, L),
	//#gpio_022_cs
	LOW_POWER(0x0C, FUNC1, 0x74, PULLDOWN, 2, 6, DI, L),
	//#gpio_023_cs
	LOW_POWER(0x0C, FUNC1, 0x78, PULLDOWN, 2, 7, DI, L),
	//#gpio_024_cs
	LOW_POWER(0x0C, FUNC1, 0x7C, PULLDOWN, 3, 0, DI, L),
	//#gpio_025_cs
	LOW_POWER(0x0C, FUNC1, 0x80, PULLDOWN, 3, 1, DI, L),
	//#gpio_026_cs
	LOW_POWER(0x0C, FUNC1, 0x84, PULLDOWN, 3, 2, DI, L),
	//#gpio_027_cs
	LOW_POWER(0x0C, FUNC1, 0x88, PULLDOWN, 3, 3, DI, L),
	//#gpio_028_cs
	LOW_POWER(0x2C, FUNC1, 0x8C, PULLDOWN, 3, 4, DI, L),
	//#gpio_029_cs
	LOW_POWER(0x2C, FUNC1, 0x90, PULLDOWN, 3, 5, DI, L),
	//#gpio_030_cs
	LOW_POWER(0x2C, FUNC1, 0x94, PULLDOWN, 3, 6, DI, L),
	//#gpio_031_cs
	LOW_POWER(0x2C, FUNC1, 0x98, PULLDOWN, 3, 7, DI, L),
	//#gpio_032_cs
	LOW_POWER(0x2C, FUNC1, 0x9C, PULLDOWN, 4, 0, DI, L),
	//#gpio_033_cs
	LOW_POWER(0x2C, FUNC1, 0xA0, PULLDOWN, 4, 1, DI, L),
	//#gpio_034_cs
	LOW_POWER(0x2C, FUNC1, 0xA4, PULLDOWN, 4, 2, DI, L),
	//#gpio_035_cs
	LOW_POWER(0x2C, FUNC1, 0xA8, PULLDOWN, 4, 3, DI, L),
	//#gpio_036_cs
	LOW_POWER(0x30, FUNC0, 0xAC, PULLDOWN, 4, 4, DI, L),
	//#gpio_037_cs
	LOW_POWER(0x30, FUNC0, 0xB0, PULLDOWN, 4, 5, DI, L),
	//#gpio_038_cs
	LOW_POWER(0x34, FUNC1, 0xB4, NOPULL, 4, 6, DI, L),
	//#gpio_039_cs
	LOW_POWER(0x34, FUNC1, 0xB8, NOPULL, 4, 7, DI, L),
	//#gpio_040_cs
	LOW_POWER(0x38, FUNC1, 0xBC, PULLDOWN, 5, 0, DI, L),
	//#gpio_041_cs
	LOW_POWER(0x3C, FUNC1, 0xC0, PULLDOWN, 5, 1, DI, L),
	//#gpio_042_cs
	LOW_POWER(0x40, FUNC1, 0xC4, PULLDOWN, 5, 2, DI, L),
	//#gpio_043_cs
	LOW_POWER(0x40, FUNC1, 0xC8, PULLDOWN, 5, 3, DI, L),
	//#gpio_044_cs
	LOW_POWER(0x40, FUNC1, 0xCC, PULLDOWN, 5, 4, DI, L),
	//#gpio_045_cs
	LOW_POWER(0x40, FUNC1, 0xD0, PULLDOWN, 5, 5, DI, L),
	//#gpio_046_cs
	LOW_POWER(0x40, FUNC1, 0xD4, PULLDOWN, 5, 6, DI, L),
	//#gpio_047_cs
	LOW_POWER(0x40, FUNC1, 0xD8, PULLDOWN, 5, 7, DI, L),
	//#gpio_048_cs
	LOW_POWER(0x40, FUNC1, 0xDC, PULLDOWN, 6, 0, DI, L),
	//#gpio_049_cs
	LOW_POWER(0x40, FUNC1, 0xE0, PULLDOWN, 6, 1, DI, L),
	//#gpio_050_cs
	LOW_POWER(0x44, FUNC1, 0xE4, PULLDOWN, 6, 2, DI, L),
	//#gpio_051_cs
	LOW_POWER(0x44, FUNC1, 0xE8, PULLDOWN, 6, 3, DI, L),
	//#gpio_052_cs
	LOW_POWER(0x48, FUNC1, 0xEC, PULLDOWN, 6, 4, DI, L),
	//#gpio_053_cs
	LOW_POWER(0x48, FUNC1, 0xF0, PULLDOWN, 6, 5, DI, L),
	//#gpio_054_cs
	LOW_POWER(0x48, FUNC1, 0xF4, PULLDOWN, 6, 6, DI, L),
	//#gpio_055_cs
	LOW_POWER(0x4C, FUNC1, 0xF8, PULLDOWN, 6, 7, DI, L),
	//#gpio_056_cs
	LOW_POWER(0x4C, FUNC1, 0xFC, PULLDOWN, 7, 0, DI, L),
	//#gpio_057_cs
	LOW_POWER(0x50, FUNC1, 0x100, NOPULL, 7, 1, DI, L),
	//#gpio_058_cs
	LOW_POWER(0x54, FUNC1, 0x104, NOPULL, 7, 2, DI, L),
	//#gpio_059_cs
	LOW_POWER(0x58, FUNC1, 0x108, NOPULL, 7, 3, DO, L),
	//#gpio_060_cs
	LOW_POWER(0x5C, FUNC1, 0x10C, NOPULL, 7, 4, DO, L),
	//#gpio_061_cs
	LOW_POWER(0x60, FUNC1, 0x110, NOPULL, 7, 5, DO, H),
	//#gpio_062_cs
	LOW_POWER(0x64, FUNC1, 0x114, NOPULL, 7, 6, DI, L),
	//#gpio_063_cs
	LOW_POWER(0x68, FUNC1, 0x118, NOPULL, 7, 7, DI, L),
	//#gpio_064_cs
	LOW_POWER(0x6C, FUNC1, 0x11C, NOPULL, 8, 0, DI, L),
	//#gpio_065_cs
	LOW_POWER(0x70, FUNC1, 0x120, NOPULL, 8, 1, DO, L),
	//#gpio_066_cs
	LOW_POWER(0x74, FUNC1, 0x124, NOPULL, 8, 2, DO, L),
	//#gpio_067_cs
	LOW_POWER(0x78, FUNC1, 0x128, NOPULL, 8, 3, DO, L),
	//#gpio_068_cs
	LOW_POWER(0x7C, FUNC1, 0x12C, NOPULL, 8, 4, DO, L),
	//#gpio_069_cs
	LOW_POWER(0x80, FUNC1, 0x130, NOPULL, 8, 5, DO, L),
	//#gpio_070_cs
	LOW_POWER(0x84, FUNC1, 0x134, NOPULL, 8, 6, DO, L),
	//#gpio_071_cs
	LOW_POWER(0x88, FUNC1, 0x138, NOPULL, 8, 7, DO, L),
	//#gpio_072_cs
	LOW_POWER(0x8C, FUNC2, 0x13C, PULLDOWN, 9, 0, DI, L),
	//#gpio_073_cs
	LOW_POWER(0x90, FUNC1, 0x140, NOPULL, 9, 1, DO, L),
	//#gpio_074_cs
	LOW_POWER(0x94, FUNC1, 0x144, NOPULL, 9, 2, DO, H),
	//#gpio_075_cs
	LOW_POWER(0x98, FUNC0, 0x148, NOPULL, 9, 3, DO, L),
	//#gpio_076_cs
	LOW_POWER(0x9C, FUNC1, 0x14C, NOPULL, 9, 4, DO, L),
	//#gpio_077_cs
	LOW_POWER(0xA0, FUNC1, 0x150, PULLDOWN, 9, 5, DI, L),
	//#gpio_078_cs
	LOW_POWER(0xA4, FUNC1, 0x154, NOPULL, 9, 6, DO, L),
	//#gpio_079_cs
	LOW_POWER(0xAC, FUNC1, 0x168, NOPULL, 9, 7, DO, L),
	//#gpio_080_cs
	LOW_POWER(0xAC, FUNC1, 0x16C, PULLUP, 10, 0, DI, L),
	//#gpio_081_cs
	LOW_POWER(0xAC, FUNC1, 0x170, PULLDOWN, 10, 1, DO, H),
	//#gpio_082_cs
	LOW_POWER(0xAC, FUNC0, 0x174, NOPULL, 10, 2, DO, L),
	//#gpio_083_cs
	LOW_POWER(0xB0, FUNC1, 0x178, NOPULL, 10, 3, DI, L),
	//#gpio_084_cs
	LOW_POWER(0xB4, FUNC1, 0x17C, NOPULL, 10, 4, DI, L),
	//#gpio_085_cs
	LOW_POWER(0xB8, FUNC1, 0x180, NOPULL, 10, 5, DI, L),
	//#gpio_086_cs
	LOW_POWER(0xB8, FUNC1, 0x184, NOPULL, 10, 6, DI, L),
	//#gpio_087_cs
	LOW_POWER(0xB8, FUNC1, 0x188, NOPULL, 10, 7, DI, L),
	//#gpio_088_cs
	LOW_POWER(0xBC, FUNC1, 0x18C, PULLDOWN, 11, 0, DI, L),
	//#gpio_089_cs
	LOW_POWER(0xBC, FUNC1, 0x190, PULLDOWN, 11, 1, DI, L),
	//#gpio_090_cs
	LOW_POWER(0xBC, FUNC1, 0x194, PULLDOWN, 11, 2, DI, L),
	//#gpio_091_cs
	LOW_POWER(0xBC, FUNC1, 0x198, PULLDOWN, 11, 3, DI, L),
	//#gpio_092_cs
	LOW_POWER(0xBC, FUNC1, 0x19C, PULLDOWN, 11, 4, DI, L),
	//#gpio_093_cs
	LOW_POWER(0xC0, FUNC1, 0x1A0, PULLDOWN, 11, 5, DI, L),
	//#gpio_094_cs
	LOW_POWER(0xC4, FUNC1, 0x1A4, NOPULL, 11, 6, DI, L),
	//#gpio_095_cs
	LOW_POWER(0xC4, FUNC1, 0x1A8, NOPULL, 11, 7, DO, H),
	//#gpio_096_cs
	LOW_POWER(0xC4, FUNC1, 0x1AC, NOPULL, 12, 0, DO, L),
	//#gpio_097_cs
	LOW_POWER(0xC8, FUNC1, 0x1B0, NOPULL, 12, 1, DO, L),
	//#gpio_098_cs
	LOW_POWER(0xC4, FUNC1, 0x1B4, PULLDOWN, 12, 2, DI, L),
	//#gpio_099_cs
	LOW_POWER(0xC4, FUNC1, 0x1B8, PULLDOWN, 12, 3, DI, L),
	//#gpio_100_cs
	LOW_POWER(0xCC, FUNC1, 0x1BC, PULLDOWN, 12, 4, DI, L),
	//#gpio_101_cs
	LOW_POWER(0xCC, FUNC1, 0x1C0, PULLDOWN, 12, 5, DI, L),
	//#gpio_102_cs
	LOW_POWER(0xCC, FUNC1, 0x1C4, PULLDOWN, 12, 6, DI, L),
	//#gpio_103_cs
	LOW_POWER(0xD0, FUNC1, 0x1C8, PULLDOWN, 12, 7, DI, L),
	//#gpio_104_cs
	LOW_POWER(0xCC, FUNC1, 0x1CC, PULLDOWN, 13, 0, DI, L),
	//#gpio_105_cs
	LOW_POWER(0xCC, FUNC1, 0x1D0, PULLDOWN, 13, 1, DI, L),
	//#gpio_106_cs
	LOW_POWER(0xD4, FUNC1, 0x1D4, NOPULL, 13, 2, DO, L),
	//#gpio_107_cs
	LOW_POWER(0xD4, FUNC1, 0x1D8, PULLDOWN, 13, 3, DI, L),
	//#gpio_108_cs
	LOW_POWER(0xD4, FUNC1, 0x1DC, PULLDOWN, 13, 4, DI, L),
	//#gpio_109_cs
	LOW_POWER(0xD8, FUNC1, 0x1E0, PULLDOWN, 13, 5, DI, L),
	//#gpio_110_cs
	LOW_POWER(0xDC, FUNC1, 0x1E4, PULLDOWN, 13, 6, DI, L),
	//#gpio_111_cs
	LOW_POWER(0xE0, FUNC1, 0x1E8, NOPULL, 13, 7, DI, L),
	//#gpio_112_cs
	LOW_POWER(0xE4, FUNC1, 0x1EC, NOPULL, 14, 0, DI, L),
	//#gpio_113_cs
	LOW_POWER(0xE8, FUNC1, 0x1F0, PULLDOWN, 14, 1, DI, L),
	//#gpio_114_cs
	LOW_POWER(0xE8, FUNC1, 0x1F4, NOPULL, 14, 2, DO, L),
	//#gpio_115_cs
	LOW_POWER(0xE8, FUNC1, 0x1F8, NOPULL, 14, 3, DO, L),
	//#gpio_116_cs
	LOW_POWER(0xEC, FUNC1, 0x1FC, PULLDOWN, 14, 4, DI, L),
	//#gpio_117_cs
	LOW_POWER(0xF0, FUNC1, 0x200, NOPULL, 14, 5, DO, L),
	//#gpio_118_cs
	LOW_POWER(0xF0, FUNC1, 0x204, NOPULL, 14, 6, DO, L),
	//#gpio_119_cs
	LOW_POWER(0xF4, FUNC1, 0x208, PULLDOWN, 14, 7, DI, L),
	//#gpio_120_cs
	LOW_POWER(0xF4, FUNC1, 0x20C, PULLDOWN, 15, 0, DI, L),
	//#gpio_121_cs
	LOW_POWER(0xF8, FUNC1, 0x210, PULLDOWN, 15, 1, DI, L),
	//#gpio_122_cs
	LOW_POWER(0xF8, FUNC1, 0x214, PULLDOWN, 15, 2, DI, L),
	//#gpio_123_cs
	LOW_POWER(0xFC, FUNC1, 0x218, PULLDOWN, 15, 3, DI, L),
	//#gpio_124_cs
	LOW_POWER(0xFC, FUNC1, 0x21C, PULLDOWN, 15, 4, DI, L),
	//#gpio_125_cs
	LOW_POWER(0x100, FUNC1, 0x220, PULLDOWN, 15, 5, DI, L),
	//#gpio_126_cs
	LOW_POWER(0x100, FUNC1, 0x224, RESERVE, 15, 6, DI, L),
	//#gpio_127_cs
	LOW_POWER(0x104, FUNC1, 0x228, PULLDOWN, 15, 7, DO, L),
	//#gpio_128_cs
	LOW_POWER(0x108, FUNC1, 0x22C, NOPULL, 16, 0, DI, H),
	//#gpio_129_cs
	LOW_POWER(0x10C, FUNC1, 0x230, PULLDOWN, 16, 1, DI, L),
	//#gpio_130_cs
	LOW_POWER(0x110, FUNC1, 0x234, PULLDOWN, 16, 2, DI, L),
	//#gpio_131_cs
	LOW_POWER(0x114, FUNC1, 0x238, PULLDOWN, 16, 3, DI, L),
	//#gpio_132_cs
	LOW_POWER(0x118, FUNC1, 0x23C, PULLDOWN, 16, 4, DI, L),
	//#gpio_133_cs
	LOW_POWER(0x11C, FUNC1, 0x240, NOPULL, 16, 5, DO, L),
	//#gpio_134_cs
	LOW_POWER(0x120, FUNC1, 0x244, NOPULL, 16, 6, DO, L),
	//#gpio_135_cs
	LOW_POWER(0x124, FUNC1, 0x248, NOPULL, 16, 7, DI, L),
	//#gpio_136_cs
	LOW_POWER(0x128, FUNC1, 0x24C, NOPULL, 17, 0, DI, L),
	//#gpio_137_cs
	LOW_POWER(0x12C, FUNC1, 0x250, PULLUP, 17, 1, DI, L),
	//#gpio_138_cs
	LOW_POWER(0x130, FUNC1, 0x254, PULLUP, 17, 2, DI, L),
	//#gpio_139_cs
	LOW_POWER(0x134, FUNC1, 0x258, PULLDOWN, 17, 3, DI, L),
	//#gpio_140_cs
	LOW_POWER(0x138, FUNC1, 0x25C, PULLDOWN, 17, 4, DI, L),
	//#gpio_141_cs
	LOW_POWER(0x13C, FUNC1, 0x260, PULLDOWN, 17, 5, DI, L),
	//#gpio_142_cs
	LOW_POWER(0x140, FUNC1, 0x264, PULLDOWN, 17, 6, DI, L),
	//#gpio_143_cs
	LOW_POWER(0x144, FUNC1, 0x268, PULLUP, 17, 7, DI, L),
	//#gpio_144_cs
	LOW_POWER(0x148, FUNC1, 0x26C, NOPULL, 18, 0, DO, H),
	//#gpio_145_cs
	LOW_POWER(0x14C, FUNC1, 0x270, NOPULL, 18, 1, DO, H),
	//#gpio_146_cs
	LOW_POWER(0x14C, FUNC1, 0x274, NOPULL, 18, 2, DI, L),
	//#gpio_147_cs
	LOW_POWER(0x150, FUNC1, 0x278, PULLDOWN, 18, 3, DI, L),
	//#gpio_148_cs
	LOW_POWER(0x150, FUNC1, 0x27C, PULLDOWN, 18, 4, DI, L),
	//#gpio_149_cs
	LOW_POWER(0x154, FUNC1, 0x280, NOPULL, 18, 5, DO, L),
	//#gpio_150_cs
	LOW_POWER(0x158, FUNC1, 0x284, PULLDOWN, 18, 6, DI, L),
	//#gpio_151_cs
	LOW_POWER(0x15C, FUNC1, 0x288, NOPULL, 18, 7, DO, L),
	//#gpio_152_cs
	LOW_POWER(0x15C, FUNC1, 0x28C, NOPULL, 19, 0, DO, L),
	//#gpio_153_cs
	LOW_POWER(0x15C, FUNC1, 0x290, NOPULL, 19, 1, DO, H),
	//#gpio_154_cs
	LOW_POWER(0x160, FUNC1, 0x294, PULLDOWN, 19, 2, DI, L),
	//#gpio_155_cs
	LOW_POWER(0x160, FUNC1, 0x298, PULLDOWN, 19, 3, DI, L),
	//#gpio_156_cs
	LOW_POWER(0x160, RESERVE, 0x0C, NOPULL, 19, 4, DO, H),
	//#gpio_157_cs
	LOW_POWER(0x160, RESERVE, 0x10, PULLUP, 19, 5, DI, L),
	//#gpio_158_cs
	LOW_POWER(0x160, RESERVE, 0x14, NOPULL, 19, 6, DO, H),
	//#gpio_159_cs
	LOW_POWER(0x160, RESERVE, 0x18, PULLUP, 19, 7, DI, L),
	//#gpio_160_cs
	LOW_POWER(0x164, FUNC1, 0x29C, PULLDOWN, 20, 0, DI, L),
	//#gpio_161_cs
	LOW_POWER(0x164, FUNC1, 0x2A0, PULLDOWN, 20, 1, DI, L),
	//#gpio_162_cs
	LOW_POWER(0x168, FUNC1, 0x2A4, NOPULL, 20, 2, DI, L),
	//#gpio_163_cs
	LOW_POWER(0x168, FUNC1, 0x2A8, NOPULL, 20, 3, DI, L),
	//#gpio_164_cs
	LOW_POWER(0x16C, FUNC1, 0x2AC, NOPULL, 20, 4, DI, L),
	//#gpio_165_cs
	LOW_POWER(0x170, FUNC1, 0x2B0, NOPULL, 20, 5, DI, L),
	//#gpio_166_cs
	LOW_POWER(0x174, FUNC1, 0x2B4, PULLDOWN, 20, 6, DI, L),
	//#gpio_167_cs
	LOW_POWER(0x174, FUNC1, 0x2B8, NOPULL, 20, 7, DO, L),
	//#gpio_168_cs
	LOW_POWER(0x174, FUNC1, 0x2BC, NOPULL, 21, 0, DO, L),
	//#gpio_169_cs
	LOW_POWER(0x174, FUNC1, 0x2C0, NOPULL, 21, 1, DO, L),
	//#gpio_170_cs
	LOW_POWER(0x174, FUNC1, 0x2C4, PULLDOWN, 21, 2, DI, L),
	//#gpio_171_cs
	LOW_POWER(0x178, FUNC1, 0x2C8, NOPULL, 21, 3, DO, L),
	//#gpio_172_cs
	LOW_POWER(0x17C, FUNC1, 0x2CC, NOPULL, 21, 4, DO, L),
	//#gpio_173_cs
	LOW_POWER(0x17C, FUNC1, 0x2D0, NOPULL, 21, 5, DO, L),
	//#gpio_174_cs
	LOW_POWER(0x17C, FUNC1, 0x2D4, NOPULL, 21, 6, DO, L),
	//#gpio_175_cs
	LOW_POWER(0x180, FUNC1, 0x2D8, PULLDOWN, 21, 7, DI, L),
};

static struct iocfg_lp iocfg_lookups_c9800d[] = {
	//#gpio_002_cs
	LOW_POWER(0x00, FUNC0, 0x24, NOPULL, 0, 2, DO, L),
	//#gpio_003_cs
	LOW_POWER(0x00, FUNC0, 0x28, NOPULL, 0, 3, DO, L),
	//#gpio_004_cs
	LOW_POWER(0x00, FUNC0, 0x2C, PULLUP, 0, 4, DI, L),
	//#gpio_005_cs
	LOW_POWER(0x00, FUNC0, 0x30, PULLUP, 0, 5, DI, L),
	//#gpio_006_cs
	LOW_POWER(0x04, FUNC0, 0x34, NOPULL, 0, 6, DO, L),
	//#gpio_007_cs
	LOW_POWER(0x08, FUNC0, 0x38, PULLDOWN, 0, 7, DI, L),
	//#gpio_008_cs
	LOW_POWER(0x0C, FUNC1, 0x3C, NOPULL, 1, 0, DO, L),
	//#gpio_009_cs
	LOW_POWER(0x0C, FUNC1, 0x40, NOPULL, 1, 1, DO, L),
	//#gpio_010_cs
	LOW_POWER(0x0C, FUNC1, 0x44, PULLDOWN, 1, 2, DI, L),
	//#gpio_011_cs
	LOW_POWER(0x0C, FUNC1, 0x48, PULLDOWN, 1, 3, DI, L),
	//#gpio_012_cs
	LOW_POWER(0x0C, FUNC1, 0x4C, PULLDOWN, 1, 4, DI, L),
	//#gpio_013_cs
	LOW_POWER(0x10, FUNC1, 0x50, PULLDOWN, 1, 5, DI, L),
	//#gpio_014_cs
	LOW_POWER(0x14, FUNC1, 0x54, PULLDOWN, 1, 6, DI, L),
	//#gpio_015_cs
	LOW_POWER(0x18, FUNC1, 0x58, PULLDOWN, 1, 7, DI, L),
	//#gpio_016_cs
	LOW_POWER(0x1C, FUNC1, 0x5C, PULLDOWN, 2, 0, DI, L),
	//#gpio_017_cs
	LOW_POWER(0x20, FUNC1, 0x60, PULLDOWN, 2, 1, DI, L),
	//#gpio_018_cs
	LOW_POWER(0x20, FUNC1, 0x64, PULLDOWN, 2, 2, DI, L),
	//#gpio_019_cs
	LOW_POWER(0x20, FUNC1, 0x68, NOPULL, 2, 3, DO, L),
	//#gpio_020_cs
	LOW_POWER(0x0C, FUNC1, 0x6C, NOPULL, 2, 4, DO, L),
	//#gpio_021_cs
	LOW_POWER(0x0C, FUNC1, 0x70, NOPULL, 2, 5, DI, L),
	//#gpio_022_cs
	LOW_POWER(0x0C, FUNC1, 0x74, NOPULL, 2, 6, DO, L),
	//#gpio_023_cs
	LOW_POWER(0x0C, FUNC1, 0x78, PULLDOWN, 2, 7, DI, L),
	//#gpio_024_cs
	LOW_POWER(0x0C, FUNC1, 0x7C, NOPULL, 3, 0, DO, H),
	//#gpio_025_cs
	LOW_POWER(0x0C, FUNC1, 0x80, NOPULL, 3, 1, DI, L),
	//#gpio_026_cs
	LOW_POWER(0x0C, FUNC1, 0x84, NOPULL, 3, 2, DI, L),
	//#gpio_027_cs
	LOW_POWER(0x0C, FUNC1, 0x88, NOPULL, 3, 3, DI, L),
	//#gpio_028_cs
	LOW_POWER(0x2C, FUNC1, 0x8C, PULLDOWN, 3, 4, DI, L),
	//#gpio_029_cs
	LOW_POWER(0x2C, FUNC1, 0x90, PULLDOWN, 3, 5, DI, L),
	//#gpio_030_cs
	LOW_POWER(0x2C, FUNC1, 0x94, PULLDOWN, 3, 6, DI, L),
	//#gpio_031_cs
	LOW_POWER(0x2C, FUNC1, 0x98, PULLDOWN, 3, 7, DI, L),
	//#gpio_032_cs
	LOW_POWER(0x2C, FUNC1, 0x9C, PULLDOWN, 4, 0, DI, L),
	//#gpio_033_cs
	LOW_POWER(0x2C, FUNC1, 0xA0, PULLDOWN, 4, 1, DI, L),
	//#gpio_034_cs
	LOW_POWER(0x2C, FUNC1, 0xA4, PULLDOWN, 4, 2, DI, L),
	//#gpio_035_cs
	LOW_POWER(0x2C, FUNC1, 0xA8, PULLDOWN, 4, 3, DI, L),
	//#gpio_036_cs
	LOW_POWER(0x30, FUNC0, 0xAC, PULLDOWN, 4, 4, DI, L),
	//#gpio_037_cs
	LOW_POWER(0x30, FUNC0, 0xB0, PULLDOWN, 4, 5, DI, L),
	//#gpio_038_cs
	LOW_POWER(0x34, FUNC1, 0xB4, NOPULL, 4, 6, DI, L),
	//#gpio_039_cs
	LOW_POWER(0x34, FUNC1, 0xB8, NOPULL, 4, 7, DI, L),
	//#gpio_040_cs
	LOW_POWER(0x38, FUNC1, 0xBC, PULLDOWN, 5, 0, DI, L),
	//#gpio_041_cs
	LOW_POWER(0x3C, FUNC1, 0xC0, NOPULL, 5, 1, DI, L),
	//#gpio_042_cs
	LOW_POWER(0x40, FUNC1, 0xC4, NOPULL, 5, 2, DO, L),
	//#gpio_043_cs
	LOW_POWER(0x40, FUNC1, 0xC8, PULLDOWN, 5, 3, DI, L),
	//#gpio_044_cs
	LOW_POWER(0x40, FUNC1, 0xCC, NOPULL, 5, 4, DO, L),
	//#gpio_045_cs
	LOW_POWER(0x40, FUNC1, 0xD0, PULLDOWN, 5, 5, DI, L),
	//#gpio_046_cs
	LOW_POWER(0x40, FUNC1, 0xD4, NOPULL, 5, 6, DI, L),
	//#gpio_047_cs
	LOW_POWER(0x40, FUNC1, 0xD8, PULLDOWN, 5, 7, DI, L),
	//#gpio_048_cs
	LOW_POWER(0x40, FUNC1, 0xDC, PULLDOWN, 6, 0, DI, L),
	//#gpio_049_cs
	LOW_POWER(0x40, FUNC1, 0xE0, PULLDOWN, 6, 1, DI, L),
	//#gpio_050_cs
	LOW_POWER(0x44, FUNC1, 0xE4, PULLDOWN, 6, 2, DI, L),
	//#gpio_051_cs
	LOW_POWER(0x44, FUNC1, 0xE8, PULLDOWN, 6, 3, DI, L),
	//#gpio_052_cs
	LOW_POWER(0x48, FUNC1, 0xEC, NOPULL, 6, 4, DO, H),
	//#gpio_053_cs
	LOW_POWER(0x48, FUNC1, 0xF0, NOPULL, 6, 5, DO, L),
	//#gpio_054_cs
	LOW_POWER(0x48, FUNC1, 0xF4, NOPULL, 6, 6, DI, L),
	//#gpio_055_cs
	LOW_POWER(0x4C, FUNC1, 0xF8, PULLDOWN, 6, 7, DI, L),
	//#gpio_056_cs
	LOW_POWER(0x4C, FUNC1, 0xFC, PULLDOWN, 7, 0, DI, L),
	//#gpio_057_cs
	LOW_POWER(0x50, FUNC1, 0x100, NOPULL, 7, 1, DI, L),
	//#gpio_058_cs
	LOW_POWER(0x54, FUNC1, 0x104, NOPULL, 7, 2, DI, L),
	//#gpio_059_cs
	LOW_POWER(0x58, FUNC1, 0x108, NOPULL, 7, 3, DO, L),
	//#gpio_060_cs
	LOW_POWER(0x5C, FUNC1, 0x10C, NOPULL, 7, 4, DO, L),
	//#gpio_061_cs
	LOW_POWER(0x60, FUNC1, 0x110, PULLDOWN, 7, 5, DI, L),
	//#gpio_062_cs
	LOW_POWER(0x64, FUNC1, 0x114, PULLDOWN, 7, 6, DI, L),
	//#gpio_063_cs
	LOW_POWER(0x68, FUNC1, 0x118, NOPULL, 7, 7, DI, L),
	//#gpio_064_cs
	LOW_POWER(0x6C, FUNC1, 0x11C, NOPULL, 8, 0, DI, L),
	//#gpio_065_cs
	LOW_POWER(0x70, FUNC1, 0x120, NOPULL, 8, 1, DO, L),
	//#gpio_066_cs
	LOW_POWER(0x74, FUNC1, 0x124, NOPULL, 8, 2, DO, L),
	//#gpio_067_cs
	LOW_POWER(0x78, FUNC1, 0x128, NOPULL, 8, 3, DO, L),
	//#gpio_068_cs
	LOW_POWER(0x7C, FUNC1, 0x12C, NOPULL, 8, 4, DO, L),
	//#gpio_069_cs
	LOW_POWER(0x80, FUNC1, 0x130, NOPULL, 8, 5, DO, L),
	//#gpio_070_cs
	LOW_POWER(0x84, FUNC1, 0x134, NOPULL, 8, 6, DO, L),
	//#gpio_071_cs
	LOW_POWER(0x88, FUNC1, 0x138, NOPULL, 8, 7, DO, L),
	//#gpio_072_cs
	LOW_POWER(0x8C, FUNC1, 0x13C, PULLDOWN, 9, 0, DI, L),
	//#gpio_073_cs
	LOW_POWER(0x90, FUNC1, 0x140, NOPULL, 9, 1, DO, L),
	//#gpio_074_cs
	LOW_POWER(0x94, FUNC1, 0x144, NOPULL, 9, 2, DO, H),
	//#gpio_075_cs
	LOW_POWER(0x98, FUNC0, 0x148, NOPULL, 9, 3, DO, L),
	//#gpio_076_cs
	LOW_POWER(0x9C, FUNC1, 0x14C, NOPULL, 9, 4, DO, L),
	//#gpio_077_cs
	LOW_POWER(0xA0, FUNC1, 0x150, PULLDOWN, 9, 5, DI, L),
	//#gpio_078_cs
	LOW_POWER(0xA4, FUNC1, 0x154, PULLDOWN, 9, 6, DI, L),
	//#gpio_079_cs
	LOW_POWER(0xAC, FUNC0, 0x168, PULLDOWN, 9, 7, DI, L),
	//#gpio_080_cs
	LOW_POWER(0xAC, FUNC0, 0x16C, PULLUP, 10, 0, DI, L),
	//#gpio_081_cs
	LOW_POWER(0xAC, FUNC0, 0x170, NOPULL, 10, 1, DO, H),
	//#gpio_082_cs
	LOW_POWER(0xAC, FUNC0, 0x174, PULLDOWN, 10, 2, DI, L),
	//#gpio_083_cs
	LOW_POWER(0xB0, FUNC1, 0x178, PULLDOWN, 10, 3, DI, L),
	//#gpio_084_cs
	LOW_POWER(0xB4, FUNC1, 0x17C, NOPULL, 10, 4, DI, L),
	//#gpio_085_cs
	LOW_POWER(0xB8, FUNC1, 0x180, NOPULL, 10, 5, DI, L),
	//#gpio_086_cs
	LOW_POWER(0xB8, FUNC1, 0x184, NOPULL, 10, 6, DI, L),
	//#gpio_087_cs
	LOW_POWER(0xB8, FUNC1, 0x188, NOPULL, 10, 7, DI, L),
	//#gpio_088_cs
	LOW_POWER(0xBC, FUNC1, 0x18C, PULLDOWN, 11, 0, DI, L),
	//#gpio_089_cs
	LOW_POWER(0xBC, FUNC1, 0x190, PULLDOWN, 11, 1, DI, L),
	//#gpio_090_cs
	LOW_POWER(0xBC, FUNC1, 0x194, PULLDOWN, 11, 2, DI, L),
	//#gpio_091_cs
	LOW_POWER(0xBC, FUNC1, 0x198, PULLDOWN, 11, 3, DI, L),
	//#gpio_092_cs
	LOW_POWER(0xBC, FUNC1, 0x19C, PULLDOWN, 11, 4, DI, L),
	//#gpio_093_cs
	LOW_POWER(0xC0, FUNC1, 0x1A0, PULLDOWN, 11, 5, DI, L),
	//#gpio_094_cs
	LOW_POWER(0xC4, FUNC1, 0x1A4, NOPULL, 11, 6, DI, L),
	//#gpio_095_cs
	LOW_POWER(0xC4, FUNC1, 0x1A8, NOPULL, 11, 7, DO, H),
	//#gpio_096_cs
	LOW_POWER(0xC4, FUNC1, 0x1AC, NOPULL, 12, 0, DO, H),
	//#gpio_097_cs
	LOW_POWER(0xC8, FUNC1, 0x1B0, NOPULL, 12, 1, DO, H),
	//#gpio_098_cs
	LOW_POWER(0xC4, FUNC1, 0x1B4, NOPULL, 12, 2, DI, L),
	//#gpio_099_cs
	LOW_POWER(0xC4, FUNC1, 0x1B8, PULLDOWN, 12, 3, DI, L),
	//#gpio_100_cs
	LOW_POWER(0xCC, FUNC1, 0x1BC, PULLDOWN, 12, 4, DI, L),
	//#gpio_101_cs
	LOW_POWER(0xCC, FUNC1, 0x1C0, PULLDOWN, 12, 5, DI, L),
	//#gpio_102_cs
	LOW_POWER(0xCC, FUNC1, 0x1C4, PULLDOWN, 12, 6, DI, L),
	//#gpio_103_cs
	LOW_POWER(0xD0, FUNC1, 0x1C8, PULLDOWN, 12, 7, DI, L),
	//#gpio_104_cs
	LOW_POWER(0xCC, FUNC1, 0x1CC, PULLDOWN, 13, 0, DI, L),
	//#gpio_105_cs
	LOW_POWER(0xCC, FUNC1, 0x1D0, PULLDOWN, 13, 1, DI, L),
	//#gpio_106_cs
	LOW_POWER(0xD4, FUNC1, 0x1D4, NOPULL, 13, 2, DO, L),
	//#gpio_107_cs
	LOW_POWER(0xD4, FUNC1, 0x1D8, PULLDOWN, 13, 3, DI, L),
	//#gpio_108_cs
	LOW_POWER(0xD4, FUNC1, 0x1DC, PULLDOWN, 13, 4, DI, L),
	//#gpio_109_cs
	LOW_POWER(0xD8, FUNC1, 0x1E0, PULLDOWN, 13, 5, DI, L),
	//#gpio_110_cs
	LOW_POWER(0xDC, FUNC1, 0x1E4, PULLDOWN, 13, 6, DI, L),
	//#gpio_111_cs
	LOW_POWER(0xE0, FUNC1, 0x1E8, PULLDOWN, 13, 7, DI, L),
	//#gpio_112_cs
	LOW_POWER(0xE4, FUNC1, 0x1EC, PULLDOWN, 14, 0, DI, L),
	//#gpio_113_cs
	LOW_POWER(0xE8, FUNC1, 0x1F0, NOPULL, 14, 1, DI, L),
	//#gpio_114_cs
	LOW_POWER(0xE8, FUNC1, 0x1F4, NOPULL, 14, 2, DO, L),
	//#gpio_115_cs
	LOW_POWER(0xE8, FUNC1, 0x1F8, PULLDOWN, 14, 3, DI, L),
	//#gpio_116_cs
	LOW_POWER(0xEC, FUNC1, 0x1FC, PULLDOWN, 14, 4, DI, L),
	//#gpio_117_cs
	LOW_POWER(0xF0, FUNC1, 0x200, PULLDOWN, 14, 5, DI, L),
	//#gpio_118_cs
	LOW_POWER(0xF0, FUNC1, 0x204, PULLDOWN, 14, 6, DI, L),
	//#gpio_119_cs
	LOW_POWER(0xF4, FUNC1, 0x208, PULLDOWN, 14, 7, DI, L),
	//#gpio_120_cs
	LOW_POWER(0xF4, FUNC1, 0x20C, PULLDOWN, 15, 0, DI, L),
	//#gpio_121_cs
	LOW_POWER(0xF8, FUNC1, 0x210, NOPULL, 15, 1, DI, L),
	//#gpio_122_cs
	LOW_POWER(0xF8, FUNC1, 0x214, NOPULL, 15, 2, DO, H),
	//#gpio_123_cs
	LOW_POWER(0xFC, FUNC1, 0x218, NOPULL, 15, 3, DI, L),
	//#gpio_124_cs
	LOW_POWER(0xFC, FUNC1, 0x21C, PULLDOWN, 15, 4, DI, L),
	//#gpio_125_cs
	LOW_POWER(0x100, FUNC1, 0x220, PULLDOWN, 15, 5, DI, L),
	//#gpio_126_cs
	LOW_POWER(0x100, FUNC1, 0x224, PULLUP, 15, 6, DI, L),
	//#gpio_127_cs
	LOW_POWER(0x104, FUNC1, 0x228, NOPULL, 15, 7, DO, H),
	//#gpio_128_cs
	LOW_POWER(0x108, FUNC1, 0x22C, PULLDOWN, 16, 0, DI, L),
	//#gpio_129_cs
	LOW_POWER(0x10C, FUNC1, 0x230, PULLDOWN, 16, 1, DI, L),
	//#gpio_130_cs
	LOW_POWER(0x110, FUNC1, 0x234, PULLDOWN, 16, 2, DI, L),
	//#gpio_131_cs
	LOW_POWER(0x114, FUNC1, 0x238, PULLDOWN, 16, 3, DI, L),
	//#gpio_132_cs
	LOW_POWER(0x118, FUNC1, 0x23C, NOPULL, 16, 4, DI, L),
	//#gpio_133_cs
	LOW_POWER(0x11C, FUNC1, 0x240, PULLDOWN, 16, 5, DI, L),
	//#gpio_134_cs
	LOW_POWER(0x120, FUNC1, 0x244, PULLDOWN, 16, 6, DI, L),
	//#gpio_135_cs
	LOW_POWER(0x124, FUNC1, 0x248, NOPULL, 16, 7, DO, L),
	//#gpio_136_cs
	LOW_POWER(0x128, FUNC1, 0x24C, PULLDOWN, 17, 0, DI, L),
	//#gpio_137_cs
	LOW_POWER(0x12C, FUNC1, 0x250, PULLUP, 17, 1, DI, L),
	//#gpio_138_cs
	LOW_POWER(0x130, FUNC1, 0x254, PULLUP, 17, 2, DI, L),
	//#gpio_139_cs
	LOW_POWER(0x134, FUNC1, 0x258, NOPULL, 17, 3, DO, L),
	//#gpio_140_cs
	LOW_POWER(0x138, FUNC1, 0x25C, PULLDOWN, 17, 4, DI, L),
	//#gpio_141_cs
	LOW_POWER(0x13C, FUNC1, 0x260, PULLDOWN, 17, 5, DI, L),
	//#gpio_142_cs
	LOW_POWER(0x140, FUNC1, 0x264, PULLDOWN, 17, 6, DI, L),
	//#gpio_143_cs
	LOW_POWER(0x144, FUNC1, 0x268, PULLDOWN, 17, 7, DI, L),
	//#gpio_144_cs
	LOW_POWER(0x148, FUNC1, 0x26C, PULLDOWN, 18, 0, DI, L),
	//#gpio_145_cs
	LOW_POWER(0x14C, FUNC1, 0x270, NOPULL, 18, 1, DO, H),
	//#gpio_146_cs
	LOW_POWER(0x14C, FUNC1, 0x274, PULLDOWN, 18, 2, DI, L),
	//#gpio_147_cs
	LOW_POWER(0x150, FUNC1, 0x278, PULLDOWN, 18, 3, DI, L),
	//#gpio_148_cs
	LOW_POWER(0x150, FUNC1, 0x27C, PULLDOWN, 18, 4, DI, L),
	//#gpio_149_cs
	LOW_POWER(0x154, FUNC1, 0x280, PULLDOWN, 18, 5, DI, L),
	//#gpio_150_cs
	LOW_POWER(0x158, FUNC1, 0x284, PULLDOWN, 18, 6, DI, L),
	//#gpio_151_cs
	LOW_POWER(0x15C, FUNC1, 0x288, PULLDOWN, 18, 7, DI, L),
	//#gpio_152_cs
	LOW_POWER(0x15C, FUNC1, 0x28C, PULLDOWN, 19, 0, DI, L),
	//#gpio_153_cs
	LOW_POWER(0x15C, FUNC1, 0x290, PULLDOWN, 19, 1, DI, L),
	//#gpio_154_cs
	LOW_POWER(0x160, FUNC1, 0x294, PULLDOWN, 19, 2, DI, L),
	//#gpio_155_cs
	LOW_POWER(0x160, FUNC1, 0x298, PULLDOWN, 19, 3, DI, L),
	//#gpio_156_cs
	LOW_POWER(0x160, FUNC0, 0x0C, NOPULL, 19, 4, DO, H),
	//#gpio_157_cs
	LOW_POWER(0x160, FUNC0, 0x10, PULLUP, 19, 5, DI, L),
	//#gpio_158_cs
	LOW_POWER(0x160, FUNC0, 0x14, NOPULL, 19, 6, DO, H),
	//#gpio_159_cs
	LOW_POWER(0x160, FUNC0, 0x18, PULLUP, 19, 7, DI, L),
	//#gpio_160_cs
	LOW_POWER(0x164, FUNC1, 0x29C, NOPULL, 20, 0, DI, L),
	//#gpio_161_cs
	LOW_POWER(0x164, FUNC1, 0x2A0, NOPULL, 20, 1, DI, L),
	//#gpio_162_cs
	LOW_POWER(0x168, FUNC1, 0x2A4, NOPULL, 20, 2, DI, L),
	//#gpio_163_cs
	LOW_POWER(0x168, FUNC1, 0x2A8, NOPULL, 20, 3, DI, L),
	//#gpio_164_cs
	LOW_POWER(0x16C, FUNC1, 0x2AC, NOPULL, 20, 4, DI, L),
	//#gpio_165_cs
	LOW_POWER(0x170, FUNC1, 0x2B0, NOPULL, 20, 5, DI, L),
	//#gpio_166_cs
	LOW_POWER(0x174, FUNC0, 0x2B4, PULLUP, 20, 6, DI, L),
	//#gpio_167_cs
	LOW_POWER(0x174, FUNC0, 0x2B8, NOPULL, 20, 7, DO, H),
	//#gpio_168_cs
	LOW_POWER(0x174, FUNC0, 0x2BC, NOPULL, 21, 0, DO, L),
	//#gpio_169_cs
	LOW_POWER(0x174, FUNC0, 0x2C0, NOPULL, 21, 1, DO, H),
	//#gpio_170_cs
	LOW_POWER(0x174, FUNC0, 0x2C4, PULLUP, 21, 2, DI, L),
	//#gpio_171_cs
	LOW_POWER(0x178, FUNC1, 0x2C8, NOPULL, 21, 3, DO, L),
	//#gpio_172_cs
	LOW_POWER(0x17C, FUNC0, 0x2CC, PULLDOWN, 21, 4, DI, L),
	//#gpio_173_cs
	LOW_POWER(0x17C, FUNC0, 0x2D0, NOPULL, 21, 5, DO, L),
	//#gpio_174_cs
	LOW_POWER(0x17C, FUNC0, 0x2D4, NOPULL, 21, 6, DO, L),
	//#gpio_175_cs
	LOW_POWER(0x180, FUNC1, 0x2D8, PULLDOWN, 21, 7, DI, L),
};

static struct iocfg_lp iocfg_lookups_u9700l[] = {
	//#gpio_002_cs
	LOW_POWER(0x00, FUNC0, 0x24, NOPULL, 0, 2, DO, L),
	//#gpio_003_cs
	LOW_POWER(0x00, FUNC0, 0x28, NOPULL, 0, 3, DO, L),
	//#gpio_004_cs
	LOW_POWER(0x00, FUNC0, 0x2C, PULLDOWN, 0, 4, DI, L),
	//#gpio_005_cs
	LOW_POWER(0x00, FUNC0, 0x30, PULLUP, 0, 5, DI, L),
	//#gpio_006_cs
	LOW_POWER(0x04, FUNC0, 0x34, NOPULL, 0, 6, DO, L),
	//#gpio_007_cs
	LOW_POWER(0x08, FUNC0, 0x38, PULLDOWN, 0, 7, DI, L),
	//#gpio_008_cs
	LOW_POWER(0x0C, FUNC1, 0x3C, PULLDOWN, 1, 0, DI, L),
	//#gpio_009_cs
	LOW_POWER(0x0C, FUNC1, 0x40, PULLDOWN, 1, 1, DI, L),
	//#gpio_010_cs
	LOW_POWER(0x0C, FUNC1, 0x44, PULLDOWN, 1, 2, DI, L),
	//#gpio_011_cs
	LOW_POWER(0x0C, FUNC1, 0x48, PULLDOWN, 1, 3, DI, L),
	//#gpio_012_cs
	LOW_POWER(0x0C, FUNC1, 0x4C, PULLDOWN, 1, 4, DI, L),
	//#gpio_013_cs
	LOW_POWER(0x10, FUNC1, 0x50, PULLDOWN, 1, 5, DI, L),
	//#gpio_014_cs
	LOW_POWER(0x14, FUNC1, 0x54, PULLDOWN, 1, 6, DI, L),
	//#gpio_015_cs
	LOW_POWER(0x18, FUNC1, 0x58, PULLDOWN, 1, 7, DI, L),
	//#gpio_016_cs
	LOW_POWER(0x1C, FUNC1, 0x5C, PULLDOWN, 2, 0, DI, L),
	//#gpio_017_cs
	LOW_POWER(0x20, FUNC1, 0x60, PULLDOWN, 2, 1, DI, L),
	//#gpio_018_cs
	LOW_POWER(0x20, FUNC1, 0x64, PULLDOWN, 2, 2, DI, L),
	//#gpio_019_cs
	LOW_POWER(0x20, FUNC1, 0x68, PULLDOWN, 2, 3, DI, L),
	//#gpio_020_cs
	LOW_POWER(0x0C, FUNC1, 0x6C, PULLDOWN, 2, 4, DI, L),
	//#gpio_021_cs
	LOW_POWER(0x0C, FUNC1, 0x70, PULLDOWN, 2, 5, DI, L),
	//#gpio_022_cs
	LOW_POWER(0x0C, FUNC1, 0x74, PULLDOWN, 2, 6, DI, L),
	//#gpio_023_cs
	LOW_POWER(0x0C, FUNC1, 0x78, PULLDOWN, 2, 7, DI, L),
	//#gpio_024_cs
	LOW_POWER(0x0C, FUNC1, 0x7C, PULLDOWN, 3, 0, DI, L),
	//#gpio_025_cs
	LOW_POWER(0x0C, FUNC1, 0x80, PULLDOWN, 3, 1, DI, L),
	//#gpio_026_cs
	LOW_POWER(0x0C, FUNC1, 0x84, PULLDOWN, 3, 2, DI, L),
	//#gpio_027_cs
	LOW_POWER(0x0C, FUNC1, 0x88, PULLDOWN, 3, 3, DI, L),
	//#gpio_028_cs
	LOW_POWER(0x2C, FUNC1, 0x8C, PULLDOWN, 3, 4, DI, L),
	//#gpio_029_cs
	LOW_POWER(0x2C, FUNC1, 0x90, PULLDOWN, 3, 5, DI, L),
	//#gpio_030_cs
	LOW_POWER(0x2C, FUNC1, 0x94, PULLDOWN, 3, 6, DI, L),
	//#gpio_031_cs
	LOW_POWER(0x2C, FUNC1, 0x98, PULLDOWN, 3, 7, DI, L),
	//#gpio_032_cs
	LOW_POWER(0x2C, FUNC1, 0x9C, PULLDOWN, 4, 0, DI, L),
	//#gpio_033_cs
	LOW_POWER(0x2C, FUNC1, 0xA0, PULLDOWN, 4, 1, DI, L),
	//#gpio_034_cs
	LOW_POWER(0x2C, FUNC1, 0xA4, PULLDOWN, 4, 2, DI, L),
	//#gpio_035_cs
	LOW_POWER(0x2C, FUNC1, 0xA8, PULLDOWN, 4, 3, DI, L),
	//#gpio_036_cs
	LOW_POWER(0x30, FUNC0, 0xAC, PULLDOWN, 4, 4, DI, L),
	//#gpio_037_cs
	LOW_POWER(0x30, FUNC0, 0xB0, PULLDOWN, 4, 5, DI, L),
	//#gpio_038_cs
	LOW_POWER(0x34, FUNC1, 0xB4, NOPULL, 4, 6, DI, L),
	//#gpio_039_cs
	LOW_POWER(0x34, FUNC1, 0xB8, NOPULL, 4, 7, DI, L),
	//#gpio_040_cs
	LOW_POWER(0x38, FUNC1, 0xBC, PULLDOWN, 5, 0, DI, L),
	//#gpio_041_cs
	LOW_POWER(0x3C, FUNC1, 0xC0, PULLDOWN, 5, 1, DI, L),
	//#gpio_042_cs
	LOW_POWER(0x40, FUNC1, 0xC4, PULLDOWN, 5, 2, DI, L),
	//#gpio_043_cs
	LOW_POWER(0x40, FUNC1, 0xC8, PULLDOWN, 5, 3, DI, L),
	//#gpio_044_cs
	LOW_POWER(0x40, FUNC1, 0xCC, PULLDOWN, 5, 4, DI, L),
	//#gpio_045_cs
	LOW_POWER(0x40, FUNC1, 0xD0, PULLDOWN, 5, 5, DI, L),
	//#gpio_046_cs
	LOW_POWER(0x40, FUNC1, 0xD4, PULLDOWN, 5, 6, DI, L),
	//#gpio_047_cs
	LOW_POWER(0x40, FUNC1, 0xD8, PULLDOWN, 5, 7, DI, L),
	//#gpio_048_cs
	LOW_POWER(0x40, FUNC1, 0xDC, PULLDOWN, 6, 0, DI, L),
	//#gpio_049_cs
	LOW_POWER(0x40, FUNC1, 0xE0, PULLDOWN, 6, 1, DI, L),
	//#gpio_050_cs
	LOW_POWER(0x44, FUNC1, 0xE4, PULLDOWN, 6, 2, DI, L),
	//#gpio_051_cs
	LOW_POWER(0x44, FUNC1, 0xE8, PULLDOWN, 6, 3, DI, L),
	//#gpio_052_cs
	LOW_POWER(0x48, FUNC1, 0xEC, PULLDOWN, 6, 4, DI, L),
	//#gpio_053_cs
	LOW_POWER(0x48, FUNC1, 0xF0, PULLDOWN, 6, 5, DI, L),
	//#gpio_054_cs
	LOW_POWER(0x48, FUNC1, 0xF4, PULLDOWN, 6, 6, DI, L),
	//#gpio_055_cs
	LOW_POWER(0x4C, FUNC1, 0xF8, PULLDOWN, 6, 7, DI, L),
	//#gpio_056_cs
	LOW_POWER(0x4C, FUNC1, 0xFC, PULLDOWN, 7, 0, DI, L),
	//#gpio_057_cs
	LOW_POWER(0x50, FUNC1, 0x100, NOPULL, 7, 1, DI, L),
	//#gpio_058_cs
	LOW_POWER(0x54, FUNC1, 0x104, NOPULL, 7, 2, DI, L),
	//#gpio_059_cs
	LOW_POWER(0x58, FUNC1, 0x108, NOPULL, 7, 3, DO, L),
	//#gpio_060_cs
	LOW_POWER(0x5C, FUNC1, 0x10C, NOPULL, 7, 4, DO, L),
	//#gpio_061_cs
	LOW_POWER(0x60, FUNC1, 0x110, NOPULL, 7, 5, DO, H),
	//#gpio_062_cs
	LOW_POWER(0x64, FUNC1, 0x114, NOPULL, 7, 6, DI, L),
	//#gpio_063_cs
	LOW_POWER(0x68, FUNC1, 0x118, NOPULL, 7, 7, DI, L),
	//#gpio_064_cs
	LOW_POWER(0x6C, FUNC1, 0x11C, NOPULL, 8, 0, DI, L),
	//#gpio_065_cs
	LOW_POWER(0x70, FUNC1, 0x120, NOPULL, 8, 1, DO, L),
	//#gpio_066_cs
	LOW_POWER(0x74, FUNC1, 0x124, NOPULL, 8, 2, DO, L),
	//#gpio_067_cs
	LOW_POWER(0x78, FUNC1, 0x128, NOPULL, 8, 3, DO, L),
	//#gpio_068_cs
	LOW_POWER(0x7C, FUNC1, 0x12C, NOPULL, 8, 4, DO, L),
	//#gpio_069_cs
	LOW_POWER(0x80, FUNC1, 0x130, NOPULL, 8, 5, DO, L),
	//#gpio_070_cs
	LOW_POWER(0x84, FUNC1, 0x134, NOPULL, 8, 6, DO, L),
	//#gpio_071_cs
	LOW_POWER(0x88, FUNC1, 0x138, NOPULL, 8, 7, DO, L),
	//#gpio_072_cs
	LOW_POWER(0x8C, FUNC2, 0x13C, PULLDOWN, 9, 0, DI, L),
	//#gpio_073_cs
	LOW_POWER(0x90, FUNC1, 0x140, NOPULL, 9, 1, DO, L),
	//#gpio_074_cs
	LOW_POWER(0x94, FUNC1, 0x144, NOPULL, 9, 2, DO, H),
	//#gpio_075_cs
	LOW_POWER(0x98, FUNC0, 0x148, NOPULL, 9, 3, DO, L),
	//#gpio_076_cs
	LOW_POWER(0x9C, FUNC1, 0x14C, NOPULL, 9, 4, DO, L),
	//#gpio_077_cs
	LOW_POWER(0xA0, FUNC1, 0x150, PULLDOWN, 9, 5, DI, L),
	//#gpio_078_cs
	LOW_POWER(0xA4, FUNC1, 0x154, NOPULL, 9, 6, DO, L),
	//#gpio_079_cs
	LOW_POWER(0xAC, FUNC1, 0x168, NOPULL, 9, 7, DO, L),
	//#gpio_080_cs
	LOW_POWER(0xAC, FUNC1, 0x16C, PULLUP, 10, 0, DI, L),
	//#gpio_081_cs
	LOW_POWER(0xAC, FUNC1, 0x170, PULLDOWN, 10, 1, DO, H),
	//#gpio_082_cs
	LOW_POWER(0xAC, FUNC0, 0x174, NOPULL, 10, 2, DO, L),
	//#gpio_083_cs
	LOW_POWER(0xB0, FUNC1, 0x178, NOPULL, 10, 3, DI, L),
	//#gpio_084_cs
	LOW_POWER(0xB4, FUNC1, 0x17C, NOPULL, 10, 4, DI, L),
	//#gpio_085_cs
	LOW_POWER(0xB8, FUNC1, 0x180, NOPULL, 10, 5, DI, L),
	//#gpio_086_cs
	LOW_POWER(0xB8, FUNC1, 0x184, NOPULL, 10, 6, DI, L),
	//#gpio_087_cs
	LOW_POWER(0xB8, FUNC1, 0x188, NOPULL, 10, 7, DI, L),
	//#gpio_088_cs
	LOW_POWER(0xBC, FUNC1, 0x18C, PULLDOWN, 11, 0, DI, L),
	//#gpio_089_cs
	LOW_POWER(0xBC, FUNC1, 0x190, PULLDOWN, 11, 1, DI, L),
	//#gpio_090_cs
	LOW_POWER(0xBC, FUNC1, 0x194, PULLDOWN, 11, 2, DI, L),
	//#gpio_091_cs
	LOW_POWER(0xBC, FUNC1, 0x198, PULLDOWN, 11, 3, DI, L),
	//#gpio_092_cs
	LOW_POWER(0xBC, FUNC1, 0x19C, PULLDOWN, 11, 4, DI, L),
	//#gpio_093_cs
	LOW_POWER(0xC0, FUNC1, 0x1A0, PULLDOWN, 11, 5, DI, L),
	//#gpio_094_cs
	LOW_POWER(0xC4, FUNC1, 0x1A4, NOPULL, 11, 6, DI, L),
	//#gpio_095_cs
	LOW_POWER(0xC4, FUNC1, 0x1A8, NOPULL, 11, 7, DO, H),
	//#gpio_096_cs
	LOW_POWER(0xC4, FUNC1, 0x1AC, NOPULL, 12, 0, DO, L),
	//#gpio_097_cs
	LOW_POWER(0xC8, FUNC1, 0x1B0, NOPULL, 12, 1, DO, L),
	//#gpio_098_cs
	LOW_POWER(0xC4, FUNC1, 0x1B4, PULLDOWN, 12, 2, DI, L),
	//#gpio_099_cs
	LOW_POWER(0xC4, FUNC1, 0x1B8, PULLDOWN, 12, 3, DI, L),
	//#gpio_100_cs
	LOW_POWER(0xCC, FUNC1, 0x1BC, PULLDOWN, 12, 4, DI, L),
	//#gpio_101_cs
	LOW_POWER(0xCC, FUNC1, 0x1C0, PULLDOWN, 12, 5, DI, L),
	//#gpio_102_cs
	LOW_POWER(0xCC, FUNC1, 0x1C4, PULLDOWN, 12, 6, DI, L),
	//#gpio_103_cs
	LOW_POWER(0xD0, FUNC1, 0x1C8, PULLDOWN, 12, 7, DI, L),
	//#gpio_104_cs
	LOW_POWER(0xCC, FUNC1, 0x1CC, PULLDOWN, 13, 0, DI, L),
	//#gpio_105_cs
	LOW_POWER(0xCC, FUNC1, 0x1D0, PULLDOWN, 13, 1, DI, L),
	//#gpio_106_cs
	LOW_POWER(0xD4, FUNC1, 0x1D4, NOPULL, 13, 2, DO, L),
	//#gpio_107_cs
	LOW_POWER(0xD4, FUNC1, 0x1D8, PULLDOWN, 13, 3, DI, L),
	//#gpio_108_cs
	LOW_POWER(0xD4, FUNC1, 0x1DC, PULLDOWN, 13, 4, DI, L),
	//#gpio_109_cs
	LOW_POWER(0xD8, FUNC1, 0x1E0, PULLDOWN, 13, 5, DI, L),
	//#gpio_110_cs
	LOW_POWER(0xDC, FUNC1, 0x1E4, PULLDOWN, 13, 6, DI, L),
	//#gpio_111_cs
	LOW_POWER(0xE0, FUNC1, 0x1E8, NOPULL, 13, 7, DI, L),
	//#gpio_112_cs
	LOW_POWER(0xE4, FUNC1, 0x1EC, NOPULL, 14, 0, DI, L),
	//#gpio_113_cs
	LOW_POWER(0xE8, FUNC1, 0x1F0, PULLDOWN, 14, 1, DI, L),
	//#gpio_114_cs
	LOW_POWER(0xE8, FUNC1, 0x1F4, NOPULL, 14, 2, DO, L),
	//#gpio_115_cs
	LOW_POWER(0xE8, FUNC1, 0x1F8, NOPULL, 14, 3, DO, L),
	//#gpio_116_cs
	LOW_POWER(0xEC, FUNC1, 0x1FC, PULLDOWN, 14, 4, DI, L),
	//#gpio_117_cs
	LOW_POWER(0xF0, FUNC1, 0x200, NOPULL, 14, 5, DO, L),
	//#gpio_118_cs
	LOW_POWER(0xF0, FUNC1, 0x204, NOPULL, 14, 6, DO, L),
	//#gpio_119_cs
	LOW_POWER(0xF4, FUNC1, 0x208, PULLDOWN, 14, 7, DI, L),
	//#gpio_120_cs
	LOW_POWER(0xF4, FUNC1, 0x20C, PULLDOWN, 15, 0, DI, L),
	//#gpio_121_cs
	LOW_POWER(0xF8, FUNC1, 0x210, PULLDOWN, 15, 1, DI, L),
	//#gpio_122_cs
	LOW_POWER(0xF8, FUNC1, 0x214, PULLDOWN, 15, 2, DI, L),
	//#gpio_123_cs
	LOW_POWER(0xFC, FUNC1, 0x218, PULLDOWN, 15, 3, DI, L),
	//#gpio_124_cs
	LOW_POWER(0xFC, FUNC1, 0x21C, PULLDOWN, 15, 4, DI, L),
	//#gpio_125_cs
	LOW_POWER(0x100, FUNC1, 0x220, PULLDOWN, 15, 5, DI, L),
	//#gpio_126_cs
	LOW_POWER(0x100, FUNC1, 0x224, RESERVE, 15, 6, DI, L),
	//#gpio_127_cs
	LOW_POWER(0x104, FUNC1, 0x228, PULLDOWN, 15, 7, DO, L),
	//#gpio_128_cs
	LOW_POWER(0x108, FUNC1, 0x22C, NOPULL, 16, 0, DI, H),
	//#gpio_129_cs
	LOW_POWER(0x10C, FUNC1, 0x230, PULLDOWN, 16, 1, DI, L),
	//#gpio_130_cs
	LOW_POWER(0x110, FUNC1, 0x234, PULLDOWN, 16, 2, DI, L),
	//#gpio_131_cs
	LOW_POWER(0x114, FUNC1, 0x238, PULLDOWN, 16, 3, DI, L),
	//#gpio_132_cs
	LOW_POWER(0x118, FUNC1, 0x23C, PULLDOWN, 16, 4, DI, L),
	//#gpio_133_cs
	LOW_POWER(0x11C, FUNC1, 0x240, NOPULL, 16, 5, DO, L),
	//#gpio_134_cs
	LOW_POWER(0x120, FUNC1, 0x244, NOPULL, 16, 6, DI, L),
	//#gpio_135_cs
	LOW_POWER(0x124, FUNC1, 0x248, NOPULL, 16, 7, DI, L),
	//#gpio_136_cs
	LOW_POWER(0x128, FUNC1, 0x24C, NOPULL, 17, 0, DI, L),
	//#gpio_137_cs
	LOW_POWER(0x12C, FUNC1, 0x250, PULLUP, 17, 1, DI, L),
	//#gpio_138_cs
	LOW_POWER(0x130, FUNC1, 0x254, PULLUP, 17, 2, DI, L),
	//#gpio_139_cs
	LOW_POWER(0x134, FUNC1, 0x258, PULLDOWN, 17, 3, DI, L),
	//#gpio_140_cs
	LOW_POWER(0x138, FUNC1, 0x25C, NOPULL, 17, 4, DI, L),
	//#gpio_141_cs
	LOW_POWER(0x13C, FUNC1, 0x260, PULLDOWN, 17, 5, DI, L),
	//#gpio_142_cs
	LOW_POWER(0x140, FUNC1, 0x264, PULLDOWN, 17, 6, DI, L),
	//#gpio_143_cs
	LOW_POWER(0x144, FUNC1, 0x268, PULLUP, 17, 7, DI, L),
	//#gpio_144_cs
	LOW_POWER(0x148, FUNC1, 0x26C, NOPULL, 18, 0, DO, H),
	//#gpio_145_cs
	LOW_POWER(0x14C, FUNC1, 0x270, NOPULL, 18, 1, DO, H),
	//#gpio_146_cs
	LOW_POWER(0x14C, FUNC1, 0x274, NOPULL, 18, 2, DI, L),
	//#gpio_147_cs
	LOW_POWER(0x150, FUNC1, 0x278, PULLDOWN, 18, 3, DI, L),
	//#gpio_148_cs
	LOW_POWER(0x150, FUNC1, 0x27C, PULLDOWN, 18, 4, DI, L),
	//#gpio_149_cs
	LOW_POWER(0x154, FUNC1, 0x280, NOPULL, 18, 5, DO, L),
	//#gpio_150_cs
	LOW_POWER(0x158, FUNC1, 0x284, PULLDOWN, 18, 6, DI, L),
	//#gpio_151_cs
	LOW_POWER(0x15C, FUNC1, 0x288, NOPULL, 18, 7, DO, L),
	//#gpio_152_cs
	LOW_POWER(0x15C, FUNC1, 0x28C, NOPULL, 19, 0, DO, L),
	//#gpio_153_cs
	LOW_POWER(0x15C, FUNC1, 0x290, NOPULL, 19, 1, DO, H),
	//#gpio_154_cs
	LOW_POWER(0x160, FUNC1, 0x294, PULLDOWN, 19, 2, DI, L),
	//#gpio_155_cs
	LOW_POWER(0x160, FUNC1, 0x298, PULLDOWN, 19, 3, DI, L),
	//#gpio_156_cs
	LOW_POWER(0x160, RESERVE, 0x0C, NOPULL, 19, 4, DO, H),
	//#gpio_157_cs
	LOW_POWER(0x160, RESERVE, 0x10, PULLUP, 19, 5, DI, L),
	//#gpio_158_cs
	LOW_POWER(0x160, RESERVE, 0x14, NOPULL, 19, 6, DO, H),
	//#gpio_159_cs
	LOW_POWER(0x160, RESERVE, 0x18, PULLUP, 19, 7, DI, L),
	//#gpio_160_cs
	LOW_POWER(0x164, FUNC1, 0x29C, PULLDOWN, 20, 0, DI, L),
	//#gpio_161_cs
	LOW_POWER(0x164, FUNC1, 0x2A0, PULLDOWN, 20, 1, DI, L),
	//#gpio_162_cs
	LOW_POWER(0x168, FUNC1, 0x2A4, NOPULL, 20, 2, DI, L),
	//#gpio_163_cs
	LOW_POWER(0x168, FUNC1, 0x2A8, NOPULL, 20, 3, DI, L),
	//#gpio_164_cs
	LOW_POWER(0x16C, FUNC1, 0x2AC, NOPULL, 20, 4, DI, L),
	//#gpio_165_cs
	LOW_POWER(0x170, FUNC1, 0x2B0, NOPULL, 20, 5, DI, L),
	//#gpio_166_cs
	LOW_POWER(0x174, FUNC1, 0x2B4, PULLDOWN, 20, 6, DI, L),
	//#gpio_167_cs
	LOW_POWER(0x174, FUNC1, 0x2B8, NOPULL, 20, 7, DO, L),
	//#gpio_168_cs
	LOW_POWER(0x174, FUNC1, 0x2BC, NOPULL, 21, 0, DO, L),
	//#gpio_169_cs
	LOW_POWER(0x174, FUNC1, 0x2C0, NOPULL, 21, 1, DO, L),
	//#gpio_170_cs
	LOW_POWER(0x174, FUNC1, 0x2C4, PULLDOWN, 21, 2, DI, L),
	//#gpio_171_cs
	LOW_POWER(0x178, FUNC1, 0x2C8, NOPULL, 21, 3, DO, L),
	//#gpio_172_cs
	LOW_POWER(0x17C, FUNC1, 0x2CC, NOPULL, 21, 4, DO, L),
	//#gpio_173_cs
	LOW_POWER(0x17C, FUNC1, 0x2D0, NOPULL, 21, 5, DO, L),
	//#gpio_174_cs
	LOW_POWER(0x17C, FUNC1, 0x2D4, NOPULL, 21, 6, DO, L),
	//#gpio_175_cs
	LOW_POWER(0x180, FUNC1, 0x2D8, PULLDOWN, 21, 7, DI, L),
};

static struct iocfg_lp iocfg_lookups_u9900[] = {
	//#gpio_002_cs
	LOW_POWER(0x00, FUNC0, 0x24, NOPULL, 0, 2, DO, L),
	//#gpio_003_cs
	LOW_POWER(0x00, FUNC0, 0x28, NOPULL, 0, 3, DO, L),
	//#gpio_004_cs
	LOW_POWER(0x00, FUNC0, 0x2C, PULLDOWN, 0, 4, DI, L),
	//#gpio_005_cs
	LOW_POWER(0x00, FUNC0, 0x30, PULLUP, 0, 5, DI, L),
	//#gpio_006_cs
	LOW_POWER(0x04, FUNC0, 0x34, NOPULL, 0, 6, DO, L),
	//#gpio_007_cs
	LOW_POWER(0x08, FUNC0, 0x38, PULLDOWN, 0, 7, DI, L),
	//#gpio_008_cs
	LOW_POWER(0x0C, FUNC1, 0x3C, PULLDOWN, 1, 0, DI, L),
	//#gpio_009_cs
	LOW_POWER(0x0C, FUNC1, 0x40, PULLDOWN, 1, 1, DI, L),
	//#gpio_010_cs
	LOW_POWER(0x0C, FUNC1, 0x44, PULLDOWN, 1, 2, DI, L),
	//#gpio_011_cs
	LOW_POWER(0x0C, FUNC1, 0x48, PULLDOWN, 1, 3, DI, L),
	//#gpio_012_cs
	LOW_POWER(0x0C, FUNC1, 0x4C, PULLDOWN, 1, 4, DI, L),
	//#gpio_013_cs
	LOW_POWER(0x10, FUNC1, 0x50, PULLDOWN, 1, 5, DI, L),
	//#gpio_014_cs
	LOW_POWER(0x14, FUNC1, 0x54, PULLDOWN, 1, 6, DI, L),
	//#gpio_015_cs
	LOW_POWER(0x18, FUNC1, 0x58, PULLDOWN, 1, 7, DI, L),
	//#gpio_016_cs
	LOW_POWER(0x1C, FUNC1, 0x5C, PULLDOWN, 2, 0, DI, L),
	//#gpio_017_cs
	LOW_POWER(0x20, FUNC1, 0x60, PULLDOWN, 2, 1, DI, L),
	//#gpio_018_cs
	LOW_POWER(0x20, FUNC1, 0x64, PULLDOWN, 2, 2, DI, L),
	//#gpio_019_cs
	LOW_POWER(0x20, FUNC1, 0x68, PULLDOWN, 2, 3, DI, L),
	//#gpio_020_cs
	LOW_POWER(0x0C, FUNC1, 0x6C, PULLDOWN, 2, 4, DI, L),
	//#gpio_021_cs
	LOW_POWER(0x0C, FUNC1, 0x70, PULLDOWN, 2, 5, DI, L),
	//#gpio_022_cs
	LOW_POWER(0x0C, FUNC1, 0x74, PULLDOWN, 2, 6, DI, L),
	//#gpio_023_cs
	LOW_POWER(0x0C, FUNC1, 0x78, PULLDOWN, 2, 7, DI, L),
	//#gpio_024_cs
	LOW_POWER(0x0C, FUNC1, 0x7C, PULLDOWN, 3, 0, DI, L),
	//#gpio_025_cs
	LOW_POWER(0x0C, FUNC1, 0x80, PULLDOWN, 3, 1, DI, L),
	//#gpio_026_cs
	LOW_POWER(0x0C, FUNC1, 0x84, PULLDOWN, 3, 2, DI, L),
	//#gpio_027_cs
	LOW_POWER(0x0C, FUNC1, 0x88, PULLDOWN, 3, 3, DI, L),
	//#gpio_028_cs
	LOW_POWER(0x2C, FUNC1, 0x8C, PULLDOWN, 3, 4, DI, L),
	//#gpio_029_cs
	LOW_POWER(0x2C, FUNC1, 0x90, PULLDOWN, 3, 5, DI, L),
	//#gpio_030_cs
	LOW_POWER(0x2C, FUNC1, 0x94, PULLDOWN, 3, 6, DI, L),
	//#gpio_031_cs
	LOW_POWER(0x2C, FUNC1, 0x98, PULLDOWN, 3, 7, DI, L),
	//#gpio_032_cs
	LOW_POWER(0x2C, FUNC1, 0x9C, PULLDOWN, 4, 0, DI, L),
	//#gpio_033_cs
	LOW_POWER(0x2C, FUNC1, 0xA0, PULLDOWN, 4, 1, DI, L),
	//#gpio_034_cs
	LOW_POWER(0x2C, FUNC1, 0xA4, PULLDOWN, 4, 2, DI, L),
	//#gpio_035_cs
	LOW_POWER(0x2C, FUNC1, 0xA8, PULLDOWN, 4, 3, DI, L),
	//#gpio_036_cs
	LOW_POWER(0x30, FUNC0, 0xAC, PULLDOWN, 4, 4, DI, L),
	//#gpio_037_cs
	LOW_POWER(0x30, FUNC0, 0xB0, PULLDOWN, 4, 5, DI, L),
	//#gpio_038_cs
	LOW_POWER(0x34, FUNC1, 0xB4, NOPULL, 4, 6, DI, L),
	//#gpio_039_cs
	LOW_POWER(0x34, FUNC1, 0xB8, NOPULL, 4, 7, DI, L),
	//#gpio_040_cs
	LOW_POWER(0x38, FUNC1, 0xBC, PULLDOWN, 5, 0, DI, L),
	//#gpio_041_cs
	LOW_POWER(0x3C, FUNC1, 0xC0, PULLDOWN, 5, 1, DI, L),
	//#gpio_042_cs
	LOW_POWER(0x40, FUNC1, 0xC4, PULLDOWN, 5, 2, DI, L),
	//#gpio_043_cs
	LOW_POWER(0x40, FUNC1, 0xC8, PULLDOWN, 5, 3, DI, L),
	//#gpio_044_cs
	LOW_POWER(0x40, FUNC1, 0xCC, PULLDOWN, 5, 4, DI, L),
	//#gpio_045_cs
	LOW_POWER(0x40, FUNC1, 0xD0, PULLDOWN, 5, 5, DI, L),
	//#gpio_046_cs
	LOW_POWER(0x40, FUNC1, 0xD4, PULLDOWN, 5, 6, DI, L),
	//#gpio_047_cs
	LOW_POWER(0x40, FUNC1, 0xD8, PULLDOWN, 5, 7, DI, L),
	//#gpio_048_cs
	LOW_POWER(0x40, FUNC1, 0xDC, PULLDOWN, 6, 0, DI, L),
	//#gpio_049_cs
	LOW_POWER(0x40, FUNC1, 0xE0, PULLDOWN, 6, 1, DI, L),
	//#gpio_050_cs
	LOW_POWER(0x44, FUNC1, 0xE4, PULLDOWN, 6, 2, DI, L),
	//#gpio_051_cs
	LOW_POWER(0x44, FUNC1, 0xE8, PULLDOWN, 6, 3, DI, L),
	//#gpio_052_cs
	LOW_POWER(0x48, FUNC1, 0xEC, PULLDOWN, 6, 4, DI, L),
	//#gpio_053_cs
	LOW_POWER(0x48, FUNC1, 0xF0, PULLDOWN, 6, 5, DI, L),
	//#gpio_054_cs
	LOW_POWER(0x48, FUNC1, 0xF4, PULLDOWN, 6, 6, DI, L),
	//#gpio_055_cs
	LOW_POWER(0x4C, FUNC1, 0xF8, PULLDOWN, 6, 7, DI, L),
	//#gpio_056_cs
	LOW_POWER(0x4C, FUNC1, 0xFC, PULLDOWN, 7, 0, DI, L),
	//#gpio_057_cs
	LOW_POWER(0x50, FUNC1, 0x100, NOPULL, 7, 1, DI, L),
	//#gpio_058_cs
	LOW_POWER(0x54, FUNC1, 0x104, NOPULL, 7, 2, DI, L),
	//#gpio_059_cs
	LOW_POWER(0x58, FUNC1, 0x108, NOPULL, 7, 3, DO, L),
	//#gpio_060_cs
	LOW_POWER(0x5C, FUNC1, 0x10C, NOPULL, 7, 4, DO, L),
	//#gpio_061_cs
	LOW_POWER(0x60, FUNC1, 0x110, NOPULL, 7, 5, DO, H),
	//#gpio_062_cs
	LOW_POWER(0x64, FUNC1, 0x114, NOPULL, 7, 6, DI, L),
	//#gpio_063_cs
	LOW_POWER(0x68, FUNC1, 0x118, NOPULL, 7, 7, DI, L),
	//#gpio_064_cs
	LOW_POWER(0x6C, FUNC1, 0x11C, NOPULL, 8, 0, DI, L),
	//#gpio_065_cs
	LOW_POWER(0x70, FUNC1, 0x120, NOPULL, 8, 1, DO, L),
	//#gpio_066_cs
	LOW_POWER(0x74, FUNC1, 0x124, NOPULL, 8, 2, DO, L),
	//#gpio_067_cs
	LOW_POWER(0x78, FUNC1, 0x128, NOPULL, 8, 3, DO, L),
	//#gpio_068_cs
	LOW_POWER(0x7C, FUNC1, 0x12C, NOPULL, 8, 4, DO, L),
	//#gpio_069_cs
	LOW_POWER(0x80, FUNC1, 0x130, NOPULL, 8, 5, DO, L),
	//#gpio_070_cs
	LOW_POWER(0x84, FUNC1, 0x134, NOPULL, 8, 6, DO, L),
	//#gpio_071_cs
	LOW_POWER(0x88, FUNC1, 0x138, NOPULL, 8, 7, DO, L),
	//#gpio_072_cs
	LOW_POWER(0x8C, FUNC2, 0x13C, PULLDOWN, 9, 0, DI, L),
	//#gpio_073_cs
	LOW_POWER(0x90, FUNC1, 0x140, NOPULL, 9, 1, DO, L),
	//#gpio_074_cs
	LOW_POWER(0x94, FUNC1, 0x144, NOPULL, 9, 2, DO, H),
	//#gpio_075_cs
	LOW_POWER(0x98, FUNC0, 0x148, NOPULL, 9, 3, DO, L),
	//#gpio_076_cs
	LOW_POWER(0x9C, FUNC1, 0x14C, NOPULL, 9, 4, DO, L),
	//#gpio_077_cs
	LOW_POWER(0xA0, FUNC1, 0x150, PULLDOWN, 9, 5, DI, L),
	//#gpio_078_cs
	LOW_POWER(0xA4, FUNC1, 0x154, NOPULL, 9, 6, DO, L),
	//#gpio_079_cs
	LOW_POWER(0xAC, FUNC1, 0x168, NOPULL, 9, 7, DO, L),
	//#gpio_080_cs
	LOW_POWER(0xAC, FUNC1, 0x16C, PULLUP, 10, 0, DI, L),
	//#gpio_081_cs
	LOW_POWER(0xAC, FUNC1, 0x170, PULLDOWN, 10, 1, DO, H),
	//#gpio_082_cs
	LOW_POWER(0xAC, FUNC0, 0x174, NOPULL, 10, 2, DO, L),
	//#gpio_083_cs
	LOW_POWER(0xB0, FUNC1, 0x178, NOPULL, 10, 3, DI, L),
	//#gpio_084_cs
	LOW_POWER(0xB4, FUNC1, 0x17C, NOPULL, 10, 4, DI, L),
	//#gpio_085_cs
	LOW_POWER(0xB8, FUNC1, 0x180, NOPULL, 10, 5, DI, L),
	//#gpio_086_cs
	LOW_POWER(0xB8, FUNC1, 0x184, NOPULL, 10, 6, DI, L),
	//#gpio_087_cs
	LOW_POWER(0xB8, FUNC1, 0x188, NOPULL, 10, 7, DI, L),
	//#gpio_088_cs
	LOW_POWER(0xBC, FUNC1, 0x18C, PULLDOWN, 11, 0, DI, L),
	//#gpio_089_cs
	LOW_POWER(0xBC, FUNC1, 0x190, PULLDOWN, 11, 1, DI, L),
	//#gpio_090_cs
	LOW_POWER(0xBC, FUNC1, 0x194, PULLDOWN, 11, 2, DI, L),
	//#gpio_091_cs
	LOW_POWER(0xBC, FUNC1, 0x198, PULLDOWN, 11, 3, DI, L),
	//#gpio_092_cs
	LOW_POWER(0xBC, FUNC1, 0x19C, PULLDOWN, 11, 4, DI, L),
	//#gpio_093_cs
	LOW_POWER(0xC0, FUNC1, 0x1A0, PULLDOWN, 11, 5, DI, L),
	//#gpio_094_cs
	LOW_POWER(0xC4, FUNC1, 0x1A4, NOPULL, 11, 6, DI, L),
	//#gpio_095_cs
	LOW_POWER(0xC4, FUNC1, 0x1A8, NOPULL, 11, 7, DO, H),
	//#gpio_096_cs
	LOW_POWER(0xC4, FUNC1, 0x1AC, NOPULL, 12, 0, DO, L),
	//#gpio_097_cs
	LOW_POWER(0xC8, FUNC1, 0x1B0, NOPULL, 12, 1, DO, L),
	//#gpio_098_cs
	LOW_POWER(0xC4, FUNC1, 0x1B4, PULLDOWN, 12, 2, DI, L),
	//#gpio_099_cs
	LOW_POWER(0xC4, FUNC1, 0x1B8, PULLDOWN, 12, 3, DI, L),
	//#gpio_100_cs
	LOW_POWER(0xCC, FUNC1, 0x1BC, PULLDOWN, 12, 4, DI, L),
	//#gpio_101_cs
	LOW_POWER(0xCC, FUNC1, 0x1C0, PULLDOWN, 12, 5, DI, L),
	//#gpio_102_cs
	LOW_POWER(0xCC, FUNC1, 0x1C4, PULLDOWN, 12, 6, DI, L),
	//#gpio_103_cs
	LOW_POWER(0xD0, FUNC1, 0x1C8, PULLDOWN, 12, 7, DI, L),
	//#gpio_104_cs
	LOW_POWER(0xCC, FUNC1, 0x1CC, PULLDOWN, 13, 0, DI, L),
	//#gpio_105_cs
	LOW_POWER(0xCC, FUNC1, 0x1D0, PULLDOWN, 13, 1, DI, L),
	//#gpio_106_cs
	LOW_POWER(0xD4, FUNC1, 0x1D4, NOPULL, 13, 2, DO, L),
	//#gpio_107_cs
	LOW_POWER(0xD4, FUNC1, 0x1D8, PULLDOWN, 13, 3, DI, L),
	//#gpio_108_cs
	LOW_POWER(0xD4, FUNC1, 0x1DC, PULLDOWN, 13, 4, DI, L),
	//#gpio_109_cs
	LOW_POWER(0xD8, FUNC1, 0x1E0, PULLDOWN, 13, 5, DI, L),
	//#gpio_110_cs
	LOW_POWER(0xDC, FUNC1, 0x1E4, PULLDOWN, 13, 6, DI, L),
	//#gpio_111_cs
	LOW_POWER(0xE0, FUNC1, 0x1E8, NOPULL, 13, 7, DI, L),
	//#gpio_112_cs
	LOW_POWER(0xE4, FUNC1, 0x1EC, NOPULL, 14, 0, DI, L),
	//#gpio_113_cs
	LOW_POWER(0xE8, FUNC1, 0x1F0, PULLDOWN, 14, 1, DI, L),
	//#gpio_114_cs
	LOW_POWER(0xE8, FUNC1, 0x1F4, NOPULL, 14, 2, DO, L),
	//#gpio_115_cs
	LOW_POWER(0xE8, FUNC1, 0x1F8, NOPULL, 14, 3, DO, L),
	//#gpio_116_cs
	LOW_POWER(0xEC, FUNC1, 0x1FC, PULLDOWN, 14, 4, DI, L),
	//#gpio_117_cs
	LOW_POWER(0xF0, FUNC1, 0x200, NOPULL, 14, 5, DO, L),
	//#gpio_118_cs
	LOW_POWER(0xF0, FUNC1, 0x204, NOPULL, 14, 6, DO, L),
	//#gpio_119_cs
	LOW_POWER(0xF4, FUNC1, 0x208, PULLDOWN, 14, 7, DI, L),
	//#gpio_120_cs
	LOW_POWER(0xF4, FUNC1, 0x20C, PULLDOWN, 15, 0, DI, L),
	//#gpio_121_cs
	LOW_POWER(0xF8, FUNC1, 0x210, PULLDOWN, 15, 1, DI, L),
	//#gpio_122_cs
	LOW_POWER(0xF8, FUNC1, 0x214, PULLDOWN, 15, 2, DI, L),
	//#gpio_123_cs
	LOW_POWER(0xFC, FUNC1, 0x218, PULLDOWN, 15, 3, DI, L),
	//#gpio_124_cs
	LOW_POWER(0xFC, FUNC1, 0x21C, PULLDOWN, 15, 4, DI, L),
	//#gpio_125_cs
	LOW_POWER(0x100, FUNC1, 0x220, PULLDOWN, 15, 5, DI, L),
	//#gpio_126_cs
	LOW_POWER(0x100, FUNC1, 0x224, RESERVE, 15, 6, DI, L),
	//#gpio_127_cs
	LOW_POWER(0x104, FUNC1, 0x228, PULLDOWN, 15, 7, DO, L),
	//#gpio_128_cs
	LOW_POWER(0x108, FUNC1, 0x22C, NOPULL, 16, 0, DI, H),
	//#gpio_129_cs
	LOW_POWER(0x10C, FUNC1, 0x230, PULLDOWN, 16, 1, DI, L),
	//#gpio_130_cs
	LOW_POWER(0x110, FUNC1, 0x234, PULLDOWN, 16, 2, DI, L),
	//#gpio_131_cs
	LOW_POWER(0x114, FUNC1, 0x238, PULLDOWN, 16, 3, DI, L),
	//#gpio_132_cs
	LOW_POWER(0x118, FUNC1, 0x23C, PULLDOWN, 16, 4, DI, L),
	//#gpio_133_cs
	LOW_POWER(0x11C, FUNC1, 0x240, NOPULL, 16, 5, DO, L),
	//#gpio_134_cs
	LOW_POWER(0x120, FUNC1, 0x244, NOPULL, 16, 6, DO, L),
	//#gpio_135_cs
	LOW_POWER(0x124, FUNC1, 0x248, NOPULL, 16, 7, DI, L),
	//#gpio_136_cs
	LOW_POWER(0x128, FUNC1, 0x24C, NOPULL, 17, 0, DI, L),
	//#gpio_137_cs
	LOW_POWER(0x12C, FUNC1, 0x250, PULLUP, 17, 1, DI, L),
	//#gpio_138_cs
	LOW_POWER(0x130, FUNC1, 0x254, PULLUP, 17, 2, DI, L),
	//#gpio_139_cs
	LOW_POWER(0x134, FUNC1, 0x258, PULLDOWN, 17, 3, DI, L),
	//#gpio_140_cs
	LOW_POWER(0x138, FUNC1, 0x25C, PULLDOWN, 17, 4, DI, L),
	//#gpio_141_cs
	LOW_POWER(0x13C, FUNC1, 0x260, PULLDOWN, 17, 5, DI, L),
	//#gpio_142_cs
	LOW_POWER(0x140, FUNC1, 0x264, PULLDOWN, 17, 6, DI, L),
	//#gpio_143_cs
	LOW_POWER(0x144, FUNC1, 0x268, PULLUP, 17, 7, DI, L),
	//#gpio_144_cs
	LOW_POWER(0x148, FUNC1, 0x26C, NOPULL, 18, 0, DO, H),
	//#gpio_145_cs
	LOW_POWER(0x14C, FUNC1, 0x270, NOPULL, 18, 1, DO, H),
	//#gpio_146_cs
	LOW_POWER(0x14C, FUNC1, 0x274, NOPULL, 18, 2, DI, L),
	//#gpio_147_cs
	LOW_POWER(0x150, FUNC1, 0x278, PULLDOWN, 18, 3, DI, L),
	//#gpio_148_cs
	LOW_POWER(0x150, FUNC1, 0x27C, PULLDOWN, 18, 4, DI, L),
	//#gpio_149_cs
	LOW_POWER(0x154, FUNC1, 0x280, NOPULL, 18, 5, DO, L),
	//#gpio_150_cs
	LOW_POWER(0x158, FUNC1, 0x284, PULLDOWN, 18, 6, DI, L),
	//#gpio_151_cs
	LOW_POWER(0x15C, FUNC1, 0x288, NOPULL, 18, 7, DO, L),
	//#gpio_152_cs
	LOW_POWER(0x15C, FUNC1, 0x28C, NOPULL, 19, 0, DO, L),
	//#gpio_153_cs
	LOW_POWER(0x15C, FUNC1, 0x290, NOPULL, 19, 1, DO, H),
	//#gpio_154_cs
	LOW_POWER(0x160, FUNC1, 0x294, PULLDOWN, 19, 2, DI, L),
	//#gpio_155_cs
	LOW_POWER(0x160, FUNC1, 0x298, PULLDOWN, 19, 3, DI, L),
	//#gpio_156_cs
	LOW_POWER(0x160, RESERVE, 0x0C, NOPULL, 19, 4, DO, H),
	//#gpio_157_cs
	LOW_POWER(0x160, RESERVE, 0x10, PULLUP, 19, 5, DI, L),
	//#gpio_158_cs
	LOW_POWER(0x160, RESERVE, 0x14, NOPULL, 19, 6, DO, H),
	//#gpio_159_cs
	LOW_POWER(0x160, RESERVE, 0x18, PULLUP, 19, 7, DI, L),
	//#gpio_160_cs
	LOW_POWER(0x164, FUNC1, 0x29C, PULLDOWN, 20, 0, DI, L),
	//#gpio_161_cs
	LOW_POWER(0x164, FUNC1, 0x2A0, PULLDOWN, 20, 1, DI, L),
	//#gpio_162_cs
	LOW_POWER(0x168, FUNC1, 0x2A4, NOPULL, 20, 2, DI, L),
	//#gpio_163_cs
	LOW_POWER(0x168, FUNC1, 0x2A8, NOPULL, 20, 3, DI, L),
	//#gpio_164_cs
	LOW_POWER(0x16C, FUNC1, 0x2AC, NOPULL, 20, 4, DI, L),
	//#gpio_165_cs
	LOW_POWER(0x170, FUNC1, 0x2B0, NOPULL, 20, 5, DI, L),
	//#gpio_166_cs
	LOW_POWER(0x174, FUNC1, 0x2B4, PULLDOWN, 20, 6, DI, L),
	//#gpio_167_cs
	LOW_POWER(0x174, FUNC1, 0x2B8, NOPULL, 20, 7, DO, L),
	//#gpio_168_cs
	LOW_POWER(0x174, FUNC1, 0x2BC, NOPULL, 21, 0, DO, L),
	//#gpio_169_cs
	LOW_POWER(0x174, FUNC1, 0x2C0, NOPULL, 21, 1, DO, L),
	//#gpio_170_cs
	LOW_POWER(0x174, FUNC1, 0x2C4, PULLDOWN, 21, 2, DI, L),
	//#gpio_171_cs
	LOW_POWER(0x178, FUNC1, 0x2C8, NOPULL, 21, 3, DO, L),
	//#gpio_172_cs
	LOW_POWER(0x17C, FUNC1, 0x2CC, NOPULL, 21, 4, DO, L),
	//#gpio_173_cs
	LOW_POWER(0x17C, FUNC1, 0x2D0, NOPULL, 21, 5, DO, L),
	//#gpio_174_cs
	LOW_POWER(0x17C, FUNC1, 0x2D4, NOPULL, 21, 6, DO, L),
	//#gpio_175_cs
	LOW_POWER(0x180, FUNC1, 0x2D8, PULLDOWN, 21, 7, DI, L),
};

static struct iocfg_lp iocfg_lookups_u9701l[] = {
	//#gpio_002_cs
	LOW_POWER(0x00, FUNC0, 0x24, NOPULL, 0, 2, DO, L),
	//#gpio_003_cs
	LOW_POWER(0x00, FUNC0, 0x28, PULLDOWN, 0, 3, DO, L),
	//#gpio_004_cs
	LOW_POWER(0x00, FUNC0, 0x2C, PULLDOWN, 0, 4, DI, L),
	//#gpio_005_cs
	LOW_POWER(0x00, FUNC0, 0x30, PULLUP, 0, 5, DI, L),
	//#gpio_006_cs
	LOW_POWER(0x04, FUNC0, 0x34, NOPULL, 0, 6, DO, L),
	//#gpio_007_cs
	LOW_POWER(0x08, FUNC0, 0x38, PULLDOWN, 0, 7, DI, L),
	//#gpio_008_cs
	LOW_POWER(0x0C, FUNC1, 0x3C, PULLDOWN, 1, 0, DI, L),
	//#gpio_009_cs
	LOW_POWER(0x0C, FUNC1, 0x40, PULLDOWN, 1, 1, DI, L),
	//#gpio_010_cs
	LOW_POWER(0x0C, FUNC1, 0x44, PULLDOWN, 1, 2, DI, L),
	//#gpio_011_cs
	LOW_POWER(0x0C, FUNC1, 0x48, PULLDOWN, 1, 3, DI, L),
	//#gpio_012_cs
	LOW_POWER(0x0C, FUNC1, 0x4C, PULLDOWN, 1, 4, DI, L),
	//#gpio_013_cs
	LOW_POWER(0x10, FUNC1, 0x50, PULLDOWN, 1, 5, DI, L),
	//#gpio_014_cs
	LOW_POWER(0x14, FUNC1, 0x54, PULLDOWN, 1, 6, DI, L),
	//#gpio_015_cs
	LOW_POWER(0x18, FUNC1, 0x58, PULLDOWN, 1, 7, DI, L),
	//#gpio_016_cs
	LOW_POWER(0x1C, FUNC1, 0x5C, PULLDOWN, 2, 0, DI, L),
	//#gpio_017_cs
	LOW_POWER(0x20, FUNC1, 0x60, PULLDOWN, 2, 1, DI, L),
	//#gpio_018_cs
	LOW_POWER(0x20, FUNC1, 0x64, PULLDOWN, 2, 2, DI, L),
	//#gpio_019_cs
	LOW_POWER(0x20, FUNC1, 0x68, PULLDOWN, 2, 3, DI, L),
	//#gpio_020_cs
	LOW_POWER(0x0C, FUNC1, 0x6C, PULLDOWN, 2, 4, DI, L),
	//#gpio_021_cs
	LOW_POWER(0x0C, FUNC1, 0x70, PULLDOWN, 2, 5, DI, L),
	//#gpio_022_cs
	LOW_POWER(0x0C, FUNC1, 0x74, PULLDOWN, 2, 6, DI, L),
	//#gpio_023_cs
	LOW_POWER(0x0C, FUNC1, 0x78, PULLDOWN, 2, 7, DI, L),
	//#gpio_024_cs
	LOW_POWER(0x0C, FUNC1, 0x7C, PULLDOWN, 3, 0, DI, L),
	//#gpio_025_cs
	LOW_POWER(0x0C, FUNC1, 0x80, PULLDOWN, 3, 1, DI, L),
	//#gpio_026_cs
	LOW_POWER(0x0C, FUNC1, 0x84, PULLDOWN, 3, 2, DI, L),
	//#gpio_027_cs
	LOW_POWER(0x0C, FUNC1, 0x88, PULLDOWN, 3, 3, DI, L),
	//#gpio_028_cs
	LOW_POWER(0x2C, FUNC1, 0x8C, PULLDOWN, 3, 4, DI, L),
	//#gpio_029_cs
	LOW_POWER(0x2C, FUNC1, 0x90, PULLDOWN, 3, 5, DI, L),
	//#gpio_030_cs
	LOW_POWER(0x2C, FUNC1, 0x94, PULLDOWN, 3, 6, DI, L),
	//#gpio_031_cs
	LOW_POWER(0x2C, FUNC1, 0x98, PULLDOWN, 3, 7, DI, L),
	//#gpio_032_cs
	LOW_POWER(0x2C, FUNC1, 0x9C, PULLDOWN, 4, 0, DI, L),
	//#gpio_033_cs
	LOW_POWER(0x2C, FUNC1, 0xA0, PULLDOWN, 4, 1, DI, L),
	//#gpio_034_cs
	LOW_POWER(0x2C, FUNC1, 0xA4, PULLDOWN, 4, 2, DI, L),
	//#gpio_035_cs
	LOW_POWER(0x2C, FUNC1, 0xA8, PULLDOWN, 4, 3, DI, L),
	//#gpio_036_cs
	LOW_POWER(0x30, FUNC0, 0xAC, PULLDOWN, 4, 4, DI, L),
	//#gpio_037_cs
	LOW_POWER(0x30, FUNC0, 0xB0, PULLDOWN, 4, 5, DI, L),
	//#gpio_038_cs
	LOW_POWER(0x34, FUNC1, 0xB4, NOPULL, 4, 6, DI, L),
	//#gpio_039_cs
	LOW_POWER(0x34, FUNC1, 0xB8, NOPULL, 4, 7, DI, L),
	//#gpio_040_cs
	LOW_POWER(0x38, FUNC1, 0xBC, PULLDOWN, 5, 0, DI, L),
	//#gpio_041_cs
	LOW_POWER(0x3C, FUNC1, 0xC0, NOPULL, 5, 1, DI, L),
	//#gpio_042_cs
	LOW_POWER(0x40, FUNC1, 0xC4, PULLDOWN, 5, 2, DI, L),
	//#gpio_043_cs
	LOW_POWER(0x40, FUNC1, 0xC8, PULLDOWN, 5, 3, DI, L),
	//#gpio_044_cs
	LOW_POWER(0x40, FUNC1, 0xCC, NOPULL, 5, 4, DI, L),
	//#gpio_045_cs
	LOW_POWER(0x40, FUNC1, 0xD0, NOPULL, 5, 5, DI, L),
	//#gpio_046_cs
	LOW_POWER(0x40, FUNC1, 0xD4, NOPULL, 5, 6, DI, L),
	//#gpio_047_cs
	LOW_POWER(0x40, FUNC1, 0xD8, PULLDOWN, 5, 7, DI, L),
	//#gpio_048_cs
	LOW_POWER(0x40, FUNC1, 0xDC, PULLDOWN, 6, 0, DI, L),
	//#gpio_049_cs
	LOW_POWER(0x40, FUNC1, 0xE0, PULLDOWN, 6, 1, DI, L),
	//#gpio_050_cs
	LOW_POWER(0x44, FUNC1, 0xE4, PULLUP, 6, 2, DI, L),
	//#gpio_051_cs
	LOW_POWER(0x44, FUNC1, 0xE8, PULLDOWN, 6, 3, DI, L),
	//#gpio_052_cs
	LOW_POWER(0x48, FUNC1, 0xEC, PULLDOWN, 6, 4, DI, L),
	//#gpio_053_cs
	LOW_POWER(0x48, FUNC1, 0xF0, PULLDOWN, 6, 5, DI, L),
	//#gpio_054_cs
	LOW_POWER(0x48, FUNC1, 0xF4, PULLDOWN, 6, 6, DI, L),
	//#gpio_055_cs
	LOW_POWER(0x4C, FUNC1, 0xF8, PULLDOWN, 6, 7, DI, L),
	//#gpio_056_cs
	LOW_POWER(0x4C, FUNC1, 0xFC, PULLDOWN, 7, 0, DI, L),
	//#gpio_057_cs
	LOW_POWER(0x50, FUNC1, 0x100, NOPULL, 7, 1, DI, L),
	//#gpio_058_cs
	LOW_POWER(0x54, FUNC1, 0x104, NOPULL, 7, 2, DI, L),
	//#gpio_059_cs
	LOW_POWER(0x58, FUNC1, 0x108, NOPULL, 7, 3, DI, L),
	//#gpio_060_cs
	LOW_POWER(0x5C, FUNC1, 0x10C, NOPULL, 7, 4, DI, L),
	//#gpio_061_cs
	LOW_POWER(0x60, FUNC1, 0x110, NOPULL, 7, 5, DI, L),
	//#gpio_062_cs
	LOW_POWER(0x64, FUNC1, 0x114, NOPULL, 7, 6, DI, L),
	//#gpio_063_cs
	LOW_POWER(0x68, FUNC1, 0x118, NOPULL, 7, 7, DI, L),
	//#gpio_064_cs
	LOW_POWER(0x6C, FUNC1, 0x11C, NOPULL, 8, 0, DI, L),
	//#gpio_065_cs
	LOW_POWER(0x70, FUNC1, 0x120, NOPULL, 8, 1, DI, L),
	//#gpio_066_cs
	LOW_POWER(0x74, FUNC1, 0x124, NOPULL, 8, 2, DI, L),
	//#gpio_067_cs
	LOW_POWER(0x78, FUNC1, 0x128, NOPULL, 8, 3, DI, L),
	//#gpio_068_cs
	LOW_POWER(0x7C, FUNC1, 0x12C, NOPULL, 8, 4, DI, L),
	//#gpio_069_cs
	LOW_POWER(0x80, FUNC1, 0x130, NOPULL, 8, 5, DI, L),
	//#gpio_070_cs
	LOW_POWER(0x84, FUNC1, 0x134, NOPULL, 8, 6, DI, L),
	//#gpio_071_cs
	LOW_POWER(0x88, FUNC1, 0x138, NOPULL, 8, 7, DI, L),
	//#gpio_072_cs
	LOW_POWER(0x8C, FUNC2, 0x13C, PULLDOWN, 9, 0, DI, L),
	//#gpio_073_cs
	LOW_POWER(0x90, FUNC1, 0x140, NOPULL, 9, 1, DI, L),
	//#gpio_074_cs
	LOW_POWER(0x94, FUNC1, 0x144, NOPULL, 9, 2, DI, H),
	//#gpio_075_cs
	LOW_POWER(0x98, FUNC0, 0x148, NOPULL, 9, 3, DO, L),
	//#gpio_076_cs
	LOW_POWER(0x9C, FUNC1, 0x14C, NOPULL, 9, 4, DO, L),
	//#gpio_077_cs
	LOW_POWER(0xA0, FUNC1, 0x150, PULLDOWN, 9, 5, DI, L),
	//#gpio_078_cs
	LOW_POWER(0xA4, FUNC1, 0x154, PULLDOWN, 9, 6, DI, L),
	//#gpio_079_cs
	LOW_POWER(0xAC, FUNC0, 0x168, PULLDOWN, 9, 7, DI, L),
	//#gpio_080_cs
	LOW_POWER(0xAC, FUNC0, 0x16C, PULLUP, 10, 0, DI, L),
	//#gpio_081_cs
	LOW_POWER(0xAC, FUNC0, 0x170, NOPULL, 10, 1, DO, H),
	//#gpio_082_cs
	LOW_POWER(0xAC, FUNC0, 0x174, PULLDOWN, 10, 2, DO, L),
	//#gpio_083_cs
	LOW_POWER(0xB0, FUNC1, 0x178, NOPULL, 10, 3, DI, L),
	//#gpio_084_cs
	LOW_POWER(0xB4, FUNC1, 0x17C, NOPULL, 10, 4, DI, L),
	//#gpio_085_cs
	LOW_POWER(0xB8, FUNC1, 0x180, NOPULL, 10, 5, DI, L),
	//#gpio_086_cs
	LOW_POWER(0xB8, FUNC1, 0x184, NOPULL, 10, 6, DI, L),
	//#gpio_087_cs
	LOW_POWER(0xB8, FUNC1, 0x188, NOPULL, 10, 7, DI, L),
	//#gpio_088_cs
	LOW_POWER(0xBC, FUNC1, 0x18C, PULLDOWN, 11, 0, DI, L),
	//#gpio_089_cs
	LOW_POWER(0xBC, FUNC1, 0x190, PULLDOWN, 11, 1, DI, L),
	//#gpio_090_cs
	LOW_POWER(0xBC, FUNC1, 0x194, PULLDOWN, 11, 2, DI, L),
	//#gpio_091_cs
	LOW_POWER(0xBC, FUNC1, 0x198, PULLDOWN, 11, 3, DI, L),
	//#gpio_092_cs
	LOW_POWER(0xBC, FUNC1, 0x19C, PULLDOWN, 11, 4, DI, L),
	//#gpio_093_cs
	LOW_POWER(0xC0, FUNC1, 0x1A0, PULLDOWN, 11, 5, DI, L),
	//#gpio_094_cs
	LOW_POWER(0xC4, FUNC1, 0x1A4, NOPULL, 11, 6, DI, L),
	//#gpio_095_cs
	LOW_POWER(0xC4, FUNC1, 0x1A8, PULLDOWN, 11, 7, DI, L),
	//#gpio_096_cs
	LOW_POWER(0xC4, FUNC1, 0x1AC, NOPULL, 12, 0, DO, H),
	//#gpio_097_cs
	LOW_POWER(0xC8, FUNC1, 0x1B0, NOPULL, 12, 1, DI, L),
	//#gpio_098_cs
	LOW_POWER(0xC4, FUNC1, 0x1B4, NOPULL, 12, 2, DI, L),
	//#gpio_099_cs
	LOW_POWER(0xC4, FUNC1, 0x1B8, PULLDOWN, 12, 3, DI, L),
	//#gpio_100_cs
	LOW_POWER(0xCC, FUNC1, 0x1BC, PULLDOWN, 12, 4, DI, L),
	//#gpio_101_cs
	LOW_POWER(0xCC, FUNC1, 0x1C0, PULLDOWN, 12, 5, DI, L),
	//#gpio_102_cs
	LOW_POWER(0xCC, FUNC1, 0x1C4, PULLDOWN, 12, 6, DI, L),
	//#gpio_103_cs
	LOW_POWER(0xD0, FUNC1, 0x1C8, NOPULL, 12, 7, DI, L),
	//#gpio_104_cs
	LOW_POWER(0xCC, FUNC1, 0x1CC, PULLDOWN, 13, 0, DI, L),
	//#gpio_105_cs
	LOW_POWER(0xCC, FUNC1, 0x1D0, PULLDOWN, 13, 1, DI, L),
	//#gpio_106_cs
	LOW_POWER(0xD4, FUNC1, 0x1D4, NOPULL, 13, 2, DI, L),
	//#gpio_107_cs
	LOW_POWER(0xD4, FUNC1, 0x1D8, PULLDOWN, 13, 3, DI, L),
	//#gpio_108_cs
	LOW_POWER(0xD4, FUNC1, 0x1DC, PULLDOWN, 13, 4, DI, L),
	//#gpio_109_cs
	LOW_POWER(0xD8, FUNC1, 0x1E0, PULLDOWN, 13, 5, DI, L),
	//#gpio_110_cs
	LOW_POWER(0xDC, FUNC1, 0x1E4, NOPULL, 13, 6, DI, L),
	//#gpio_111_cs
	LOW_POWER(0xE0, FUNC1, 0x1E8, NOPULL, 13, 7, DI, L),
	//#gpio_112_cs
	LOW_POWER(0xE4, FUNC1, 0x1EC, NOPULL, 14, 0, DI, L),
	//#gpio_113_cs
	LOW_POWER(0xE8, FUNC1, 0x1F0, NOPULL, 14, 1, DI, L),
	//#gpio_114_cs
	LOW_POWER(0xE8, FUNC1, 0x1F4, NOPULL, 14, 2, DO, L),
	//#gpio_115_cs
	LOW_POWER(0xE8, FUNC1, 0x1F8, NOPULL, 14, 3, DO, L),
	//#gpio_116_cs
	LOW_POWER(0xEC, FUNC1, 0x1FC, NOPULL, 14, 4, DO, L),
	//#gpio_117_cs
	LOW_POWER(0xF0, FUNC1, 0x200, PULLDOWN, 14, 5, DI, L),
	//#gpio_118_cs
	LOW_POWER(0xF0, FUNC1, 0x204, PULLDOWN, 14, 6, DI, L),
	//#gpio_119_cs
	LOW_POWER(0xF4, FUNC1, 0x208, PULLDOWN, 14, 7, DI, L),
	//#gpio_120_cs
	LOW_POWER(0xF4, FUNC1, 0x20C, PULLDOWN, 15, 0, DI, L),
	//#gpio_121_cs
	LOW_POWER(0xF8, FUNC1, 0x210, PULLDOWN, 15, 1, DI, L),
	//#gpio_122_cs
	LOW_POWER(0xF8, FUNC1, 0x214, PULLDOWN, 15, 2, DI, L),
	//#gpio_123_cs
	LOW_POWER(0xFC, FUNC1, 0x218, PULLDOWN, 15, 3, DI, L),
	//#gpio_124_cs
	LOW_POWER(0xFC, FUNC1, 0x21C, PULLDOWN, 15, 4, DI, L),
	//#gpio_125_cs
	LOW_POWER(0x100, FUNC1, 0x220, NOPULL, 15, 5, DI, L),
	//#gpio_126_cs
	LOW_POWER(0x100, FUNC1, 0x224, NOPULL, 15, 6, DI, L),
	//#gpio_127_cs
	LOW_POWER(0x104, FUNC1, 0x228, NOPULL, 15, 7, DI, L),
	//#gpio_128_cs
	LOW_POWER(0x108, FUNC1, 0x22C, NOPULL, 16, 0, DI, L),
	//#gpio_129_cs
	LOW_POWER(0x10C, FUNC1, 0x230, NOPULL, 16, 1, DI, L),
	//#gpio_130_cs
	LOW_POWER(0x110, FUNC1, 0x234, PULLDOWN, 16, 2, DI, L),
	//#gpio_131_cs
	LOW_POWER(0x114, FUNC1, 0x238, PULLDOWN, 16, 3, DI, L),
	//#gpio_132_cs
	LOW_POWER(0x118, FUNC1, 0x23C, NOPULL, 16, 4, DI, L),
	//#gpio_133_cs
	LOW_POWER(0x11C, FUNC1, 0x240, PULLDOWN, 16, 5, DI, L),
	//#gpio_134_cs
	LOW_POWER(0x120, FUNC1, 0x244, NOPULL, 16, 6, DI, L),
	//#gpio_135_cs
	LOW_POWER(0x124, FUNC1, 0x248, NOPULL, 16, 7, DI, L),
	//#gpio_136_cs
	LOW_POWER(0x128, FUNC1, 0x24C, NOPULL, 17, 0, DI, L),
	//#gpio_137_cs
	LOW_POWER(0x12C, FUNC1, 0x250, PULLUP, 17, 1, DI, L),
	//#gpio_138_cs
	LOW_POWER(0x130, FUNC1, 0x254, PULLUP, 17, 2, DI, L),
	//#gpio_139_cs
	LOW_POWER(0x134, FUNC1, 0x258, PULLDOWN, 17, 3, DI, L),
	//#gpio_140_cs
	LOW_POWER(0x138, FUNC1, 0x25C, NOPULL, 17, 4, DI, L),
	//#gpio_141_cs
	LOW_POWER(0x13C, FUNC1, 0x260, PULLDOWN, 17, 5, DI, L),
	//#gpio_142_cs
	LOW_POWER(0x140, FUNC1, 0x264, PULLDOWN, 17, 6, DI, L),
	//#gpio_143_cs
	LOW_POWER(0x144, FUNC1, 0x268, PULLUP, 17, 7, DI, L),
	//#gpio_144_cs
	LOW_POWER(0x148, FUNC1, 0x26C, NOPULL, 18, 0, DO, H),
	//#gpio_145_cs
	LOW_POWER(0x14C, FUNC1, 0x270, NOPULL, 18, 1, DO, L),
	//#gpio_146_cs
	LOW_POWER(0x14C, FUNC1, 0x274, PULLDOWN, 18, 2, DI, L),
	//#gpio_147_cs
	LOW_POWER(0x150, FUNC1, 0x278, PULLUP, 18, 3, DI, L),
	//#gpio_148_cs
	LOW_POWER(0x150, FUNC1, 0x27C, PULLDOWN, 18, 4, DI, L),
	//#gpio_149_cs
	LOW_POWER(0x154, FUNC1, 0x280, PULLDOWN, 18, 5, DI, L),
	//#gpio_150_cs
	LOW_POWER(0x158, FUNC1, 0x284, PULLDOWN, 18, 6, DI, L),
	//#gpio_151_cs
	LOW_POWER(0x15C, FUNC1, 0x288, PULLDOWN, 18, 7, DI, L),
	//#gpio_152_cs
	LOW_POWER(0x15C, FUNC1, 0x28C, PULLDOWN, 19, 0, DI, L),
	//#gpio_153_cs
	LOW_POWER(0x15C, FUNC1, 0x290, NOPULL, 19, 1, DI, L),
	//#gpio_154_cs
	LOW_POWER(0x160, FUNC1, 0x294, PULLDOWN, 19, 2, DI, L),
	//#gpio_155_cs
	LOW_POWER(0x160, FUNC1, 0x298, PULLDOWN, 19, 3, DI, L),
	//#gpio_156_cs
	LOW_POWER(0x160, FUNC1, 0x0C, PULLDOWN, 19, 4, DI, L),
	//#gpio_157_cs
	LOW_POWER(0x160, FUNC1, 0x10, PULLDOWN, 19, 5, DI, L),
	//#gpio_158_cs
	LOW_POWER(0x160, RESERVE, 0x14, NOPULL, 19, 6, DI, H),
	//#gpio_159_cs
	LOW_POWER(0x160, RESERVE, 0x18, PULLUP, 19, 7, DI, L),
	//#gpio_160_cs
	LOW_POWER(0x164, FUNC1, 0x29C, PULLDOWN, 20, 0, DI, L),
	//#gpio_161_cs
	LOW_POWER(0x164, FUNC1, 0x2A0, PULLDOWN, 20, 1, DI, L),
	//#gpio_162_cs
	LOW_POWER(0x168, FUNC1, 0x2A4, NOPULL, 20, 2, DI, L),
	//#gpio_163_cs
	LOW_POWER(0x168, FUNC1, 0x2A8, NOPULL, 20, 3, DI, L),
	//#gpio_164_cs
	LOW_POWER(0x16C, FUNC1, 0x2AC, NOPULL, 20, 4, DI, L),
	//#gpio_165_cs
	LOW_POWER(0x170, FUNC1, 0x2B0, NOPULL, 20, 5, DI, L),
	//#gpio_166_cs
	LOW_POWER(0x174, FUNC1, 0x2B4, PULLUP, 20, 6, DI, H),
	//#gpio_167_cs
	LOW_POWER(0x174, FUNC1, 0x2B8, NOPULL, 20, 7, DO, H),
	//#gpio_168_cs
	LOW_POWER(0x174, FUNC0, 0x2BC, PULLDOWN, 21, 0, DI, L),
	//#gpio_169_cs
	LOW_POWER(0x174, FUNC1, 0x2C0, NOPULL, 21, 1, DO, L),
	//#gpio_170_cs
	LOW_POWER(0x174, FUNC0, 0x2C4, PULLUP, 21, 2, DI, H),
	//#gpio_171_cs
	LOW_POWER(0x178, FUNC1, 0x2C8, NOPULL, 21, 3, DO, L),
	//#gpio_172_cs
	LOW_POWER(0x17C, FUNC0, 0x2CC, PULLDOWN, 21, 4, DI, L),
	//#gpio_173_cs
	LOW_POWER(0x17C, FUNC0, 0x2D0, PULLDOWN, 21, 5, DI, L),
	//#gpio_174_cs
	LOW_POWER(0x17C, FUNC0, 0x2D4, NOPULL, 21, 6, DO, L),
	//#gpio_175_cs
	LOW_POWER(0x180, FUNC1, 0x2D8, PULLDOWN, 21, 7, DI, L),
};

static struct iocfg_lp iocfg_lookups_g710c[] = {
	//#gpio_002_cs
	LOW_POWER(0x00, FUNC0, 0x24, NOPULL, 0, 2, DO, L),
	//#gpio_003_cs
	LOW_POWER(0x00, FUNC0, 0x28, NOPULL, 0, 3, DO, L),
	//#gpio_004_cs
	LOW_POWER(0x00, FUNC0, 0x2C, PULLDOWN, 0, 4, DI, L),
	//#gpio_005_cs
	LOW_POWER(0x00, FUNC0, 0x30, PULLUP, 0, 5, DI, L),
	//#gpio_006_cs
	LOW_POWER(0x04, FUNC0, 0x34, NOPULL, 0, 6, DO, L),
	//#gpio_007_cs
	LOW_POWER(0x08, FUNC0, 0x38, PULLDOWN, 0, 7, DI, L),
	//#gpio_008_cs
	LOW_POWER(0x0C, FUNC1, 0x3C, NOPULL, 1, 0, DO, L),
	//#gpio_009_cs
	LOW_POWER(0x0C, FUNC1, 0x40, NOPULL, 1, 1, DO, L),
	//#gpio_010_cs
	LOW_POWER(0x0C, FUNC1, 0x44, PULLDOWN, 1, 2, DI, L),
	//#gpio_011_cs
	LOW_POWER(0x0C, FUNC1, 0x48, PULLDOWN, 1, 3, DI, L),
	//#gpio_012_cs
	LOW_POWER(0x0C, FUNC1, 0x4C, PULLDOWN, 1, 4, DI, L),
	//#gpio_013_cs
	LOW_POWER(0x10, FUNC1, 0x50, PULLDOWN, 1, 5, DI, L),
	//#gpio_014_cs
	LOW_POWER(0x14, FUNC1, 0x54, PULLDOWN, 1, 6, DI, L),
	//#gpio_015_cs
	LOW_POWER(0x18, FUNC1, 0x58, PULLDOWN, 1, 7, DI, L),
	//#gpio_016_cs
	LOW_POWER(0x1C, FUNC1, 0x5C, PULLDOWN, 2, 0, DI, L),
	//#gpio_017_cs
	LOW_POWER(0x20, FUNC1, 0x60, PULLDOWN, 2, 1, DI, L),
	//#gpio_018_cs
	LOW_POWER(0x20, FUNC1, 0x64, PULLDOWN, 2, 2, DI, L),
	//#gpio_019_cs
	LOW_POWER(0x20, FUNC1, 0x68, PULLDOWN, 2, 3, DI, L),
	//#gpio_020_cs
	LOW_POWER(0x0C, FUNC1, 0x6C, NOPULL, 2, 4, DO, L),
	//#gpio_021_cs
	LOW_POWER(0x0C, FUNC1, 0x70, NOPULL, 2, 5, DI, L),
	//#gpio_022_cs
	LOW_POWER(0x0C, FUNC1, 0x74, NOPULL, 2, 6, DO, L),
	//#gpio_023_cs
	LOW_POWER(0x0C, FUNC1, 0x78, PULLDOWN, 2, 7, DI, L),
	//#gpio_024_cs
	LOW_POWER(0x0C, FUNC1, 0x7C, NOPULL, 3, 0, DO, H),
	//#gpio_025_cs
	LOW_POWER(0x0C, FUNC1, 0x80, NOPULL, 3, 1, DI, L),
	//#gpio_026_cs
	LOW_POWER(0x0C, FUNC1, 0x84, NOPULL, 3, 2, DI, L),
	//#gpio_027_cs
	LOW_POWER(0x0C, FUNC1, 0x88, NOPULL, 3, 3, DI, L),
	//#gpio_028_cs
	LOW_POWER(0x2C, FUNC1, 0x8C, PULLDOWN, 3, 4, DI, L),
	//#gpio_029_cs
	LOW_POWER(0x2C, FUNC1, 0x90, PULLDOWN, 3, 5, DI, L),
	//#gpio_030_cs
	LOW_POWER(0x2C, FUNC1, 0x94, PULLDOWN, 3, 6, DI, L),
	//#gpio_031_cs
	LOW_POWER(0x2C, FUNC1, 0x98, PULLDOWN, 3, 7, DI, L),
	//#gpio_032_cs
	LOW_POWER(0x2C, FUNC1, 0x9C, PULLDOWN, 4, 0, DI, L),
	//#gpio_033_cs
	LOW_POWER(0x2C, FUNC1, 0xA0, PULLDOWN, 4, 1, DI, L),
	//#gpio_034_cs
	LOW_POWER(0x2C, FUNC1, 0xA4, PULLDOWN, 4, 2, DI, L),
	//#gpio_035_cs
	LOW_POWER(0x2C, FUNC1, 0xA8, PULLDOWN, 4, 3, DI, L),
	//#gpio_036_cs
	LOW_POWER(0x30, FUNC0, 0xAC, PULLDOWN, 4, 4, DI, L),
	//#gpio_037_cs
	LOW_POWER(0x30, FUNC0, 0xB0, PULLDOWN, 4, 5, DI, L),
	//#gpio_038_cs
	LOW_POWER(0x34, FUNC1, 0xB4, PULLDOWN, 4, 6, DI, L),
	//#gpio_039_cs
	LOW_POWER(0x34, FUNC1, 0xB8, PULLDOWN, 4, 7, DI, L),
	//#gpio_040_cs
	LOW_POWER(0x38, FUNC1, 0xBC, PULLDOWN, 5, 0, DI, L),
	//#gpio_041_cs
	LOW_POWER(0x3C, FUNC1, 0xC0, PULLDOWN, 5, 1, DI, L),
	//#gpio_042_cs
	LOW_POWER(0x40, FUNC1, 0xC4, NOPULL, 5, 2, DO, L),
	//#gpio_043_cs
	LOW_POWER(0x40, FUNC1, 0xC8, NOPULL, 5, 3, DO, L),
	//#gpio_044_cs
	LOW_POWER(0x40, FUNC1, 0xCC, PULLDOWN, 5, 4, DI, L),
	//#gpio_045_cs
	LOW_POWER(0x40, FUNC1, 0xD0, PULLDOWN, 5, 5, DI, L),
	//#gpio_046_cs
	LOW_POWER(0x40, FUNC1, 0xD4, PULLDOWN, 5, 6, DI, L),
	//#gpio_047_cs
	LOW_POWER(0x40, FUNC1, 0xD8, PULLDOWN, 5, 7, DI, L),
	//#gpio_048_cs
	LOW_POWER(0x40, FUNC1, 0xDC, PULLDOWN, 6, 0, DI, L),
	//#gpio_049_cs
	LOW_POWER(0x40, FUNC1, 0xE0, PULLDOWN, 6, 1, DI, L),
	//#gpio_050_cs
	LOW_POWER(0x44, FUNC1, 0xE4, PULLDOWN, 6, 2, DI, L),
	//#gpio_051_cs
	LOW_POWER(0x44, FUNC1, 0xE8, PULLDOWN, 6, 3, DI, L),
	//#gpio_052_cs
	LOW_POWER(0x48, FUNC1, 0xEC, PULLDOWN, 6, 4, DI, L),
	//#gpio_053_cs
	LOW_POWER(0x48, FUNC1, 0xF0, PULLDOWN, 6, 5, DI, L),
	//#gpio_054_cs
	LOW_POWER(0x48, FUNC1, 0xF4, PULLDOWN, 6, 6, DI, L),
	//#gpio_055_cs
	LOW_POWER(0x4C, FUNC1, 0xF8, PULLDOWN, 6, 7, DI, L),
	//#gpio_056_cs
	LOW_POWER(0x4C, FUNC1, 0xFC, PULLDOWN, 7, 0, DI, L),
	//#gpio_057_cs
	LOW_POWER(0x50, FUNC1, 0x100, NOPULL, 7, 1, DI, L),
	//#gpio_058_cs
	LOW_POWER(0x54, FUNC1, 0x104, NOPULL, 7, 2, DI, L),
	//#gpio_059_cs
	LOW_POWER(0x58, FUNC1, 0x108, NOPULL, 7, 3, DO, L),
	//#gpio_060_cs
	LOW_POWER(0x5C, FUNC1, 0x10C, NOPULL, 7, 4, DO, L),
	//#gpio_061_cs
	LOW_POWER(0x60, FUNC1, 0x110, PULLDOWN, 7, 5, DI, L),
	//#gpio_062_cs
	LOW_POWER(0x64, FUNC1, 0x114, PULLDOWN, 7, 6, DI, L),
	//#gpio_063_cs
	LOW_POWER(0x68, FUNC1, 0x118, NOPULL, 7, 7, DI, L),
	//#gpio_064_cs
	LOW_POWER(0x6C, FUNC1, 0x11C, NOPULL, 8, 0, DI, L),
	//#gpio_065_cs
	LOW_POWER(0x70, FUNC1, 0x120, NOPULL, 8, 1, DO, L),
	//#gpio_066_cs
	LOW_POWER(0x74, FUNC1, 0x124, PULLDOWN, 8, 2, DI, L),
	//#gpio_067_cs
	LOW_POWER(0x78, FUNC1, 0x128, NOPULL, 8, 3, DO, L),
	//#gpio_068_cs
	LOW_POWER(0x7C, FUNC1, 0x12C, NOPULL, 8, 4, DO, L),
	//#gpio_069_cs
	LOW_POWER(0x80, FUNC1, 0x130, NOPULL, 8, 5, DO, L),
	//#gpio_070_cs
	LOW_POWER(0x84, FUNC1, 0x134, NOPULL, 8, 6, DO, L),
	//#gpio_071_cs
	LOW_POWER(0x88, FUNC1, 0x138, NOPULL, 8, 7, DO, L),
	//#gpio_072_cs
	LOW_POWER(0x8C, FUNC1, 0x13C, PULLDOWN, 9, 0, DI, L),
	//#gpio_073_cs
	LOW_POWER(0x90, FUNC1, 0x140, NOPULL, 9, 1, DO, L),
	//#gpio_074_cs
	LOW_POWER(0x94, FUNC1, 0x144, NOPULL, 9, 2, DO, H),
	//#gpio_075_cs
	LOW_POWER(0x98, FUNC0, 0x148, NOPULL, 9, 3, DO, L),
	//#gpio_076_cs
	LOW_POWER(0x9C, FUNC1, 0x14C, PULLDOWN, 9, 4, DI, L),
	//#gpio_077_cs
	LOW_POWER(0xA0, FUNC1, 0x150, PULLDOWN, 9, 5, DI, L),
	//#gpio_078_cs
	LOW_POWER(0xA4, FUNC1, 0x154, PULLDOWN, 9, 6, DI, L),
	//#gpio_079_cs
	LOW_POWER(0xAC, FUNC0, 0x168, PULLDOWN, 9, 7, DI, L),
	//#gpio_080_cs
	LOW_POWER(0xAC, FUNC0, 0x16C, PULLDOWN, 10, 0, DI, L),
	//#gpio_081_cs
	LOW_POWER(0xAC, FUNC0, 0x170, PULLDOWN, 10, 1, DI, L),
	//#gpio_082_cs
	LOW_POWER(0xAC, FUNC0, 0x174, PULLDOWN, 10, 2, DI, L),
	//#gpio_083_cs
	LOW_POWER(0xB0, FUNC1, 0x178, PULLDOWN, 10, 3, DI, L),
	//#gpio_084_cs
	LOW_POWER(0xB4, FUNC1, 0x17C, NOPULL, 10, 4, DI, L),
	//#gpio_085_cs
	LOW_POWER(0xB8, FUNC1, 0x180, NOPULL, 10, 5, DI, L),
	//#gpio_086_cs
	LOW_POWER(0xB8, FUNC1, 0x184, NOPULL, 10, 6, DI, L),
	//#gpio_087_cs
	LOW_POWER(0xB8, FUNC1, 0x188, NOPULL, 10, 7, DI, L),
	//#gpio_088_cs
	LOW_POWER(0xBC, FUNC1, 0x18C, PULLDOWN, 11, 0, DI, L),
	//#gpio_089_cs
	LOW_POWER(0xBC, FUNC1, 0x190, PULLDOWN, 11, 1, DI, L),
	//#gpio_090_cs
	LOW_POWER(0xBC, FUNC1, 0x194, PULLDOWN, 11, 2, DI, L),
	//#gpio_091_cs
	LOW_POWER(0xBC, FUNC1, 0x198, PULLDOWN, 11, 3, DI, L),
	//#gpio_092_cs
	LOW_POWER(0xBC, FUNC1, 0x19C, PULLDOWN, 11, 4, DI, L),
	//#gpio_093_cs
	LOW_POWER(0xC0, FUNC1, 0x1A0, PULLDOWN, 11, 5, DI, L),
	//#gpio_094_cs
	LOW_POWER(0xC4, FUNC1, 0x1A4, NOPULL, 11, 6, DI, L),
	//#gpio_095_cs
	LOW_POWER(0xC4, FUNC1, 0x1A8, NOPULL, 11, 7, DO, H),
	//#gpio_096_cs
	LOW_POWER(0xC4, FUNC1, 0x1AC, NOPULL, 12, 0, DO, H),
	//#gpio_097_cs
	LOW_POWER(0xC8, FUNC1, 0x1B0, NOPULL, 12, 1, DO, H),
	//#gpio_098_cs
	LOW_POWER(0xC4, FUNC1, 0x1B4, NOPULL, 12, 2, DI, L),
	//#gpio_099_cs
	LOW_POWER(0xC4, FUNC1, 0x1B8, PULLDOWN, 12, 3, DI, L),
	//#gpio_100_cs
	LOW_POWER(0xCC, FUNC1, 0x1BC, PULLDOWN, 12, 4, DI, L),
	//#gpio_101_cs
	LOW_POWER(0xCC, FUNC1, 0x1C0, PULLDOWN, 12, 5, DI, L),
	//#gpio_102_cs
	LOW_POWER(0xCC, FUNC1, 0x1C4, PULLDOWN, 12, 6, DI, L),
	//#gpio_103_cs
	LOW_POWER(0xD0, FUNC1, 0x1C8, PULLDOWN, 12, 7, DI, L),
	//#gpio_104_cs
	LOW_POWER(0xCC, FUNC1, 0x1CC, PULLDOWN, 13, 0, DI, L),
	//#gpio_105_cs
	LOW_POWER(0xCC, FUNC1, 0x1D0, PULLDOWN, 13, 1, DI, L),
	//#gpio_106_cs
	LOW_POWER(0xD4, FUNC1, 0x1D4, NOPULL, 13, 2, DO, L),
	//#gpio_107_cs
	LOW_POWER(0xD4, FUNC1, 0x1D8, PULLDOWN, 13, 3, DI, L),
	//#gpio_108_cs
	LOW_POWER(0xD4, FUNC1, 0x1DC, PULLDOWN, 13, 4, DI, L),
	//#gpio_109_cs
	LOW_POWER(0xD8, FUNC1, 0x1E0, PULLDOWN, 13, 5, DI, L),
	//#gpio_110_cs
	LOW_POWER(0xDC, FUNC1, 0x1E4, NOPULL, 13, 6, DI, L),
	//#gpio_111_cs
	LOW_POWER(0xE0, FUNC1, 0x1E8, PULLDOWN, 13, 7, DI, L),
	//#gpio_112_cs
	LOW_POWER(0xE4, FUNC1, 0x1EC, PULLDOWN, 14, 0, DI, L),
	//#gpio_113_cs
	LOW_POWER(0xE8, FUNC1, 0x1F0, NOPULL, 14, 1, DI, L),
	//#gpio_114_cs
	LOW_POWER(0xE8, FUNC1, 0x1F4, NOPULL, 14, 2, DO, L),
	//#gpio_115_cs
	LOW_POWER(0xE8, FUNC1, 0x1F8, PULLDOWN, 14, 3, DI, L),
	//#gpio_116_cs
	LOW_POWER(0xEC, FUNC1, 0x1FC, NOPULL, 14, 4, DO, L),
	//#gpio_117_cs
	LOW_POWER(0xF0, FUNC1, 0x200, NOPULL, 14, 5, DO, L),
	//#gpio_118_cs
	LOW_POWER(0xF0, FUNC1, 0x204, PULLDOWN, 14, 6, DI, L),
	//#gpio_119_cs
	LOW_POWER(0xF4, FUNC1, 0x208, PULLDOWN, 14, 7, DI, L),
	//#gpio_120_cs
	LOW_POWER(0xF4, FUNC1, 0x20C, PULLDOWN, 15, 0, DI, L),
	//#gpio_121_cs
	LOW_POWER(0xF8, FUNC1, 0x210, NOPULL, 15, 1, DI, L),
	//#gpio_122_cs
	LOW_POWER(0xF8, FUNC1, 0x214, PULLUP, 15, 2, DI, H),
	//#gpio_123_cs
	LOW_POWER(0xFC, FUNC1, 0x218, NOPULL, 15, 3, DI, L),
	//#gpio_124_cs
	LOW_POWER(0xFC, FUNC1, 0x21C, PULLDOWN, 15, 4, DI, L),
	//#gpio_125_cs
	LOW_POWER(0x100, FUNC1, 0x220, PULLDOWN, 15, 5, DI, L),
	//#gpio_126_cs
	LOW_POWER(0x100, FUNC1, 0x224, PULLUP, 15, 6, DI, L),
	//#gpio_127_cs
	LOW_POWER(0x104, FUNC1, 0x228, NOPULL, 15, 7, DI, H),
	//#gpio_128_cs
	LOW_POWER(0x108, FUNC1, 0x22C, PULLDOWN, 16, 0, DI, L),
	//#gpio_129_cs
	LOW_POWER(0x10C, FUNC1, 0x230, NOPULL, 16, 1, DI, L),
	//#gpio_130_cs
	LOW_POWER(0x110, FUNC1, 0x234, NOPULL, 16, 2, DI, L),
	//#gpio_131_cs
	LOW_POWER(0x114, FUNC1, 0x238, PULLDOWN, 16, 3, DI, L),
	//#gpio_132_cs
	LOW_POWER(0x118, FUNC1, 0x23C, PULLDOWN, 16, 4, DI, L),
	//#gpio_133_cs
	LOW_POWER(0x11C, FUNC1, 0x240, PULLDOWN, 16, 5, DI, L),
	//#gpio_134_cs
	LOW_POWER(0x120, FUNC1, 0x244, PULLDOWN, 16, 6, DI, L),
	//#gpio_135_cs
	LOW_POWER(0x124, FUNC1, 0x248, PULLDOWN, 16, 7, DI, L),
	//#gpio_136_cs
	LOW_POWER(0x128, FUNC1, 0x24C, PULLDOWN, 17, 0, DI, L),
	//#gpio_137_cs
	LOW_POWER(0x12C, FUNC1, 0x250, PULLUP, 17, 1, DI, L),
	//#gpio_138_cs
	LOW_POWER(0x130, FUNC1, 0x254, PULLUP, 17, 2, DI, L),
	//#gpio_139_cs
	LOW_POWER(0x134, FUNC1, 0x258, NOPULL, 17, 3, DO, L),
	//#gpio_140_cs
	LOW_POWER(0x138, FUNC1, 0x25C, PULLDOWN, 17, 4, DI, L),
	//#gpio_141_cs
	LOW_POWER(0x13C, FUNC1, 0x260, PULLDOWN, 17, 5, DI, L),
	//#gpio_142_cs
	LOW_POWER(0x140, FUNC1, 0x264, PULLDOWN, 17, 6, DI, L),
	//#gpio_143_cs
	LOW_POWER(0x144, FUNC1, 0x268, PULLDOWN, 17, 7, DI, L),
	//#gpio_144_cs
	LOW_POWER(0x148, FUNC1, 0x26C, PULLDOWN, 18, 0, DI, L),
	//#gpio_145_cs
	LOW_POWER(0x14C, FUNC1, 0x270, NOPULL, 18, 1, DO, H),
	//#gpio_146_cs
	LOW_POWER(0x14C, FUNC1, 0x274, PULLDOWN, 18, 2, DI, L),
	//#gpio_147_cs
	LOW_POWER(0x150, FUNC1, 0x278, PULLDOWN, 18, 3, DI, L),
	//#gpio_148_cs
	LOW_POWER(0x150, FUNC1, 0x27C, PULLDOWN, 18, 4, DI, L),
	//#gpio_149_cs
	LOW_POWER(0x154, FUNC1, 0x280, PULLDOWN, 18, 5, DI, L),
	//#gpio_150_cs
	LOW_POWER(0x158, FUNC1, 0x284, PULLDOWN, 18, 6, DI, L),
	//#gpio_151_cs
	LOW_POWER(0x15C, FUNC1, 0x288, PULLDOWN, 18, 7, DI, L),
	//#gpio_152_cs
	LOW_POWER(0x15C, FUNC1, 0x28C, PULLDOWN, 19, 0, DI, L),
	//#gpio_153_cs
	LOW_POWER(0x15C, FUNC1, 0x290, PULLDOWN, 19, 1, DI, L),
	//#gpio_154_cs
	LOW_POWER(0x160, FUNC1, 0x294, NOPULL, 19, 2, DI, L),
	//#gpio_155_cs
	LOW_POWER(0x160, FUNC1, 0x298, NOPULL, 19, 3, DI, L),
	//#gpio_156_cs
	LOW_POWER(0x160, FUNC0, 0x0C, NOPULL, 19, 4, DO, H),
	//#gpio_157_cs
	LOW_POWER(0x160, FUNC0, 0x10, PULLUP, 19, 5, DI, L),
	//#gpio_158_cs
	LOW_POWER(0x160, FUNC0, 0x14, NOPULL, 19, 6, DO, H),
	//#gpio_159_cs
	LOW_POWER(0x160, FUNC0, 0x18, PULLUP, 19, 7, DI, L),
	//#gpio_160_cs
	LOW_POWER(0x164, FUNC1, 0x29C, NOPULL, 20, 0, DI, L),
	//#gpio_161_cs
	LOW_POWER(0x164, FUNC1, 0x2A0, NOPULL, 20, 1, DI, L),
	//#gpio_162_cs
	LOW_POWER(0x168, FUNC1, 0x2A4, NOPULL, 20, 2, DI, L),
	//#gpio_163_cs
	LOW_POWER(0x168, FUNC1, 0x2A8, NOPULL, 20, 3, DI, L),
	//#gpio_164_cs
	LOW_POWER(0x16C, FUNC1, 0x2AC, NOPULL, 20, 4, DI, L),
	//#gpio_165_cs
	LOW_POWER(0x170, FUNC1, 0x2B0, NOPULL, 20, 5, DI, L),
	//#gpio_166_cs
	LOW_POWER(0x174, FUNC0, 0x2B4, PULLUP, 20, 6, DI, L),
	//#gpio_167_cs
	LOW_POWER(0x174, FUNC0, 0x2B8, NOPULL, 20, 7, DO, H),
	//#gpio_168_cs
	LOW_POWER(0x174, FUNC0, 0x2BC, NOPULL, 21, 0, DO, L),
	//#gpio_169_cs
	LOW_POWER(0x174, FUNC0, 0x2C0, NOPULL, 21, 1, DO, H),
	//#gpio_170_cs
	LOW_POWER(0x174, FUNC0, 0x2C4, PULLUP, 21, 2, DI, L),
	//#gpio_171_cs
	LOW_POWER(0x178, FUNC1, 0x2C8, NOPULL, 21, 3, DO, L),
	//#gpio_172_cs
	LOW_POWER(0x17C, FUNC0, 0x2CC, PULLDOWN, 21, 4, DI, L),
	//#gpio_173_cs
	LOW_POWER(0x17C, FUNC0, 0x2D0, PULLDOWN, 21, 5, DI, L),
	//#gpio_174_cs
	LOW_POWER(0x17C, FUNC0, 0x2D4, NOPULL, 21, 6, DO, L),
	//#gpio_175_cs
	LOW_POWER(0x180, FUNC1, 0x2D8, PULLDOWN, 21, 7, DI, L),
};

static struct iocfg_lp iocfg_lookups_g710c_vb[] = {
	//#gpio_002_cs
	LOW_POWER(0x00, FUNC0, 0x24, NOPULL, 0, 2, DO, L),
	//#gpio_003_cs
	LOW_POWER(0x00, FUNC0, 0x28, NOPULL, 0, 3, DO, L),
	//#gpio_004_cs
	LOW_POWER(0x00, FUNC0, 0x2C, PULLDOWN, 0, 4, DI, L),
	//#gpio_005_cs
	LOW_POWER(0x00, FUNC0, 0x30, PULLUP, 0, 5, DI, L),
	//#gpio_006_cs
	LOW_POWER(0x04, FUNC0, 0x34, NOPULL, 0, 6, DO, L),
	//#gpio_007_cs
	LOW_POWER(0x08, FUNC0, 0x38, PULLDOWN, 0, 7, DI, L),
	//#gpio_008_cs
	LOW_POWER(0x0C, FUNC1, 0x3C, NOPULL, 1, 0, DO, L),
	//#gpio_009_cs
	LOW_POWER(0x0C, FUNC1, 0x40, NOPULL, 1, 1, DO, L),
	//#gpio_010_cs
	LOW_POWER(0x0C, FUNC1, 0x44, PULLDOWN, 1, 2, DI, L),
	//#gpio_011_cs
	LOW_POWER(0x0C, FUNC1, 0x48, PULLDOWN, 1, 3, DI, L),
	//#gpio_012_cs
	LOW_POWER(0x0C, FUNC1, 0x4C, PULLDOWN, 1, 4, DI, L),
	//#gpio_013_cs
	LOW_POWER(0x10, FUNC1, 0x50, PULLDOWN, 1, 5, DI, L),
	//#gpio_014_cs
	LOW_POWER(0x14, FUNC1, 0x54, PULLDOWN, 1, 6, DI, L),
	//#gpio_015_cs
	LOW_POWER(0x18, FUNC1, 0x58, PULLDOWN, 1, 7, DI, L),
	//#gpio_016_cs
	LOW_POWER(0x1C, FUNC1, 0x5C, PULLDOWN, 2, 0, DI, L),
	//#gpio_017_cs
	LOW_POWER(0x20, FUNC1, 0x60, PULLDOWN, 2, 1, DI, L),
	//#gpio_018_cs
	LOW_POWER(0x20, FUNC1, 0x64, PULLDOWN, 2, 2, DI, L),
	//#gpio_019_cs
	LOW_POWER(0x20, FUNC1, 0x68, PULLDOWN, 2, 3, DI, L),
	//#gpio_020_cs
	LOW_POWER(0x0C, FUNC1, 0x6C, NOPULL, 2, 4, DO, L),
	//#gpio_021_cs
	LOW_POWER(0x0C, FUNC1, 0x70, NOPULL, 2, 5, DI, L),
	//#gpio_022_cs
	LOW_POWER(0x0C, FUNC1, 0x74, NOPULL, 2, 6, DO, L),
	//#gpio_023_cs
	LOW_POWER(0x0C, FUNC1, 0x78, PULLDOWN, 2, 7, DI, L),
	//#gpio_024_cs
	LOW_POWER(0x0C, FUNC1, 0x7C, NOPULL, 3, 0, DO, H),
	//#gpio_025_cs
	LOW_POWER(0x0C, FUNC1, 0x80, NOPULL, 3, 1, DI, L),
	//#gpio_026_cs
	LOW_POWER(0x0C, FUNC1, 0x84, NOPULL, 3, 2, DI, L),
	//#gpio_027_cs
	LOW_POWER(0x0C, FUNC1, 0x88, NOPULL, 3, 3, DI, L),
	//#gpio_028_cs
	LOW_POWER(0x2C, FUNC1, 0x8C, PULLDOWN, 3, 4, DI, L),
	//#gpio_029_cs
	LOW_POWER(0x2C, FUNC1, 0x90, PULLDOWN, 3, 5, DI, L),
	//#gpio_030_cs
	LOW_POWER(0x2C, FUNC1, 0x94, PULLDOWN, 3, 6, DI, L),
	//#gpio_031_cs
	LOW_POWER(0x2C, FUNC1, 0x98, PULLDOWN, 3, 7, DI, L),
	//#gpio_032_cs
	LOW_POWER(0x2C, FUNC1, 0x9C, PULLDOWN, 4, 0, DI, L),
	//#gpio_033_cs
	LOW_POWER(0x2C, FUNC1, 0xA0, PULLDOWN, 4, 1, DI, L),
	//#gpio_034_cs
	LOW_POWER(0x2C, FUNC1, 0xA4, PULLDOWN, 4, 2, DI, L),
	//#gpio_035_cs
	LOW_POWER(0x2C, FUNC1, 0xA8, PULLDOWN, 4, 3, DI, L),
	//#gpio_036_cs
	LOW_POWER(0x30, FUNC0, 0xAC, PULLDOWN, 4, 4, DI, L),
	//#gpio_037_cs
	LOW_POWER(0x30, FUNC0, 0xB0, PULLDOWN, 4, 5, DI, L),
	//#gpio_038_cs
	LOW_POWER(0x34, FUNC1, 0xB4, PULLDOWN, 4, 6, DI, L),
	//#gpio_039_cs
	LOW_POWER(0x34, FUNC1, 0xB8, PULLDOWN, 4, 7, DI, L),
	//#gpio_040_cs
	LOW_POWER(0x38, FUNC1, 0xBC, PULLDOWN, 5, 0, DI, L),
	//#gpio_041_cs
	LOW_POWER(0x3C, FUNC1, 0xC0, PULLDOWN, 5, 1, DI, L),
	//#gpio_042_cs
	LOW_POWER(0x40, FUNC1, 0xC4, NOPULL, 5, 2, DO, L),
	//#gpio_043_cs
	LOW_POWER(0x40, FUNC1, 0xC8, NOPULL, 5, 3, DO, L),
	//#gpio_044_cs
	LOW_POWER(0x40, FUNC1, 0xCC, PULLDOWN, 5, 4, DI, L),
	//#gpio_045_cs
	LOW_POWER(0x40, FUNC1, 0xD0, PULLDOWN, 5, 5, DI, L),
	//#gpio_046_cs
	LOW_POWER(0x40, FUNC1, 0xD4, PULLDOWN, 5, 6, DI, L),
	//#gpio_047_cs
	LOW_POWER(0x40, FUNC1, 0xD8, PULLDOWN, 5, 7, DI, L),
	//#gpio_048_cs
	LOW_POWER(0x40, FUNC1, 0xDC, PULLDOWN, 6, 0, DI, L),
	//#gpio_049_cs
	LOW_POWER(0x40, FUNC1, 0xE0, PULLDOWN, 6, 1, DI, L),
	//#gpio_050_cs
	LOW_POWER(0x44, FUNC1, 0xE4, PULLDOWN, 6, 2, DI, L),
	//#gpio_051_cs
	LOW_POWER(0x44, FUNC1, 0xE8, PULLDOWN, 6, 3, DI, L),
	//#gpio_052_cs
	LOW_POWER(0x48, FUNC1, 0xEC, PULLDOWN, 6, 4, DI, L),
	//#gpio_053_cs
	LOW_POWER(0x48, FUNC1, 0xF0, PULLDOWN, 6, 5, DI, L),
	//#gpio_054_cs
	LOW_POWER(0x48, FUNC1, 0xF4, PULLDOWN, 6, 6, DI, L),
	//#gpio_055_cs
	LOW_POWER(0x4C, FUNC1, 0xF8, PULLDOWN, 6, 7, DI, L),
	//#gpio_056_cs
	LOW_POWER(0x4C, FUNC1, 0xFC, PULLDOWN, 7, 0, DI, L),
	//#gpio_057_cs
	LOW_POWER(0x50, FUNC1, 0x100, NOPULL, 7, 1, DI, L),
	//#gpio_058_cs
	LOW_POWER(0x54, FUNC1, 0x104, NOPULL, 7, 2, DI, L),
	//#gpio_059_cs
	LOW_POWER(0x58, FUNC1, 0x108, NOPULL, 7, 3, DO, L),
	//#gpio_060_cs
	LOW_POWER(0x5C, FUNC1, 0x10C, NOPULL, 7, 4, DO, L),
	//#gpio_061_cs
	LOW_POWER(0x60, FUNC1, 0x110, PULLDOWN, 7, 5, DI, L),
	//#gpio_062_cs
	LOW_POWER(0x64, FUNC1, 0x114, PULLDOWN, 7, 6, DI, L),
	//#gpio_063_cs
	LOW_POWER(0x68, FUNC1, 0x118, NOPULL, 7, 7, DI, L),
	//#gpio_064_cs
	LOW_POWER(0x6C, FUNC1, 0x11C, NOPULL, 8, 0, DI, L),
	//#gpio_065_cs
	LOW_POWER(0x70, FUNC1, 0x120, NOPULL, 8, 1, DO, L),
	//#gpio_066_cs
	LOW_POWER(0x74, FUNC1, 0x124, PULLDOWN, 8, 2, DI, L),
	//#gpio_067_cs
	LOW_POWER(0x78, FUNC1, 0x128, NOPULL, 8, 3, DO, L),
	//#gpio_068_cs
	LOW_POWER(0x7C, FUNC1, 0x12C, NOPULL, 8, 4, DO, L),
	//#gpio_069_cs
	LOW_POWER(0x80, FUNC1, 0x130, NOPULL, 8, 5, DO, L),
	//#gpio_070_cs
	LOW_POWER(0x84, FUNC1, 0x134, NOPULL, 8, 6, DO, L),
	//#gpio_071_cs
	LOW_POWER(0x88, FUNC1, 0x138, NOPULL, 8, 7, DO, L),
	//#gpio_072_cs
	LOW_POWER(0x8C, FUNC1, 0x13C, PULLDOWN, 9, 0, DI, L),
	//#gpio_073_cs
	LOW_POWER(0x90, FUNC1, 0x140, NOPULL, 9, 1, DO, L),
	//#gpio_074_cs
	LOW_POWER(0x94, FUNC1, 0x144, NOPULL, 9, 2, DO, H),
	//#gpio_075_cs
	LOW_POWER(0x98, FUNC0, 0x148, NOPULL, 9, 3, DO, L),
	//#gpio_076_cs
	LOW_POWER(0x9C, FUNC1, 0x14C, PULLDOWN, 9, 4, DI, L),
	//#gpio_077_cs
	LOW_POWER(0xA0, FUNC1, 0x150, PULLDOWN, 9, 5, DI, L),
	//#gpio_078_cs
	LOW_POWER(0xA4, FUNC1, 0x154, PULLDOWN, 9, 6, DI, L),
	//#gpio_079_cs
	LOW_POWER(0xAC, FUNC0, 0x168, PULLDOWN, 9, 7, DI, L),
	//#gpio_080_cs
	LOW_POWER(0xAC, FUNC0, 0x16C, PULLDOWN, 10, 0, DI, L),
	//#gpio_081_cs
	LOW_POWER(0xAC, FUNC0, 0x170, PULLDOWN, 10, 1, DI, L),
	//#gpio_082_cs
	LOW_POWER(0xAC, FUNC0, 0x174, PULLDOWN, 10, 2, DI, L),
	//#gpio_083_cs
	LOW_POWER(0xB0, FUNC1, 0x178, PULLDOWN, 10, 3, DI, L),
	//#gpio_084_cs
	LOW_POWER(0xB4, FUNC1, 0x17C, NOPULL, 10, 4, DI, L),
	//#gpio_085_cs
	LOW_POWER(0xB8, FUNC1, 0x180, NOPULL, 10, 5, DI, L),
	//#gpio_086_cs
	LOW_POWER(0xB8, FUNC1, 0x184, NOPULL, 10, 6, DI, L),
	//#gpio_087_cs
	LOW_POWER(0xB8, FUNC1, 0x188, NOPULL, 10, 7, DI, L),
	//#gpio_088_cs
	LOW_POWER(0xBC, FUNC1, 0x18C, PULLDOWN, 11, 0, DI, L),
	//#gpio_089_cs
	LOW_POWER(0xBC, FUNC1, 0x190, PULLDOWN, 11, 1, DI, L),
	//#gpio_090_cs
	LOW_POWER(0xBC, FUNC1, 0x194, PULLDOWN, 11, 2, DI, L),
	//#gpio_091_cs
	LOW_POWER(0xBC, FUNC1, 0x198, PULLDOWN, 11, 3, DI, L),
	//#gpio_092_cs
	LOW_POWER(0xBC, FUNC1, 0x19C, PULLDOWN, 11, 4, DI, L),
	//#gpio_093_cs
	LOW_POWER(0xC0, FUNC1, 0x1A0, PULLDOWN, 11, 5, DI, L),
	//#gpio_094_cs
	LOW_POWER(0xC4, FUNC1, 0x1A4, NOPULL, 11, 6, DI, L),
	//#gpio_095_cs
	LOW_POWER(0xC4, FUNC1, 0x1A8, NOPULL, 11, 7, DO, H),
	//#gpio_096_cs
	LOW_POWER(0xC4, FUNC1, 0x1AC, NOPULL, 12, 0, DO, H),
	//#gpio_097_cs
	LOW_POWER(0xC8, FUNC1, 0x1B0, NOPULL, 12, 1, DO, H),
	//#gpio_098_cs
	LOW_POWER(0xC4, FUNC1, 0x1B4, NOPULL, 12, 2, DI, L),
	//#gpio_099_cs
	LOW_POWER(0xC4, FUNC1, 0x1B8, PULLDOWN, 12, 3, DI, L),
	//#gpio_100_cs
	LOW_POWER(0xCC, FUNC1, 0x1BC, PULLDOWN, 12, 4, DI, L),
	//#gpio_101_cs
	LOW_POWER(0xCC, FUNC1, 0x1C0, PULLDOWN, 12, 5, DI, L),
	//#gpio_102_cs
	LOW_POWER(0xCC, FUNC1, 0x1C4, PULLDOWN, 12, 6, DI, L),
	//#gpio_103_cs
	LOW_POWER(0xD0, FUNC1, 0x1C8, PULLDOWN, 12, 7, DI, L),
	//#gpio_104_cs
	LOW_POWER(0xCC, FUNC1, 0x1CC, PULLDOWN, 13, 0, DI, L),
	//#gpio_105_cs
	LOW_POWER(0xCC, FUNC1, 0x1D0, PULLDOWN, 13, 1, DI, L),
	//#gpio_106_cs
	LOW_POWER(0xD4, FUNC1, 0x1D4, NOPULL, 13, 2, DO, L),
	//#gpio_107_cs
	LOW_POWER(0xD4, FUNC1, 0x1D8, PULLDOWN, 13, 3, DI, L),
	//#gpio_108_cs
	LOW_POWER(0xD4, FUNC1, 0x1DC, PULLDOWN, 13, 4, DI, L),
	//#gpio_109_cs
	LOW_POWER(0xD8, FUNC1, 0x1E0, PULLDOWN, 13, 5, DI, L),
	//#gpio_110_cs
	LOW_POWER(0xDC, FUNC1, 0x1E4, NOPULL, 13, 6, DI, L),
	//#gpio_111_cs
	LOW_POWER(0xE0, FUNC1, 0x1E8, PULLDOWN, 13, 7, DI, L),
	//#gpio_112_cs
	LOW_POWER(0xE4, FUNC1, 0x1EC, PULLDOWN, 14, 0, DI, L),
	//#gpio_113_cs
	LOW_POWER(0xE8, FUNC1, 0x1F0, NOPULL, 14, 1, DI, L),
	//#gpio_114_cs
	LOW_POWER(0xE8, FUNC1, 0x1F4, NOPULL, 14, 2, DO, L),
	//#gpio_115_cs
	LOW_POWER(0xE8, FUNC1, 0x1F8, PULLDOWN, 14, 3, DI, L),
	//#gpio_116_cs
	LOW_POWER(0xEC, FUNC1, 0x1FC, NOPULL, 14, 4, DO, L),
	//#gpio_117_cs
	LOW_POWER(0xF0, FUNC1, 0x200, NOPULL, 14, 5, DO, L),
	//#gpio_118_cs
	LOW_POWER(0xF0, FUNC1, 0x204, PULLDOWN, 14, 6, DI, L),
	//#gpio_119_cs
	LOW_POWER(0xF4, FUNC1, 0x208, PULLDOWN, 14, 7, DI, L),
	//#gpio_120_cs
	LOW_POWER(0xF4, FUNC1, 0x20C, PULLDOWN, 15, 0, DI, L),
	//#gpio_121_cs
	LOW_POWER(0xF8, FUNC1, 0x210, NOPULL, 15, 1, DI, L),
	//#gpio_122_cs
	LOW_POWER(0xF8, FUNC1, 0x214, PULLUP, 15, 2, DI, H),
	//#gpio_123_cs
	LOW_POWER(0xFC, FUNC1, 0x218, NOPULL, 15, 3, DI, L),
	//#gpio_124_cs
	LOW_POWER(0xFC, FUNC1, 0x21C, PULLDOWN, 15, 4, DI, L),
	//#gpio_125_cs
	LOW_POWER(0x100, FUNC1, 0x220, PULLDOWN, 15, 5, DI, L),
	//#gpio_126_cs
	LOW_POWER(0x100, FUNC1, 0x224, PULLUP, 15, 6, DI, L),
	//#gpio_127_cs
	LOW_POWER(0x104, FUNC1, 0x228, NOPULL, 15, 7, DI, H),
	//#gpio_128_cs
	LOW_POWER(0x108, FUNC1, 0x22C, PULLDOWN, 16, 0, DI, L),
	//#gpio_129_cs
	LOW_POWER(0x10C, FUNC1, 0x230, NOPULL, 16, 1, DI, L),
	//#gpio_130_cs
	LOW_POWER(0x110, FUNC1, 0x234, NOPULL, 16, 2, DI, L),
	//#gpio_131_cs
	LOW_POWER(0x114, FUNC1, 0x238, PULLDOWN, 16, 3, DI, L),
	//#gpio_132_cs
	LOW_POWER(0x118, FUNC1, 0x23C, PULLDOWN, 16, 4, DI, L),
	//#gpio_133_cs
	LOW_POWER(0x11C, FUNC1, 0x240, PULLDOWN, 16, 5, DI, L),
	//#gpio_134_cs
	LOW_POWER(0x120, FUNC1, 0x244, PULLDOWN, 16, 6, DI, L),
	//#gpio_135_cs
	LOW_POWER(0x124, FUNC1, 0x248, PULLDOWN, 16, 7, DI, L),
	//#gpio_136_cs
	LOW_POWER(0x128, FUNC1, 0x24C, PULLDOWN, 17, 0, DI, L),
	//#gpio_137_cs
	LOW_POWER(0x12C, FUNC1, 0x250, PULLUP, 17, 1, DI, L),
	//#gpio_138_cs
	LOW_POWER(0x130, FUNC1, 0x254, PULLUP, 17, 2, DI, L),
	//#gpio_139_cs
	LOW_POWER(0x134, FUNC1, 0x258, NOPULL, 17, 3, DO, L),
	//#gpio_140_cs
	LOW_POWER(0x138, FUNC1, 0x25C, PULLDOWN, 17, 4, DI, L),
	//#gpio_141_cs
	LOW_POWER(0x13C, FUNC1, 0x260, PULLDOWN, 17, 5, DI, L),
	//#gpio_142_cs
	LOW_POWER(0x140, FUNC1, 0x264, PULLDOWN, 17, 6, DI, L),
	//#gpio_143_cs
	LOW_POWER(0x144, FUNC1, 0x268, PULLDOWN, 17, 7, DI, L),
	//#gpio_144_cs
	LOW_POWER(0x148, FUNC1, 0x26C, PULLDOWN, 18, 0, DI, L),
	//#gpio_145_cs
	LOW_POWER(0x14C, FUNC1, 0x270, NOPULL, 18, 1, DO, H),
	//#gpio_146_cs
	LOW_POWER(0x14C, FUNC1, 0x274, PULLDOWN, 18, 2, DI, L),
	//#gpio_147_cs
	LOW_POWER(0x150, FUNC1, 0x278, PULLDOWN, 18, 3, DI, L),
	//#gpio_148_cs
	LOW_POWER(0x150, FUNC1, 0x27C, PULLDOWN, 18, 4, DI, L),
	//#gpio_149_cs
	LOW_POWER(0x154, FUNC1, 0x280, PULLDOWN, 18, 5, DI, L),
	//#gpio_150_cs
	LOW_POWER(0x158, FUNC1, 0x284, PULLDOWN, 18, 6, DI, L),
	//#gpio_151_cs
	LOW_POWER(0x15C, FUNC1, 0x288, PULLDOWN, 18, 7, DI, L),
	//#gpio_152_cs
	LOW_POWER(0x15C, FUNC1, 0x28C, PULLDOWN, 19, 0, DI, L),
	//#gpio_153_cs
	LOW_POWER(0x15C, FUNC1, 0x290, PULLDOWN, 19, 1, DI, L),
	//#gpio_154_cs
	LOW_POWER(0x160, FUNC1, 0x294, NOPULL, 19, 2, DI, L),
	//#gpio_155_cs
	LOW_POWER(0x160, FUNC1, 0x298, NOPULL, 19, 3, DI, L),
	//#gpio_156_cs
	LOW_POWER(0x160, FUNC0, 0x0C, NOPULL, 19, 4, DO, H),
	//#gpio_157_cs
	LOW_POWER(0x160, FUNC0, 0x10, PULLUP, 19, 5, DI, L),
	//#gpio_158_cs
	LOW_POWER(0x160, FUNC0, 0x14, NOPULL, 19, 6, DO, H),
	//#gpio_159_cs
	LOW_POWER(0x160, FUNC0, 0x18, PULLUP, 19, 7, DI, L),
	//#gpio_160_cs
	LOW_POWER(0x164, FUNC1, 0x29C, NOPULL, 20, 0, DI, L),
	//#gpio_161_cs
	LOW_POWER(0x164, FUNC1, 0x2A0, NOPULL, 20, 1, DI, L),
	//#gpio_162_cs
	LOW_POWER(0x168, FUNC1, 0x2A4, NOPULL, 20, 2, DI, L),
	//#gpio_163_cs
	LOW_POWER(0x168, FUNC1, 0x2A8, NOPULL, 20, 3, DI, L),
	//#gpio_164_cs
	LOW_POWER(0x16C, FUNC1, 0x2AC, NOPULL, 20, 4, DI, L),
	//#gpio_165_cs
	LOW_POWER(0x170, FUNC1, 0x2B0, NOPULL, 20, 5, DI, L),
	//#gpio_166_cs
	LOW_POWER(0x174, FUNC0, 0x2B4, PULLUP, 20, 6, DI, L),
	//#gpio_167_cs
	LOW_POWER(0x174, FUNC0, 0x2B8, NOPULL, 20, 7, DO, H),
	//#gpio_168_cs
	LOW_POWER(0x174, FUNC0, 0x2BC, NOPULL, 21, 0, DO, L),
	//#gpio_169_cs
	LOW_POWER(0x174, FUNC0, 0x2C0, NOPULL, 21, 1, DO, H),
	//#gpio_170_cs
	LOW_POWER(0x174, FUNC0, 0x2C4, PULLUP, 21, 2, DI, L),
	//#gpio_171_cs
	LOW_POWER(0x178, FUNC1, 0x2C8, NOPULL, 21, 3, DO, L),
	//#gpio_172_cs
	LOW_POWER(0x17C, FUNC0, 0x2CC, PULLDOWN, 21, 4, DI, L),
	//#gpio_173_cs
	LOW_POWER(0x17C, FUNC0, 0x2D0, PULLDOWN, 21, 5, DI, L),
	//#gpio_174_cs
	LOW_POWER(0x17C, FUNC0, 0x2D4, NOPULL, 21, 6, DO, L),
	//#gpio_175_cs
	LOW_POWER(0x180, FUNC1, 0x2D8, PULLDOWN, 21, 7, DI, L),
};

struct iocfg_lp *io_suspend_config_tables[] = {
	[E_IOMUX_PALTFORM_ES] = iocfg_lookups_es,
	[E_IOMUX_PALTFORM_CS] = iocfg_lookups_cs,
	[E_IOMUX_PHONE_ES] = iocfg_lookups_u9510_es,
	[E_IOMUX_PHONE_CS] = iocfg_lookups_u9510_cs,
	[E_IOMUX_PHONE_C9800D] = iocfg_lookups_c9800d,
	[E_IOMUX_PHONE_U9700L] = iocfg_lookups_u9700l,
	[E_IOMUX_PHONE_U9900] = iocfg_lookups_u9900,
	[E_IOMUX_PHONE_U9701L] = iocfg_lookups_u9701l,
	[E_IOMUX_PHONE_G710C] = iocfg_lookups_g710c,
	[E_IOMUX_PHONE_G710C_VB] = iocfg_lookups_g710c_vb,
	[E_IOMUX_MAX] = NULL,
};

#endif
